examples/audio/audio_module_playing.c:64:11: style: The scope of the variable 'timePlayed' can be reduced. [variableScope]
    float timePlayed = 0.0f;
          ^
examples/audio/audio_module_playing.c:64:22: style: Variable 'timePlayed' is assigned a value that is never used. [unreadVariable]
    float timePlayed = 0.0f;
                     ^
examples/audio/audio_music_stream.c:34:11: style: The scope of the variable 'timePlayed' can be reduced. [variableScope]
    float timePlayed = 0.0f;        // Time played normalized [0.0f..1.0f]
          ^
examples/audio/audio_music_stream.c:34:22: style: Variable 'timePlayed' is assigned a value that is never used. [unreadVariable]
    float timePlayed = 0.0f;        // Time played normalized [0.0f..1.0f]
                     ^
examples/audio/audio_raw_stream.c:84:27: style: Variable 'mousePosition' is assigned a value that is never used. [unreadVariable]
    Vector2 mousePosition = { -100.0f, -100.0f };
                          ^
examples/audio/audio_raw_stream.c:98:20: style: Variable 'waveLength' is assigned a value that is never used. [unreadVariable]
    int waveLength = 1;
                   ^
examples/audio/audio_stream_effects.c:52:11: style: The scope of the variable 'timePlayed' can be reduced. [variableScope]
    float timePlayed = 0.0f;        // Time played normalized [0.0f..1.0f]
          ^
examples/audio/audio_stream_effects.c:52:22: style: Variable 'timePlayed' is assigned a value that is never used. [unreadVariable]
    float timePlayed = 0.0f;        // Time played normalized [0.0f..1.0f]
                     ^
examples/core/core_2d_camera.c:49:19: style: Variable 'camera.target' is assigned a value that is never used. [unreadVariable]
    camera.target = (Vector2){ player.x + 20.0f, player.y + 20.0f };
                  ^
examples/core/core_2d_camera_platformer.c:192:25: style: Variable 'player->canJump' is reassigned a value before the old one has been used. [redundantAssignment]
        player->canJump = false;
                        ^
examples/core/core_2d_camera_platformer.c:168:25: note: player->canJump is assigned
        player->canJump = false;
                        ^
examples/core/core_2d_camera_platformer.c:192:25: note: player->canJump is overwritten
        player->canJump = false;
                        ^
examples/core/core_2d_camera_platformer.c:229:18: style: The scope of the variable 'minSpeed' can be reduced. [variableScope]
    static float minSpeed = 30;
                 ^
examples/core/core_2d_camera_platformer.c:231:18: style: The scope of the variable 'fractionSpeed' can be reduced. [variableScope]
    static float fractionSpeed = 0.8f;
                 ^
examples/core/core_2d_camera_platformer.c:246:18: style: The scope of the variable 'evenOutSpeed' can be reduced. [variableScope]
    static float evenOutSpeed = 700;
                 ^
examples/core/core_custom_frame_control.c:45:12: style: The scope of the variable 'currentTime' can be reduced. [variableScope]
    double currentTime = 0.0;           // Current time measure
           ^
examples/core/core_custom_frame_control.c:46:12: style: The scope of the variable 'updateDrawTime' can be reduced. [variableScope]
    double updateDrawTime = 0.0;        // Update + Draw time
           ^
examples/core/core_custom_frame_control.c:45:24: style: Variable 'currentTime' is assigned a value that is never used. [unreadVariable]
    double currentTime = 0.0;           // Current time measure
                       ^
examples/core/core_custom_frame_control.c:46:27: style: Variable 'updateDrawTime' is assigned a value that is never used. [unreadVariable]
    double updateDrawTime = 0.0;        // Update + Draw time
                          ^
examples/core/core_custom_frame_control.c:47:21: style: Variable 'waitTime' is assigned a value that is never used. [unreadVariable]
    double waitTime = 0.0;              // Wait time (if target fps required)
                    ^
examples/core/core_input_gestures.c:30:27: style: Variable 'touchPosition' is assigned a value that is never used. [unreadVariable]
    Vector2 touchPosition = { 0, 0 };
                          ^
examples/core/core_input_gestures.c:37:21: style: Variable 'lastGesture' is assigned a value that is never used. [unreadVariable]
    int lastGesture = GESTURE_NONE;
                    ^
examples/core/core_input_mouse.c:28:26: style: Variable 'ballPosition' is assigned a value that is never used. [unreadVariable]
    Vector2 ballPosition = { -100.0f, -100.0f };
                         ^
examples/core/core_smooth_pixelperfect.c:58:11: style: The scope of the variable 'cameraX' can be reduced. [variableScope]
    float cameraX = 0.0f;
          ^
examples/core/core_smooth_pixelperfect.c:59:11: style: The scope of the variable 'cameraY' can be reduced. [variableScope]
    float cameraY = 0.0f;
          ^
examples/core/core_smooth_pixelperfect.c:58:19: style: Variable 'cameraX' is assigned a value that is never used. [unreadVariable]
    float cameraX = 0.0f;
                  ^
examples/core/core_smooth_pixelperfect.c:59:19: style: Variable 'cameraY' is assigned a value that is never used. [unreadVariable]
    float cameraY = 0.0f;
                  ^
examples/core/core_storage_values.c:108:18: style: The scope of the variable 'newDataSize' can be reduced. [variableScope]
    unsigned int newDataSize = 0;
                 ^
examples/core/core_storage_values.c:108:30: style: Variable 'newDataSize' is assigned a value that is never used. [unreadVariable]
    unsigned int newDataSize = 0;
                             ^
examples/core/core_world_screen.c:37:32: style: Variable 'cubeScreenPosition' is assigned a value that is never used. [unreadVariable]
    Vector2 cubeScreenPosition = { 0.0f, 0.0f };
                               ^
examples/models/models_billboard.c:54:11: style: The scope of the variable 'distanceStatic' can be reduced. [variableScope]
    float distanceStatic;
          ^
examples/models/models_billboard.c:55:11: style: The scope of the variable 'distanceRotating' can be reduced. [variableScope]
    float distanceRotating;
          ^
examples/models/models_box_collisions.c:41:10: style: The scope of the variable 'collision' can be reduced. [variableScope]
    bool collision = false;
         ^
examples/models/models_box_collisions.c:33:23: style: Variable 'playerColor' is assigned a value that is never used. [unreadVariable]
    Color playerColor = GREEN;
                      ^
examples/models/models_box_collisions.c:41:20: style: Variable 'collision' is assigned a value that is never used. [unreadVariable]
    bool collision = false;
                   ^
examples/models/models_first_person_maze.c:37:22: style: Variable 'position' is assigned a value that is never used. [unreadVariable]
    Vector3 position = { 0.0f, 0.0f, 0.0f };            // Set model position
                     ^
examples/models/models_mesh_picking.c:41:13: style: Variable 'ray' is assigned a value that is never used. [unreadVariable]
    Ray ray = { 0 };        // Picking ray
            ^
examples/models/models_skybox.c:120:35: style: Local variable 'panorama' shadows outer variable [shadowVariable]
                        Texture2D panorama = LoadTexture(droppedFiles.paths[0]);
                                  ^
examples/models/models_skybox.c:71:15: note: Shadowed declaration
    Texture2D panorama;
              ^
examples/models/models_skybox.c:120:35: note: Shadow variable
                        Texture2D panorama = LoadTexture(droppedFiles.paths[0]);
                                  ^
examples/others/easings_testbed.c:226:5: style: Assignment of function parameter has no effect outside the function. [uselessAssignmentArg]
    d += burn;
    ^
examples/others/easings_testbed.c:226:7: style: Variable 'd' is assigned a value that is never used. [unreadVariable]
    d += burn;
      ^
examples/others/rlgl_standalone.c:95:9: style: struct member 'Camera::projection' is never used. [unusedStructMember]
    int projection;         // Camera projection: CAMERA_PERSPECTIVE or CAMERA_ORTHOGRAPHIC
        ^
examples/shaders/shaders_hot_reloading.c:121:65: style: Obsolete function 'asctime' called. It is recommended to use 'strftime' instead. [asctimeCalled]
            DrawText(TextFormat("Shader last modification: %s", asctime(localtime(&fragShaderFileModTime))), 10, 430, 10, BLACK);
                                                                ^
examples/shaders/shaders_raymarching.c:85:19: style: Local variable 'resolution' shadows outer variable [shadowVariable]
            float resolution[2] = { (float)GetScreenWidth(), (float)GetScreenHeight() };
                  ^
examples/shaders/shaders_raymarching.c:55:11: note: Shadowed declaration
    float resolution[2] = { (float)screenWidth, (float)screenHeight };
          ^
examples/shaders/shaders_raymarching.c:85:19: note: Shadow variable
            float resolution[2] = { (float)GetScreenWidth(), (float)GetScreenHeight() };
                  ^
examples/shapes/shapes_collision_area.c:42:10: style: The scope of the variable 'collision' can be reduced. [variableScope]
    bool collision = false;         // Collision detection
         ^
examples/shapes/shapes_collision_area.c:42:20: style: Variable 'collision' is assigned a value that is never used. [unreadVariable]
    bool collision = false;         // Collision detection
                   ^
examples/shapes/shapes_colors_palette.c:53:24: style: Variable 'mousePoint' is assigned a value that is never used. [unreadVariable]
    Vector2 mousePoint = { 0.0f, 0.0f };
                       ^
examples/shapes/shapes_draw_circle_sector.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 27 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/shapes/raygui.h:3746:34: style: Array index 'i' is used before limits check. [arrayIndexThenCheck]
            for (int i = 1; (text[i] != '\0') && (i < 5); i++)
                                 ^
examples/shapes/raygui.h:1465:14: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (text != NULL) GuiStatusBar(statusBar, text);  // Draw panel header as status bar
             ^
examples/shapes/raygui.h:1456:14: note: First condition
    if (text != NULL)
             ^
examples/shapes/raygui.h:1465:14: note: Second condition
    if (text != NULL) GuiStatusBar(statusBar, text);  // Draw panel header as status bar
             ^
examples/shapes/raygui.h:2822:28: style: Condition 'hue>=0.0f' is always false [knownConditionTrueFalse]
    Vector3 maxHue = { hue >= 0.0f ? hue : hsv.x, 1.0f, 1.0f };
                           ^
examples/shapes/raygui.h:2821:19: note: Assignment 'hue=-1.0f', assigned value is -1.0
    float hue = -1.0f;
                  ^
examples/shapes/raygui.h:2822:28: note: Condition 'hue>=0.0f' is always false
    Vector3 maxHue = { hue >= 0.0f ? hue : hsv.x, 1.0f, 1.0f };
                           ^
examples/shapes/raygui.h:3292:25: warning: sscanf() without field width limits can crash with huge input data. [invalidscanf]
                        sscanf(buffer, "f %d %s %[^\r\n]s", &fontSize, charmapFileName, fontFileName);
                        ^
examples/shapes/raygui.h:2401:26: style: The comparison 'wrapMode == 1' is always true. [knownConditionTrueFalse]
            if (wrapMode == 1)
                         ^
examples/shapes/raygui.h:2380:20: note: 'wrapMode' is assigned value '1' here.
    int wrapMode = 1;      // 0-No wrap, 1-Char wrap, 2-Word wrap
                   ^
examples/shapes/raygui.h:2401:26: note: The comparison 'wrapMode == 1' is always true.
            if (wrapMode == 1)
                         ^
examples/shapes/raygui.h:2200:14: style: The scope of the variable 'valueHasChanged' can be reduced. [variableScope]
        bool valueHasChanged = false;
             ^
examples/shapes/raygui.h:3550:17: style: The scope of the variable 'buffer' can be reduced. [variableScope]
    static char buffer[1024] = { 0 };
                ^
examples/shapes/raygui.h:3551:17: style: The scope of the variable 'iconBuffer' can be reduced. [variableScope]
    static char iconBuffer[6] = { 0 };
                ^
examples/shapes/raygui.h:3740:9: style: The scope of the variable 'textIconOffset' can be reduced. [variableScope]
    int textIconOffset = 0;
        ^
examples/shapes/shapes_draw_circle_sector.c:39:9: style: The scope of the variable 'minSegments' can be reduced. [variableScope]
    int minSegments = 4;
        ^
examples/shapes/raygui.h:2957:64: style:inconclusive: Function 'GuiColorBarHue' argument 3 names different: declaration 'value' definition 'hue'. [funcArgNamesDifferent]
float GuiColorBarHue(Rectangle bounds, const char *text, float hue)
                                                               ^
examples/shapes/raygui.h:539:74: note: Function 'GuiColorBarHue' argument 3 names different: declaration 'value' definition 'hue'.
RAYGUIAPI float GuiColorBarHue(Rectangle bounds, const char *text, float value);                        // Color Bar Hue control
                                                                         ^
examples/shapes/raygui.h:2957:64: note: Function 'GuiColorBarHue' argument 3 names different: declaration 'value' definition 'hue'.
float GuiColorBarHue(Rectangle bounds, const char *text, float hue)
                                                               ^
examples/shapes/raygui.h:3374:70: style: Local variable 'i' shadows outer variable [shadowVariable]
                    if (propertyId < RAYGUI_MAX_PROPS_BASE) for (int i = 1; i < RAYGUI_MAX_CONTROLS; i++) GuiSetStyle(i, (int)propertyId, propertyValue);
                                                                     ^
examples/shapes/raygui.h:3362:22: note: Shadowed declaration
            for (int i = 0; i < propertyCount; i++)
                     ^
examples/shapes/raygui.h:3374:70: note: Shadow variable
                    if (propertyId < RAYGUI_MAX_PROPS_BASE) for (int i = 1; i < RAYGUI_MAX_CONTROLS; i++) GuiSetStyle(i, (int)propertyId, propertyValue);
                                                                     ^
examples/shapes/raygui.h:3779:37: style: Variable 'bounds.width' is assigned a value that is never used. [unreadVariable]
        case COMBOBOX: bounds.width -= (GuiGetStyle(control, COMBO_BUTTON_WIDTH) + GuiGetStyle(control, COMBO_BUTTON_SPACING)); break;
                                    ^
examples/shapes/shapes_draw_circle_sector.c:39:21: style: Variable 'minSegments' is assigned a value that is never used. [unreadVariable]
    int minSegments = 4;
                    ^
examples/shapes/raygui.h:3760:0: information: Skipping configuration 'ICON_TEXT_PADDING' since the value of 'ICON_TEXT_PADDING' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        if (textIconOffset > 0) size.x += (RAYGUI_ICON_SIZE - ICON_TEXT_PADDING);
^
examples/shapes/raygui.h:3855:0: information: Skipping configuration 'ICON_TEXT_PADDING' since the value of 'ICON_TEXT_PADDING' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            if ((text != NULL) && (text[0] != '\0')) textSize.x += ICON_TEXT_PADDING;
^
examples/shapes/raygui.h:3892:0: information: Skipping configuration 'ICON_TEXT_PADDING' since the value of 'ICON_TEXT_PADDING' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            position.x += (RAYGUI_ICON_SIZE*guiIconScale + ICON_TEXT_PADDING);
^
examples/shapes/raygui.h:2926:0: information: Skipping configuration 'RAYGUI_COLORBARALPHA_CHECKED_SIZE' since the value of 'RAYGUI_COLORBARALPHA_CHECKED_SIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        int checksX = (int)bounds.width/RAYGUI_COLORBARALPHA_CHECKED_SIZE;
^
examples/shapes/raygui.h:2927:0: information: Skipping configuration 'RAYGUI_COLORBARALPHA_CHECKED_SIZE' since the value of 'RAYGUI_COLORBARALPHA_CHECKED_SIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        int checksY = (int)bounds.height/RAYGUI_COLORBARALPHA_CHECKED_SIZE;
^
examples/shapes/raygui.h:2933:0: information: Skipping configuration 'RAYGUI_COLORBARALPHA_CHECKED_SIZE' since the value of 'RAYGUI_COLORBARALPHA_CHECKED_SIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
                Rectangle check = { bounds.x + x*RAYGUI_COLORBARALPHA_CHECKED_SIZE, bounds.y + y*RAYGUI_COLORBARALPHA_CHECKED_SIZE, RAYGUI_COLORBARALPHA_CHECKED_SIZE, RAYGUI_COLORBARALPHA_CHECKED_SIZE };
^
examples/shapes/raygui.h:3229:0: information: Skipping configuration 'RAYGUI_GRID_ALPHA' since the value of 'RAYGUI_GRID_ALPHA' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
                    GuiDrawRectangle(lineV, 0, BLANK, ((i%subdivs) == 0) ? Fade(GetColor(GuiGetStyle(DEFAULT, LINE_COLOR)), RAYGUI_GRID_ALPHA*4) : Fade(GetColor(GuiGetStyle(DEFAULT, LINE_COLOR)), RAYGUI_GRID_ALPHA));
^
examples/shapes/raygui.h:3236:0: information: Skipping configuration 'RAYGUI_GRID_ALPHA' since the value of 'RAYGUI_GRID_ALPHA' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
                    GuiDrawRectangle(lineH, 0, BLANK, ((i%subdivs) == 0) ? Fade(GetColor(GuiGetStyle(DEFAULT, LINE_COLOR)), RAYGUI_GRID_ALPHA*4) : Fade(GetColor(GuiGetStyle(DEFAULT, LINE_COLOR)), RAYGUI_GRID_ALPHA));
^
examples/shapes/raygui.h:1402:0: information: Skipping configuration 'RAYGUI_GROUPBOX_LINE_THICK' since the value of 'RAYGUI_GROUPBOX_LINE_THICK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    GuiDrawRectangle(RAYGUI_CLITERAL(Rectangle){ bounds.x, bounds.y, RAYGUI_GROUPBOX_LINE_THICK, bounds.height }, 0, BLANK, Fade(GetColor(GuiGetStyle(DEFAULT, (state == STATE_DISABLED)? BORDER_COLOR_DISABLED : LINE_COLOR)), guiAlpha));
^
examples/shapes/raygui.h:1403:0: information: Skipping configuration 'RAYGUI_GROUPBOX_LINE_THICK' since the value of 'RAYGUI_GROUPBOX_LINE_THICK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    GuiDrawRectangle(RAYGUI_CLITERAL(Rectangle){ bounds.x, bounds.y + bounds.height - 1, bounds.width, RAYGUI_GROUPBOX_LINE_THICK }, 0, BLANK, Fade(GetColor(GuiGetStyle(DEFAULT, (state == STATE_DISABLED)? BORDER_COLOR_DISABLED : LINE_COLOR)), guiAlpha));
^
examples/shapes/raygui.h:1404:0: information: Skipping configuration 'RAYGUI_GROUPBOX_LINE_THICK' since the value of 'RAYGUI_GROUPBOX_LINE_THICK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    GuiDrawRectangle(RAYGUI_CLITERAL(Rectangle){ bounds.x + bounds.width - 1, bounds.y, RAYGUI_GROUPBOX_LINE_THICK, bounds.height }, 0, BLANK, Fade(GetColor(GuiGetStyle(DEFAULT, (state == STATE_DISABLED)? BORDER_COLOR_DISABLED : LINE_COLOR)), guiAlpha));
^
examples/shapes/raygui.h:1436:0: information: Skipping configuration 'RAYGUI_LINE_TEXT_PADDING' since the value of 'RAYGUI_LINE_TEXT_PADDING' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        GuiDrawRectangle(RAYGUI_CLITERAL(Rectangle){ bounds.x, bounds.y + bounds.height/2, RAYGUI_LINE_MARGIN_TEXT - RAYGUI_LINE_TEXT_PADDING, 1 }, 0, BLANK, color);
^
examples/shapes/raygui.h:1438:0: information: Skipping configuration 'RAYGUI_LINE_TEXT_PADDING' since the value of 'RAYGUI_LINE_TEXT_PADDING' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        GuiDrawRectangle(RAYGUI_CLITERAL(Rectangle){ bounds.x + 12 + textBounds.width + 4, bounds.y + bounds.height/2, bounds.width - textBounds.width - RAYGUI_LINE_MARGIN_TEXT - RAYGUI_LINE_TEXT_PADDING, 1 }, 0, BLANK, color);
^
examples/shapes/raygui.h:3058:0: information: Skipping configuration 'RAYGUI_MESSAGEBOX_BUTTON_HEIGHT' since the value of 'RAYGUI_MESSAGEBOX_BUTTON_HEIGHT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    buttonBounds.y = bounds.y + bounds.height - RAYGUI_MESSAGEBOX_BUTTON_HEIGHT - RAYGUI_MESSAGEBOX_BUTTON_PADDING;
^
examples/shapes/raygui.h:3060:0: information: Skipping configuration 'RAYGUI_MESSAGEBOX_BUTTON_HEIGHT' since the value of 'RAYGUI_MESSAGEBOX_BUTTON_HEIGHT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    buttonBounds.height = RAYGUI_MESSAGEBOX_BUTTON_HEIGHT;
^
examples/shapes/raygui.h:3068:0: information: Skipping configuration 'RAYGUI_MESSAGEBOX_BUTTON_HEIGHT' since the value of 'RAYGUI_MESSAGEBOX_BUTTON_HEIGHT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    textBounds.height = bounds.height - RAYGUI_WINDOWBOX_STATUSBAR_HEIGHT - 3*RAYGUI_MESSAGEBOX_BUTTON_PADDING - RAYGUI_MESSAGEBOX_BUTTON_HEIGHT;
^
examples/shapes/raygui.h:3057:0: information: Skipping configuration 'RAYGUI_MESSAGEBOX_BUTTON_PADDING' since the value of 'RAYGUI_MESSAGEBOX_BUTTON_PADDING' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    buttonBounds.x = bounds.x + RAYGUI_MESSAGEBOX_BUTTON_PADDING;
^
examples/shapes/raygui.h:3058:0: information: Skipping configuration 'RAYGUI_MESSAGEBOX_BUTTON_PADDING' since the value of 'RAYGUI_MESSAGEBOX_BUTTON_PADDING' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    buttonBounds.y = bounds.y + bounds.height - RAYGUI_MESSAGEBOX_BUTTON_HEIGHT - RAYGUI_MESSAGEBOX_BUTTON_PADDING;
^
examples/shapes/raygui.h:3059:0: information: Skipping configuration 'RAYGUI_MESSAGEBOX_BUTTON_PADDING' since the value of 'RAYGUI_MESSAGEBOX_BUTTON_PADDING' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    buttonBounds.width = (bounds.width - RAYGUI_MESSAGEBOX_BUTTON_PADDING*(buttonCount + 1))/buttonCount;
^
examples/shapes/raygui.h:3066:0: information: Skipping configuration 'RAYGUI_MESSAGEBOX_BUTTON_PADDING' since the value of 'RAYGUI_MESSAGEBOX_BUTTON_PADDING' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    textBounds.y = bounds.y + RAYGUI_WINDOWBOX_STATUSBAR_HEIGHT + RAYGUI_MESSAGEBOX_BUTTON_PADDING;
^
examples/shapes/raygui.h:3068:0: information: Skipping configuration 'RAYGUI_MESSAGEBOX_BUTTON_PADDING' since the value of 'RAYGUI_MESSAGEBOX_BUTTON_PADDING' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    textBounds.height = bounds.height - RAYGUI_WINDOWBOX_STATUSBAR_HEIGHT - 3*RAYGUI_MESSAGEBOX_BUTTON_PADDING - RAYGUI_MESSAGEBOX_BUTTON_HEIGHT;
^
examples/shapes/raygui.h:3085:0: information: Skipping configuration 'RAYGUI_MESSAGEBOX_BUTTON_PADDING' since the value of 'RAYGUI_MESSAGEBOX_BUTTON_PADDING' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        buttonBounds.x += (buttonBounds.width + RAYGUI_MESSAGEBOX_BUTTON_PADDING);
^
examples/shapes/raygui.h:3174:0: information: Skipping configuration 'RAYGUI_MESSAGEBOX_BUTTON_PADDING' since the value of 'RAYGUI_MESSAGEBOX_BUTTON_PADDING' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        buttonBounds.x += (buttonBounds.width + RAYGUI_MESSAGEBOX_BUTTON_PADDING);
^
examples/shapes/shapes_draw_rectangle_rounded.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 27 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/shapes/shapes_draw_ring.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 27 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/shapes/shapes_following_eyes.c:34:30: style: Variable 'irisLeftPosition' is assigned a value that is never used. [unreadVariable]
    Vector2 irisLeftPosition = { GetScreenWidth()/2.0f - 100.0f, GetScreenHeight()/2.0f };
                             ^
examples/shapes/shapes_following_eyes.c:35:31: style: Variable 'irisRightPosition' is assigned a value that is never used. [unreadVariable]
    Vector2 irisRightPosition = { GetScreenWidth()/2.0f + 100.0f, GetScreenHeight()/2.0f };
                              ^
examples/shapes/shapes_following_eyes.c:38:17: style: Variable 'angle' is assigned a value that is never used. [unreadVariable]
    float angle = 0.0f;
                ^
examples/shapes/shapes_following_eyes.c:39:14: style: Variable 'dx' is assigned a value that is never used. [unreadVariable]
    float dx = 0.0f, dy = 0.0f, dxx = 0.0f, dyy = 0.0f;
             ^
examples/shapes/shapes_following_eyes.c:39:25: style: Variable 'dy' is assigned a value that is never used. [unreadVariable]
    float dx = 0.0f, dy = 0.0f, dxx = 0.0f, dyy = 0.0f;
                        ^
examples/shapes/shapes_following_eyes.c:39:37: style: Variable 'dxx' is assigned a value that is never used. [unreadVariable]
    float dx = 0.0f, dy = 0.0f, dxx = 0.0f, dyy = 0.0f;
                                    ^
examples/shapes/shapes_following_eyes.c:39:49: style: Variable 'dyy' is assigned a value that is never used. [unreadVariable]
    float dx = 0.0f, dy = 0.0f, dxx = 0.0f, dyy = 0.0f;
                                                ^
examples/shapes/shapes_rectangle_scaling.c:34:27: style: Variable 'mousePosition' is assigned a value that is never used. [unreadVariable]
    Vector2 mousePosition = { 0 };
                          ^
examples/shapes/shapes_rectangle_scaling.c:36:26: style: Variable 'mouseScaleReady' is assigned a value that is never used. [unreadVariable]
    bool mouseScaleReady = false;
                         ^
examples/text/text_codepoints_loading.c:61:9: style: The scope of the variable 'codepoint' can be reduced. [variableScope]
    int codepoint = 0;
        ^
examples/text/text_codepoints_loading.c:129:81: style:inconclusive: Function 'CodepointRemoveDuplicates' argument 3 names different: declaration 'codepointResultCount' definition 'codepointsResultCount'. [funcArgNamesDifferent]
static int *CodepointRemoveDuplicates(int *codepoints, int codepointCount, int *codepointsResultCount)
                                                                                ^
examples/text/text_codepoints_loading.c:25:81: note: Function 'CodepointRemoveDuplicates' argument 3 names different: declaration 'codepointResultCount' definition 'codepointsResultCount'.
static int *CodepointRemoveDuplicates(int *codepoints, int codepointCount, int *codepointResultCount);
                                                                                ^
examples/text/text_codepoints_loading.c:129:81: note: Function 'CodepointRemoveDuplicates' argument 3 names different: declaration 'codepointResultCount' definition 'codepointsResultCount'.
static int *CodepointRemoveDuplicates(int *codepoints, int codepointCount, int *codepointsResultCount)
                                                                                ^
examples/text/text_codepoints_loading.c:61:19: style: Variable 'codepoint' is assigned a value that is never used. [unreadVariable]
    int codepoint = 0;
                  ^
examples/text/text_codepoints_loading.c:78:23: style: Variable 'codepoint' is assigned a value that is never used. [unreadVariable]
            codepoint = GetCodepointNext(ptr, &codepointSize);
                      ^
examples/text/text_codepoints_loading.c:84:23: style: Variable 'codepoint' is assigned a value that is never used. [unreadVariable]
            codepoint = GetCodepointPrevious(ptr, &codepointSize);
                      ^
examples/text/text_draw_3d.c:116:9: style: The scope of the variable 'quads' can be reduced. [variableScope]
    int quads = 0;
        ^
examples/text/text_draw_3d.c:576:9: style: The scope of the variable 'letter' can be reduced. [variableScope]
    int letter = 0;                 // Current character
        ^
examples/text/text_draw_3d.c:577:9: style: The scope of the variable 'index' can be reduced. [variableScope]
    int index = 0;                  // Index position in sprite font
        ^
examples/text/text_draw_3d.c:694:9: style: The scope of the variable 'letter' can be reduced. [variableScope]
    int letter = 0;                 // Current character
        ^
examples/text/text_draw_3d.c:695:9: style: The scope of the variable 'index' can be reduced. [variableScope]
    int index = 0;                  // Index position in sprite font
        ^
examples/text/text_draw_3d.c:576:16: style: Variable 'letter' is assigned a value that is never used. [unreadVariable]
    int letter = 0;                 // Current character
               ^
examples/text/text_draw_3d.c:577:15: style: Variable 'index' is assigned a value that is never used. [unreadVariable]
    int index = 0;                  // Index position in sprite font
              ^
examples/text/text_draw_3d.c:694:16: style: Variable 'letter' is assigned a value that is never used. [unreadVariable]
    int letter = 0;                 // Current character
               ^
examples/text/text_draw_3d.c:695:15: style: Variable 'index' is assigned a value that is never used. [unreadVariable]
    int index = 0;                  // Index position in sprite font
              ^
examples/text/text_font_filters.c:45:22: style: Variable 'textSize' is assigned a value that is never used. [unreadVariable]
    Vector2 textSize = { 0.0f, 0.0f };
                     ^
examples/text/text_font_loading.c:50:17: style: Variable 'useTtf' is assigned a value that is never used. [unreadVariable]
    bool useTtf = false;
                ^
examples/text/text_font_sdf.c:75:22: style: Variable 'textSize' is assigned a value that is never used. [unreadVariable]
    Vector2 textSize = { 0.0f, 0.0f };
                     ^
examples/text/text_font_sdf.c:77:21: style: Variable 'currentFont' is assigned a value that is never used. [unreadVariable]
    int currentFont = 0;            // 0 - fontDefault, 1 - fontSDF
                    ^
examples/text/text_input_box.c:34:22: style: Variable 'mouseOnText' is assigned a value that is never used. [unreadVariable]
    bool mouseOnText = false;
                     ^
examples/text/text_unicode.c:286:25: style: Local variable 'pos' shadows outer variable [shadowVariable]
                Vector2 pos = { textRect.x + textRect.width - sz.x,  msgRect.y + msgRect.height - sz.y - 2 };
                        ^
examples/text/text_unicode.c:199:17: note: Shadowed declaration
        Vector2 pos = { 28.8f, 10.0f };
                ^
examples/text/text_unicode.c:286:25: note: Shadow variable
                Vector2 pos = { textRect.x + textRect.width - sz.x,  msgRect.y + msgRect.height - sz.y - 2 };
                        ^
examples/textures/textures_fog_of_war.c:58:9: style: The scope of the variable 'playerTileX' can be reduced. [variableScope]
    int playerTileX = 0;
        ^
examples/textures/textures_fog_of_war.c:59:9: style: The scope of the variable 'playerTileY' can be reduced. [variableScope]
    int playerTileY = 0;
        ^
examples/textures/textures_fog_of_war.c:58:21: style: Variable 'playerTileX' is assigned a value that is never used. [unreadVariable]
    int playerTileX = 0;
                    ^
examples/textures/textures_fog_of_war.c:59:21: style: Variable 'playerTileY' is assigned a value that is never used. [unreadVariable]
    int playerTileY = 0;
                    ^
examples/textures/textures_image_text.c:41:19: style: Variable 'showFont' is assigned a value that is never used. [unreadVariable]
    bool showFont = false;
                  ^
examples/textures/textures_mouse_painting.c:56:28: style: Variable 'btnSaveMouseHover' is assigned a value that is never used. [unreadVariable]
    bool btnSaveMouseHover = false;
                           ^
examples/textures/textures_npatch_drawing.c:35:27: style: Variable 'mousePosition' is assigned a value that is never used. [unreadVariable]
    Vector2 mousePosition = { 0 };
                          ^
examples/textures/textures_sprite_button.c:43:10: style: The scope of the variable 'btnAction' can be reduced. [variableScope]
    bool btnAction = false;         // Button action should be activated
         ^
examples/textures/textures_sprite_button.c:42:18: style: Variable 'btnState' is assigned a value that is never used. [unreadVariable]
    int btnState = 0;               // Button state: 0-NORMAL, 1-MOUSE_HOVER, 2-PRESSED
                 ^
examples/textures/textures_sprite_button.c:43:20: style: Variable 'btnAction' is assigned a value that is never used. [unreadVariable]
    bool btnAction = false;         // Button action should be activated
                   ^
examples/textures/textures_sprite_button.c:45:24: style: Variable 'mousePoint' is assigned a value that is never used. [unreadVariable]
    Vector2 mousePoint = { 0.0f, 0.0f };
                       ^
examples/textures/textures_textured_curve.c:178:11: style: The scope of the variable 't' can be reduced. [variableScope]
    float t = 0.0f;
          ^
examples/textures/textures_textured_curve.c:178:13: style: Variable 't' is assigned a value that is never used. [unreadVariable]
    float t = 0.0f;
            ^
parser/raylib_parser.c:1334:30: error: Array 'text2[7]' accessed at index 14, which is out of bounds. [arrayIndexOutOfBounds]
        if (text1[i] != text2[i])
                             ^
parser/raylib_parser.c:1364:65: error: Array 'srcPtr[7]' accessed at index 15, which is out of bounds. [arrayIndexOutOfBounds]
    for (unsigned int i = 0; i < count; i++) destPtr[i] = srcPtr[i];
                                                                ^
parser/raylib_parser.c:1374:26: style: Array index 'i' is used before limits check. [arrayIndexThenCheck]
    for (int i = 0; (text[i] != '\0') && (i < 255); i++, count++)
                         ^
parser/raylib_parser.c:1198:21: error: Common realloc mistake: 'text' nulled but not freed upon failure [memleakOnRealloc]
                    text = realloc(text, count + 1);
                    ^
parser/raylib_parser.c:1280:40: style:inconclusive: Function 'GetDescription' argument 1 names different: declaration 'source' definition 'line'. [funcArgNamesDifferent]
static void GetDescription(const char *line, char *description)
                                       ^
parser/raylib_parser.c:185:40: note: Function 'GetDescription' argument 1 names different: declaration 'source' definition 'line'.
static void GetDescription(const char *source, char *description);
                                       ^
parser/raylib_parser.c:1280:40: note: Function 'GetDescription' argument 1 names different: declaration 'source' definition 'line'.
static void GetDescription(const char *line, char *description)
                                       ^
projects/Notepad++/raylib_npp_parser/raylib_npp_parser.c:76:17: warning: sscanf() without field width limits can crash with huge input data. [invalidscanf]
                sscanf(buffer, "RLAPI %s %[^(]s", funcType, funcName);
                ^
projects/Notepad++/raylib_npp_parser/raylib_npp_parser.c:80:21: warning: sscanf() without field width limits can crash with huge input data. [invalidscanf]
                    sscanf(buffer, "RLAPI %s %s %[^(]s", funcType, funcTypeAux, funcName);
                    ^
projects/Notepad++/raylib_npp_parser/raylib_npp_parser.c:88:17: warning: sscanf() without field width limits can crash with huge input data. [invalidscanf]
                sscanf(buffer + index, "%[^\n]s", funcDesc);        // Read function comment after declaration
                ^
projects/Notepad++/raylib_npp_parser/raylib_npp_parser.c:95:17: warning: sscanf() without field width limits can crash with huge input data. [invalidscanf]
                sscanf(buffer + (index + 1), "%[^)]s", params);     // Read what's inside '(' and ')'
                ^
projects/Notepad++/raylib_npp_parser/raylib_npp_parser.c:114:21: warning: sscanf() without field width limits can crash with huge input data. [invalidscanf]
                    sscanf(paramPtr[paramsCount], "%s %s\n", paramType[paramsCount], paramName[paramsCount]);
                    ^
projects/Notepad++/raylib_npp_parser/raylib_npp_parser.c:124:25: warning: sscanf() without field width limits can crash with huge input data. [invalidscanf]
                        sscanf(paramPtr[paramsCount], "%s %s %s\n", paramConst[paramsCount], paramType[paramsCount], paramName[paramsCount]);
                        ^
projects/Notepad++/raylib_npp_parser/raylib_npp_parser.c:65:22: style: The scope of the variable 'funcTypeAux' can be reduced. [variableScope]
                char funcTypeAux[64];
                     ^
src/raylib.h:415:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    bool hit;               // Did the ray hit something?
^
src/raylib.h:461:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    bool looping;               // Music looping enable
^
src/raylib.h:909:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef bool (*SaveFileDataCallback)(const char *fileName, void *data, unsigned int bytesToWrite);  // FileIO: Save binary data
^
src/raylib.h:911:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef bool (*SaveFileTextCallback)(const char *fileName, char *text); // FileIO: Save text data
^
src/raylib.h:928:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool WindowShouldClose(void);                               // Check if KEY_ESCAPE pressed or Close icon pressed
^
src/raylib.h:930:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsWindowReady(void);                                   // Check if window has been initialized successfully
^
src/raylib.h:931:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsWindowFullscreen(void);                              // Check if window is currently fullscreen
^
src/raylib.h:932:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsWindowHidden(void);                                  // Check if window is currently hidden (only PLATFORM_DESKTOP)
^
src/raylib.h:933:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsWindowMinimized(void);                               // Check if window is currently minimized (only PLATFORM_DESKTOP)
^
src/raylib.h:934:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsWindowMaximized(void);                               // Check if window is currently maximized (only PLATFORM_DESKTOP)
^
src/raylib.h:935:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsWindowFocused(void);                                 // Check if window is currently focused (only PLATFORM_DESKTOP)
^
src/raylib.h:936:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsWindowResized(void);                                 // Check if window has been resized last frame
^
src/raylib.h:937:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsWindowState(unsigned int flag);                      // Check if one specific window flag is enabled
^
src/raylib.h:984:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsCursorHidden(void);                                  // Check if cursor is not visible
^
src/raylib.h:987:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsCursorOnScreen(void);                                // Check if cursor is on the screen
^
src/raylib.h:1016:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsShaderReady(Shader shader);                                   // Check if a shader is ready
^
src/raylib.h:1065:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool SaveFileData(const char *fileName, void *data, unsigned int bytesToWrite);   // Save data to file from byte array (write), returns true on success
^
src/raylib.h:1066:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool ExportDataAsCode(const unsigned char *data, unsigned int size, const char *fileName); // Export data to code (.h), returns true on success
^
src/raylib.h:1069:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool SaveFileText(const char *fileName, char *text);        // Save text data to file (write), string must be '\0' terminated, returns true on success
^
src/raylib.h:1070:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool FileExists(const char *fileName);                      // Check if file exists
^
src/raylib.h:1071:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool DirectoryExists(const char *dirPath);                  // Check if a directory path exists
^
src/raylib.h:1072:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsFileExtension(const char *fileName, const char *ext); // Check file extension (including point: .png, .wav)
^
src/raylib.h:1081:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool ChangeDirectory(const char *dir);                      // Change working directory, return true on success
^
src/raylib.h:1082:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsPathFile(const char *path);                          // Check if a given path is a file or a directory
^
src/raylib.h:1084:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI FilePathList LoadDirectoryFilesEx(const char *basePath, const char *filter, bool scanSubdirs); // Load directory filepaths with extension filtering and recursive directory scan
^
src/raylib.h:1086:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsFileDropped(void);                                   // Check if a file has been dropped into window
^
src/raylib.h:1102:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsKeyPressed(int key);                             // Check if a key has been pressed once
^
src/raylib.h:1103:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsKeyDown(int key);                                // Check if a key is being pressed
^
src/raylib.h:1104:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsKeyReleased(int key);                            // Check if a key has been released once
^
src/raylib.h:1105:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsKeyUp(int key);                                  // Check if a key is NOT being pressed
^
src/raylib.h:1111:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsGamepadAvailable(int gamepad);                   // Check if a gamepad is available
^
src/raylib.h:1113:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsGamepadButtonPressed(int gamepad, int button);   // Check if a gamepad button has been pressed once
^
src/raylib.h:1114:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsGamepadButtonDown(int gamepad, int button);      // Check if a gamepad button is being pressed
^
src/raylib.h:1115:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsGamepadButtonReleased(int gamepad, int button);  // Check if a gamepad button has been released once
^
src/raylib.h:1116:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsGamepadButtonUp(int gamepad, int button);        // Check if a gamepad button is NOT being pressed
^
src/raylib.h:1123:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsMouseButtonPressed(int button);                  // Check if a mouse button has been pressed once
^
src/raylib.h:1124:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsMouseButtonDown(int button);                     // Check if a mouse button is being pressed
^
src/raylib.h:1125:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsMouseButtonReleased(int button);                 // Check if a mouse button has been released once
^
src/raylib.h:1126:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsMouseButtonUp(int button);                       // Check if a mouse button is NOT being pressed
^
src/raylib.h:1149:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsGestureDetected(int gesture);              // Check if a gesture have been detected
^
src/raylib.h:1211:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool CheckCollisionRecs(Rectangle rec1, Rectangle rec2);                                           // Check collision between two rectangles
^
src/raylib.h:1212:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool CheckCollisionCircles(Vector2 center1, float radius1, Vector2 center2, float radius2);        // Check collision between two circles
^
src/raylib.h:1213:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool CheckCollisionCircleRec(Vector2 center, float radius, Rectangle rec);                         // Check collision between circle and rectangle
^
src/raylib.h:1214:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool CheckCollisionPointRec(Vector2 point, Rectangle rec);                                         // Check if point is inside rectangle
^
src/raylib.h:1215:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool CheckCollisionPointCircle(Vector2 point, Vector2 center, float radius);                       // Check if point is inside circle
^
src/raylib.h:1216:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool CheckCollisionPointTriangle(Vector2 point, Vector2 p1, Vector2 p2, Vector2 p3);               // Check if point is inside a triangle
^
src/raylib.h:1217:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool CheckCollisionPointPoly(Vector2 point, Vector2 *points, int pointCount);                      // Check if point is within a polygon described by array of vertices
^
src/raylib.h:1218:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool CheckCollisionLines(Vector2 startPos1, Vector2 endPos1, Vector2 startPos2, Vector2 endPos2, Vector2 *collisionPoint); // Check the collision between two lines defined by two points each, returns collision point by reference
^
src/raylib.h:1219:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool CheckCollisionPointLine(Vector2 point, Vector2 p1, Vector2 p2, int threshold);                // Check if point belongs to line created between two points [p1] and [p2] with defined margin in pixels [threshold]
^
src/raylib.h:1234:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsImageReady(Image image);                                                                    // Check if an image is ready
^
src/raylib.h:1236:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool ExportImage(Image image, const char *fileName);                                               // Export image data to file, returns true on success
^
src/raylib.h:1237:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool ExportImageAsCode(Image image, const char *fileName);                                         // Export image as code file defining an array of bytes, returns true on success
^
src/raylib.h:1310:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsTextureReady(Texture2D texture);                                                            // Check if a texture is ready
^
src/raylib.h:1312:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsRenderTextureReady(RenderTexture2D target);                                                       // Check if a render texture is ready
^
src/raylib.h:1357:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsFontReady(Font font);                                                          // Check if a font is ready
^
src/raylib.h:1362:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool ExportFontAsCode(Font font, const char *fileName);                               // Export font as code file, returns true on success
^
src/raylib.h:1393:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool TextIsEqual(const char *text1, const char *text2);                               // Check if two text string are equal
^
src/raylib.h:1442:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsModelReady(Model model);                                                       // Check if a model is ready
^
src/raylib.h:1457:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI void UploadMesh(Mesh *mesh, bool dynamic);                                            // Upload mesh vertex data in GPU and provide VAO/VBO ids
^
src/raylib.h:1462:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool ExportMesh(Mesh mesh, const char *fileName);                                     // Export mesh data to file, returns true on success
^
src/raylib.h:1482:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsMaterialReady(Material material);                                              // Check if a material is ready
^
src/raylib.h:1492:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsModelAnimationValid(Model model, ModelAnimation anim);                         // Check model animation skeleton match
^
src/raylib.h:1495:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool CheckCollisionSpheres(Vector3 center1, float radius1, Vector3 center2, float radius2);   // Check collision between two spheres
^
src/raylib.h:1496:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool CheckCollisionBoxes(BoundingBox box1, BoundingBox box2);                                 // Check collision between two bounding boxes
^
src/raylib.h:1497:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool CheckCollisionBoxSphere(BoundingBox box, Vector3 center, float radius);                  // Check collision between box and sphere
^
src/raylib.h:1512:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsAudioDeviceReady(void);                                  // Check if audio device has been initialized successfully
^
src/raylib.h:1518:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsWaveReady(Wave wave);                                    // Checks if wave data is ready
^
src/raylib.h:1521:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsSoundReady(Sound sound);                                 // Checks if a sound is ready
^
src/raylib.h:1525:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool ExportWave(Wave wave, const char *fileName);               // Export wave data to file, returns true on success
^
src/raylib.h:1526:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool ExportWaveAsCode(Wave wave, const char *fileName);         // Export wave sample data to code (.h), returns true on success
^
src/raylib.h:1533:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsSoundPlaying(Sound sound);                               // Check if a sound is currently playing
^
src/raylib.h:1546:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsMusicReady(Music music);                                 // Checks if a music stream is ready
^
src/raylib.h:1549:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsMusicStreamPlaying(Music music);                         // Check if music is playing
^
src/raylib.h:1563:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsAudioStreamReady(AudioStream stream);                    // Checks if an audio stream is ready
^
src/raylib.h:1566:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsAudioStreamProcessed(AudioStream stream);                // Check if any audio stream buffers requires refill
^
src/raylib.h:1570:0: information: Skipping configuration 'bool' since the value of 'bool' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
RLAPI bool IsAudioStreamPlaying(AudioStream stream);                  // Check if audio stream is playing
^
src/external/glfw/src/cocoa_time.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/internal.h:106:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (APIENTRY * PFNGLCLEARPROC)(GLbitfield);
^
src/external/glfw/src/internal.h:107:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef const GLubyte* (APIENTRY * PFNGLGETSTRINGPROC)(GLenum);
^
src/external/glfw/src/internal.h:108:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (APIENTRY * PFNGLGETINTEGERVPROC)(GLenum,GLint*);
^
src/external/glfw/src/internal.h:109:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef const GLubyte* (APIENTRY * PFNGLGETSTRINGIPROC)(GLenum,GLuint);
^
src/external/glfw/src/internal.h:255:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef OSMesaContext (GLAPIENTRY * PFN_OSMesaCreateContextExt)(GLenum,GLint,GLint,GLint,OSMesaContext);
^
src/external/glfw/src/internal.h:256:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef OSMesaContext (GLAPIENTRY * PFN_OSMesaCreateContextAttribs)(const int*,OSMesaContext);
^
src/external/glfw/src/internal.h:257:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAPIENTRY * PFN_OSMesaDestroyContext)(OSMesaContext);
^
src/external/glfw/src/internal.h:258:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef int (GLAPIENTRY * PFN_OSMesaMakeCurrent)(OSMesaContext,void*,int,int,int);
^
src/external/glfw/src/internal.h:259:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef int (GLAPIENTRY * PFN_OSMesaGetColorBuffer)(OSMesaContext,int*,int*,int*,void**);
^
src/external/glfw/src/internal.h:260:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef int (GLAPIENTRY * PFN_OSMesaGetDepthBuffer)(OSMesaContext,int*,int*,int*,void**);
^
src/external/glfw/src/internal.h:261:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLFWglproc (GLAPIENTRY * PFN_OSMesaGetProcAddress)(const char*);
^
src/external/glfw/src/internal.h:325:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (APIENTRY * PFN_vkVoidFunction)(void);
^
src/external/glfw/src/internal.h:327:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef PFN_vkVoidFunction (APIENTRY * PFN_vkGetInstanceProcAddr)(VkInstance,const char*);
^
src/external/glfw/src/internal.h:328:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef VkResult (APIENTRY * PFN_vkEnumerateInstanceExtensionProperties)(const char*,uint32_t*,VkExtensionProperties*);
^
src/external/glfw/src/context.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/context.c:763:5: portability: Returning an integer in a function with pointer return type is not portable. [CastIntegerToAddressAtReturn]
    return window->context.getProcAddress(procname);
    ^
src/external/glfw/src/context.c:616:49: style:inconclusive: Function 'glfwMakeContextCurrent' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwMakeContextCurrent(GLFWwindow* handle)
                                                ^
src/external/glfw/include/GLFW/glfw3.h:5985:49: note: Function 'glfwMakeContextCurrent' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwMakeContextCurrent(GLFWwindow* window);
                                                ^
src/external/glfw/src/context.c:616:49: note: Function 'glfwMakeContextCurrent' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwMakeContextCurrent(GLFWwindow* handle)
                                                ^
src/external/glfw/src/context.c:648:42: style:inconclusive: Function 'glfwSwapBuffers' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwSwapBuffers(GLFWwindow* handle)
                                         ^
src/external/glfw/include/GLFW/glfw3.h:6040:42: note: Function 'glfwSwapBuffers' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwSwapBuffers(GLFWwindow* window);
                                         ^
src/external/glfw/src/context.c:648:42: note: Function 'glfwSwapBuffers' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwSwapBuffers(GLFWwindow* handle)
                                         ^
src/external/glfw/src/egl_context.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 47 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/egl_context.c:290:5: portability: Returning an integer in a function with pointer return type is not portable. [CastIntegerToAddressAtReturn]
    return eglGetProcAddress(procname);
    ^
src/external/glfw/src/egl_context.c:335:0: information: Skipping configuration '_GLFW_EGL_LIBRARY' since the value of '_GLFW_EGL_LIBRARY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        _GLFW_EGL_LIBRARY,
^
src/external/glfw/src/egl_context.c:714:0: information: Skipping configuration '_GLFW_GLESV1_LIBRARY' since the value of '_GLFW_GLESV1_LIBRARY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            _GLFW_GLESV1_LIBRARY,
^
src/external/glfw/src/egl_context.c:731:0: information: Skipping configuration '_GLFW_GLESV2_LIBRARY' since the value of '_GLFW_GLESV2_LIBRARY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            _GLFW_GLESV2_LIBRARY,
^
src/external/glfw/src/glx_context.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 44 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/glx_context.c:455:9: style: The scope of the variable 'attribs' can be reduced. [variableScope]
    int attribs[40];
        ^
src/external/glfw/src/glx_context.c:262:0: information: Skipping configuration '_GLFW_GLX_LIBRARY' since the value of '_GLFW_GLX_LIBRARY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        _GLFW_GLX_LIBRARY,
^
src/external/glfw/src/init.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/init.c:294:27: style:inconclusive: Function '_glfw_realloc' argument 1 names different: declaration 'pointer' definition 'block'. [funcArgNamesDifferent]
void* _glfw_realloc(void* block, size_t size)
                          ^
src/external/glfw/src/internal.h:1014:27: note: Function '_glfw_realloc' argument 1 names different: declaration 'pointer' definition 'block'.
void* _glfw_realloc(void* pointer, size_t size);
                          ^
src/external/glfw/src/init.c:294:27: note: Function '_glfw_realloc' argument 1 names different: declaration 'pointer' definition 'block'.
void* _glfw_realloc(void* block, size_t size)
                          ^
src/external/glfw/src/init.c:316:23: style:inconclusive: Function '_glfw_free' argument 1 names different: declaration 'pointer' definition 'block'. [funcArgNamesDifferent]
void _glfw_free(void* block)
                      ^
src/external/glfw/src/internal.h:1015:23: note: Function '_glfw_free' argument 1 names different: declaration 'pointer' definition 'block'.
void _glfw_free(void* pointer);
                      ^
src/external/glfw/src/init.c:316:23: note: Function '_glfw_free' argument 1 names different: declaration 'pointer' definition 'block'.
void _glfw_free(void* block)
                      ^
src/external/glfw/src/init.c:540:56: style:inconclusive: Function 'glfwSetErrorCallback' argument 1 names different: declaration 'callback' definition 'cbfun'. [funcArgNamesDifferent]
GLFWAPI GLFWerrorfun glfwSetErrorCallback(GLFWerrorfun cbfun)
                                                       ^
src/external/glfw/include/GLFW/glfw3.h:2431:56: note: Function 'glfwSetErrorCallback' argument 1 names different: declaration 'callback' definition 'cbfun'.
GLFWAPI GLFWerrorfun glfwSetErrorCallback(GLFWerrorfun callback);
                                                       ^
src/external/glfw/src/init.c:540:56: note: Function 'glfwSetErrorCallback' argument 1 names different: declaration 'callback' definition 'cbfun'.
GLFWAPI GLFWerrorfun glfwSetErrorCallback(GLFWerrorfun cbfun)
                                                       ^
src/external/glfw/src/input.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/input.c:406:66: style:inconclusive: Function '_glfwInputDrop' argument 3 names different: declaration 'names' definition 'paths'. [funcArgNamesDifferent]
void _glfwInputDrop(_GLFWwindow* window, int count, const char** paths)
                                                                 ^
src/external/glfw/src/internal.h:933:66: note: Function '_glfwInputDrop' argument 3 names different: declaration 'names' definition 'paths'.
void _glfwInputDrop(_GLFWwindow* window, int count, const char** names);
                                                                 ^
src/external/glfw/src/input.c:406:66: note: Function '_glfwInputDrop' argument 3 names different: declaration 'names' definition 'paths'.
void _glfwInputDrop(_GLFWwindow* window, int count, const char** paths)
                                                                 ^
src/external/glfw/src/input.c:561:42: style:inconclusive: Function 'glfwGetInputMode' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI int glfwGetInputMode(GLFWwindow* handle, int mode)
                                         ^
src/external/glfw/include/GLFW/glfw3.h:4567:42: note: Function 'glfwGetInputMode' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI int glfwGetInputMode(GLFWwindow* window, int mode);
                                         ^
src/external/glfw/src/input.c:561:42: note: Function 'glfwGetInputMode' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI int glfwGetInputMode(GLFWwindow* handle, int mode)
                                         ^
src/external/glfw/src/input.c:586:43: style:inconclusive: Function 'glfwSetInputMode' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwSetInputMode(GLFWwindow* handle, int mode, int value)
                                          ^
src/external/glfw/include/GLFW/glfw3.h:4632:43: note: Function 'glfwSetInputMode' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwSetInputMode(GLFWwindow* window, int mode, int value);
                                          ^
src/external/glfw/src/input.c:586:43: note: Function 'glfwSetInputMode' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwSetInputMode(GLFWwindow* handle, int mode, int value)
                                          ^
src/external/glfw/src/input.c:730:36: style:inconclusive: Function 'glfwGetKey' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI int glfwGetKey(GLFWwindow* handle, int key)
                                   ^
src/external/glfw/include/GLFW/glfw3.h:4792:36: note: Function 'glfwGetKey' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI int glfwGetKey(GLFWwindow* window, int key);
                                   ^
src/external/glfw/src/input.c:730:36: note: Function 'glfwGetKey' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI int glfwGetKey(GLFWwindow* handle, int key)
                                   ^
src/external/glfw/src/input.c:753:44: style:inconclusive: Function 'glfwGetMouseButton' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI int glfwGetMouseButton(GLFWwindow* handle, int button)
                                           ^
src/external/glfw/include/GLFW/glfw3.h:4821:44: note: Function 'glfwGetMouseButton' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI int glfwGetMouseButton(GLFWwindow* window, int button);
                                           ^
src/external/glfw/src/input.c:753:44: note: Function 'glfwGetMouseButton' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI int glfwGetMouseButton(GLFWwindow* handle, int button)
                                           ^
src/external/glfw/src/input.c:776:43: style:inconclusive: Function 'glfwGetCursorPos' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwGetCursorPos(GLFWwindow* handle, double* xpos, double* ypos)
                                          ^
src/external/glfw/include/GLFW/glfw3.h:4859:43: note: Function 'glfwGetCursorPos' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwGetCursorPos(GLFWwindow* window, double* xpos, double* ypos);
                                          ^
src/external/glfw/src/input.c:776:43: note: Function 'glfwGetCursorPos' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwGetCursorPos(GLFWwindow* handle, double* xpos, double* ypos)
                                          ^
src/external/glfw/src/input.c:799:43: style:inconclusive: Function 'glfwSetCursorPos' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwSetCursorPos(GLFWwindow* handle, double xpos, double ypos)
                                          ^
src/external/glfw/include/GLFW/glfw3.h:4899:43: note: Function 'glfwSetCursorPos' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwSetCursorPos(GLFWwindow* window, double xpos, double ypos);
                                          ^
src/external/glfw/src/input.c:799:43: note: Function 'glfwSetCursorPos' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwSetCursorPos(GLFWwindow* handle, double xpos, double ypos)
                                          ^
src/external/glfw/src/input.c:893:44: style:inconclusive: Function 'glfwDestroyCursor' argument 1 names different: declaration 'cursor' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwDestroyCursor(GLFWcursor* handle)
                                           ^
src/external/glfw/include/GLFW/glfw3.h:5012:44: note: Function 'glfwDestroyCursor' argument 1 names different: declaration 'cursor' definition 'handle'.
GLFWAPI void glfwDestroyCursor(GLFWcursor* cursor);
                                           ^
src/external/glfw/src/input.c:893:44: note: Function 'glfwDestroyCursor' argument 1 names different: declaration 'cursor' definition 'handle'.
GLFWAPI void glfwDestroyCursor(GLFWcursor* handle)
                                           ^
src/external/glfw/src/input.c:928:40: style:inconclusive: Function 'glfwSetCursor' argument 1 names different: declaration 'window' definition 'windowHandle'. [funcArgNamesDifferent]
GLFWAPI void glfwSetCursor(GLFWwindow* windowHandle, GLFWcursor* cursorHandle)
                                       ^
src/external/glfw/include/GLFW/glfw3.h:5039:40: note: Function 'glfwSetCursor' argument 1 names different: declaration 'window' definition 'windowHandle'.
GLFWAPI void glfwSetCursor(GLFWwindow* window, GLFWcursor* cursor);
                                       ^
src/external/glfw/src/input.c:928:40: note: Function 'glfwSetCursor' argument 1 names different: declaration 'window' definition 'windowHandle'.
GLFWAPI void glfwSetCursor(GLFWwindow* windowHandle, GLFWcursor* cursorHandle)
                                       ^
src/external/glfw/src/input.c:928:66: style:inconclusive: Function 'glfwSetCursor' argument 2 names different: declaration 'cursor' definition 'cursorHandle'. [funcArgNamesDifferent]
GLFWAPI void glfwSetCursor(GLFWwindow* windowHandle, GLFWcursor* cursorHandle)
                                                                 ^
src/external/glfw/include/GLFW/glfw3.h:5039:60: note: Function 'glfwSetCursor' argument 2 names different: declaration 'cursor' definition 'cursorHandle'.
GLFWAPI void glfwSetCursor(GLFWwindow* window, GLFWcursor* cursor);
                                                           ^
src/external/glfw/src/input.c:928:66: note: Function 'glfwSetCursor' argument 2 names different: declaration 'cursor' definition 'cursorHandle'.
GLFWAPI void glfwSetCursor(GLFWwindow* windowHandle, GLFWcursor* cursorHandle)
                                                                 ^
src/external/glfw/src/input.c:941:51: style:inconclusive: Function 'glfwSetKeyCallback' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI GLFWkeyfun glfwSetKeyCallback(GLFWwindow* handle, GLFWkeyfun cbfun)
                                                  ^
src/external/glfw/include/GLFW/glfw3.h:5089:51: note: Function 'glfwSetKeyCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWkeyfun glfwSetKeyCallback(GLFWwindow* window, GLFWkeyfun callback);
                                                  ^
src/external/glfw/src/input.c:941:51: note: Function 'glfwSetKeyCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWkeyfun glfwSetKeyCallback(GLFWwindow* handle, GLFWkeyfun cbfun)
                                                  ^
src/external/glfw/src/input.c:941:70: style:inconclusive: Function 'glfwSetKeyCallback' argument 2 names different: declaration 'callback' definition 'cbfun'. [funcArgNamesDifferent]
GLFWAPI GLFWkeyfun glfwSetKeyCallback(GLFWwindow* handle, GLFWkeyfun cbfun)
                                                                     ^
src/external/glfw/include/GLFW/glfw3.h:5089:70: note: Function 'glfwSetKeyCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
GLFWAPI GLFWkeyfun glfwSetKeyCallback(GLFWwindow* window, GLFWkeyfun callback);
                                                                     ^
src/external/glfw/src/input.c:941:70: note: Function 'glfwSetKeyCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
GLFWAPI GLFWkeyfun glfwSetKeyCallback(GLFWwindow* handle, GLFWkeyfun cbfun)
                                                                     ^
src/external/glfw/src/input.c:951:53: style:inconclusive: Function 'glfwSetCharCallback' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI GLFWcharfun glfwSetCharCallback(GLFWwindow* handle, GLFWcharfun cbfun)
                                                    ^
src/external/glfw/include/GLFW/glfw3.h:5132:53: note: Function 'glfwSetCharCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWcharfun glfwSetCharCallback(GLFWwindow* window, GLFWcharfun callback);
                                                    ^
src/external/glfw/src/input.c:951:53: note: Function 'glfwSetCharCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWcharfun glfwSetCharCallback(GLFWwindow* handle, GLFWcharfun cbfun)
                                                    ^
src/external/glfw/src/input.c:951:73: style:inconclusive: Function 'glfwSetCharCallback' argument 2 names different: declaration 'callback' definition 'cbfun'. [funcArgNamesDifferent]
GLFWAPI GLFWcharfun glfwSetCharCallback(GLFWwindow* handle, GLFWcharfun cbfun)
                                                                        ^
src/external/glfw/include/GLFW/glfw3.h:5132:73: note: Function 'glfwSetCharCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
GLFWAPI GLFWcharfun glfwSetCharCallback(GLFWwindow* window, GLFWcharfun callback);
                                                                        ^
src/external/glfw/src/input.c:951:73: note: Function 'glfwSetCharCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
GLFWAPI GLFWcharfun glfwSetCharCallback(GLFWwindow* handle, GLFWcharfun cbfun)
                                                                        ^
src/external/glfw/src/input.c:961:61: style:inconclusive: Function 'glfwSetCharModsCallback' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI GLFWcharmodsfun glfwSetCharModsCallback(GLFWwindow* handle, GLFWcharmodsfun cbfun)
                                                            ^
src/external/glfw/include/GLFW/glfw3.h:5174:61: note: Function 'glfwSetCharModsCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWcharmodsfun glfwSetCharModsCallback(GLFWwindow* window, GLFWcharmodsfun callback);
                                                            ^
src/external/glfw/src/input.c:961:61: note: Function 'glfwSetCharModsCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWcharmodsfun glfwSetCharModsCallback(GLFWwindow* handle, GLFWcharmodsfun cbfun)
                                                            ^
src/external/glfw/src/input.c:961:85: style:inconclusive: Function 'glfwSetCharModsCallback' argument 2 names different: declaration 'callback' definition 'cbfun'. [funcArgNamesDifferent]
GLFWAPI GLFWcharmodsfun glfwSetCharModsCallback(GLFWwindow* handle, GLFWcharmodsfun cbfun)
                                                                                    ^
src/external/glfw/include/GLFW/glfw3.h:5174:85: note: Function 'glfwSetCharModsCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
GLFWAPI GLFWcharmodsfun glfwSetCharModsCallback(GLFWwindow* window, GLFWcharmodsfun callback);
                                                                                    ^
src/external/glfw/src/input.c:961:85: note: Function 'glfwSetCharModsCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
GLFWAPI GLFWcharmodsfun glfwSetCharModsCallback(GLFWwindow* handle, GLFWcharmodsfun cbfun)
                                                                                    ^
src/external/glfw/src/input.c:971:67: style:inconclusive: Function 'glfwSetMouseButtonCallback' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI GLFWmousebuttonfun glfwSetMouseButtonCallback(GLFWwindow* handle,
                                                                  ^
src/external/glfw/include/GLFW/glfw3.h:5211:67: note: Function 'glfwSetMouseButtonCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWmousebuttonfun glfwSetMouseButtonCallback(GLFWwindow* window, GLFWmousebuttonfun callback);
                                                                  ^
src/external/glfw/src/input.c:971:67: note: Function 'glfwSetMouseButtonCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWmousebuttonfun glfwSetMouseButtonCallback(GLFWwindow* handle,
                                                                  ^
src/external/glfw/src/input.c:972:74: style:inconclusive: Function 'glfwSetMouseButtonCallback' argument 2 names different: declaration 'callback' definition 'cbfun'. [funcArgNamesDifferent]
                                                      GLFWmousebuttonfun cbfun)
                                                                         ^
src/external/glfw/include/GLFW/glfw3.h:5211:94: note: Function 'glfwSetMouseButtonCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
GLFWAPI GLFWmousebuttonfun glfwSetMouseButtonCallback(GLFWwindow* window, GLFWmousebuttonfun callback);
                                                                                             ^
src/external/glfw/src/input.c:972:74: note: Function 'glfwSetMouseButtonCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
                                                      GLFWmousebuttonfun cbfun)
                                                                         ^
src/external/glfw/src/input.c:982:63: style:inconclusive: Function 'glfwSetCursorPosCallback' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI GLFWcursorposfun glfwSetCursorPosCallback(GLFWwindow* handle,
                                                              ^
src/external/glfw/include/GLFW/glfw3.h:5243:63: note: Function 'glfwSetCursorPosCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWcursorposfun glfwSetCursorPosCallback(GLFWwindow* window, GLFWcursorposfun callback);
                                                              ^
src/external/glfw/src/input.c:982:63: note: Function 'glfwSetCursorPosCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWcursorposfun glfwSetCursorPosCallback(GLFWwindow* handle,
                                                              ^
src/external/glfw/src/input.c:983:68: style:inconclusive: Function 'glfwSetCursorPosCallback' argument 2 names different: declaration 'callback' definition 'cbfun'. [funcArgNamesDifferent]
                                                  GLFWcursorposfun cbfun)
                                                                   ^
src/external/glfw/include/GLFW/glfw3.h:5243:88: note: Function 'glfwSetCursorPosCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
GLFWAPI GLFWcursorposfun glfwSetCursorPosCallback(GLFWwindow* window, GLFWcursorposfun callback);
                                                                                       ^
src/external/glfw/src/input.c:983:68: note: Function 'glfwSetCursorPosCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
                                                  GLFWcursorposfun cbfun)
                                                                   ^
src/external/glfw/src/input.c:993:67: style:inconclusive: Function 'glfwSetCursorEnterCallback' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI GLFWcursorenterfun glfwSetCursorEnterCallback(GLFWwindow* handle,
                                                                  ^
src/external/glfw/include/GLFW/glfw3.h:5274:67: note: Function 'glfwSetCursorEnterCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWcursorenterfun glfwSetCursorEnterCallback(GLFWwindow* window, GLFWcursorenterfun callback);
                                                                  ^
src/external/glfw/src/input.c:993:67: note: Function 'glfwSetCursorEnterCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWcursorenterfun glfwSetCursorEnterCallback(GLFWwindow* handle,
                                                                  ^
src/external/glfw/src/input.c:994:74: style:inconclusive: Function 'glfwSetCursorEnterCallback' argument 2 names different: declaration 'callback' definition 'cbfun'. [funcArgNamesDifferent]
                                                      GLFWcursorenterfun cbfun)
                                                                         ^
src/external/glfw/include/GLFW/glfw3.h:5274:94: note: Function 'glfwSetCursorEnterCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
GLFWAPI GLFWcursorenterfun glfwSetCursorEnterCallback(GLFWwindow* window, GLFWcursorenterfun callback);
                                                                                             ^
src/external/glfw/src/input.c:994:74: note: Function 'glfwSetCursorEnterCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
                                                      GLFWcursorenterfun cbfun)
                                                                         ^
src/external/glfw/src/input.c:1004:57: style:inconclusive: Function 'glfwSetScrollCallback' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI GLFWscrollfun glfwSetScrollCallback(GLFWwindow* handle,
                                                        ^
src/external/glfw/include/GLFW/glfw3.h:5308:57: note: Function 'glfwSetScrollCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWscrollfun glfwSetScrollCallback(GLFWwindow* window, GLFWscrollfun callback);
                                                        ^
src/external/glfw/src/input.c:1004:57: note: Function 'glfwSetScrollCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWscrollfun glfwSetScrollCallback(GLFWwindow* handle,
                                                        ^
src/external/glfw/src/input.c:1005:59: style:inconclusive: Function 'glfwSetScrollCallback' argument 2 names different: declaration 'callback' definition 'cbfun'. [funcArgNamesDifferent]
                                            GLFWscrollfun cbfun)
                                                          ^
src/external/glfw/include/GLFW/glfw3.h:5308:79: note: Function 'glfwSetScrollCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
GLFWAPI GLFWscrollfun glfwSetScrollCallback(GLFWwindow* window, GLFWscrollfun callback);
                                                                              ^
src/external/glfw/src/input.c:1005:59: note: Function 'glfwSetScrollCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
                                            GLFWscrollfun cbfun)
                                                          ^
src/external/glfw/src/input.c:1015:53: style:inconclusive: Function 'glfwSetDropCallback' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI GLFWdropfun glfwSetDropCallback(GLFWwindow* handle, GLFWdropfun cbfun)
                                                    ^
src/external/glfw/include/GLFW/glfw3.h:5345:53: note: Function 'glfwSetDropCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWdropfun glfwSetDropCallback(GLFWwindow* window, GLFWdropfun callback);
                                                    ^
src/external/glfw/src/input.c:1015:53: note: Function 'glfwSetDropCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWdropfun glfwSetDropCallback(GLFWwindow* handle, GLFWdropfun cbfun)
                                                    ^
src/external/glfw/src/input.c:1015:73: style:inconclusive: Function 'glfwSetDropCallback' argument 2 names different: declaration 'callback' definition 'cbfun'. [funcArgNamesDifferent]
GLFWAPI GLFWdropfun glfwSetDropCallback(GLFWwindow* handle, GLFWdropfun cbfun)
                                                                        ^
src/external/glfw/include/GLFW/glfw3.h:5345:73: note: Function 'glfwSetDropCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
GLFWAPI GLFWdropfun glfwSetDropCallback(GLFWwindow* window, GLFWdropfun callback);
                                                                        ^
src/external/glfw/src/input.c:1015:73: note: Function 'glfwSetDropCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
GLFWAPI GLFWdropfun glfwSetDropCallback(GLFWwindow* handle, GLFWdropfun cbfun)
                                                                        ^
src/external/glfw/src/input.c:1238:65: style:inconclusive: Function 'glfwSetJoystickCallback' argument 1 names different: declaration 'callback' definition 'cbfun'. [funcArgNamesDifferent]
GLFWAPI GLFWjoystickfun glfwSetJoystickCallback(GLFWjoystickfun cbfun)
                                                                ^
src/external/glfw/include/GLFW/glfw3.h:5686:65: note: Function 'glfwSetJoystickCallback' argument 1 names different: declaration 'callback' definition 'cbfun'.
GLFWAPI GLFWjoystickfun glfwSetJoystickCallback(GLFWjoystickfun callback);
                                                                ^
src/external/glfw/src/input.c:1238:65: note: Function 'glfwSetJoystickCallback' argument 1 names different: declaration 'callback' definition 'cbfun'.
GLFWAPI GLFWjoystickfun glfwSetJoystickCallback(GLFWjoystickfun cbfun)
                                                                ^
src/external/glfw/src/input.c:1454:49: style:inconclusive: Function 'glfwSetClipboardString' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwSetClipboardString(GLFWwindow* handle, const char* string)
                                                ^
src/external/glfw/include/GLFW/glfw3.h:5815:49: note: Function 'glfwSetClipboardString' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwSetClipboardString(GLFWwindow* window, const char* string);
                                                ^
src/external/glfw/src/input.c:1454:49: note: Function 'glfwSetClipboardString' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwSetClipboardString(GLFWwindow* handle, const char* string)
                                                ^
src/external/glfw/src/input.c:1462:56: style:inconclusive: Function 'glfwGetClipboardString' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI const char* glfwGetClipboardString(GLFWwindow* handle)
                                                       ^
src/external/glfw/include/GLFW/glfw3.h:5845:56: note: Function 'glfwGetClipboardString' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI const char* glfwGetClipboardString(GLFWwindow* window);
                                                       ^
src/external/glfw/src/input.c:1462:56: note: Function 'glfwGetClipboardString' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI const char* glfwGetClipboardString(GLFWwindow* handle)
                                                       ^
src/external/glfw/src/linux_joystick.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/monitor.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/monitor.c:227:18: style: The scope of the variable 'sizeDiff' can be reduced. [variableScope]
    unsigned int sizeDiff, leastSizeDiff = UINT_MAX;
                 ^
src/external/glfw/src/monitor.c:229:18: style: The scope of the variable 'colorDiff' can be reduced. [variableScope]
    unsigned int colorDiff, leastColorDiff = UINT_MAX;
                 ^
src/external/glfw/src/monitor.c:532:20: style: Checking if unsigned expression 'ramp->size' is less than zero. [unsignedLessThanZero]
    if (ramp->size <= 0)
                   ^
src/external/glfw/src/monitor.c:275:47: style:inconclusive: Function '_glfwCompareVideoModes' argument 1 names different: declaration 'first' definition 'fm'. [funcArgNamesDifferent]
int _glfwCompareVideoModes(const GLFWvidmode* fm, const GLFWvidmode* sm)
                                              ^
src/external/glfw/src/internal.h:966:47: note: Function '_glfwCompareVideoModes' argument 1 names different: declaration 'first' definition 'fm'.
int _glfwCompareVideoModes(const GLFWvidmode* first, const GLFWvidmode* second);
                                              ^
src/external/glfw/src/monitor.c:275:47: note: Function '_glfwCompareVideoModes' argument 1 names different: declaration 'first' definition 'fm'.
int _glfwCompareVideoModes(const GLFWvidmode* fm, const GLFWvidmode* sm)
                                              ^
src/external/glfw/src/monitor.c:275:70: style:inconclusive: Function '_glfwCompareVideoModes' argument 2 names different: declaration 'second' definition 'sm'. [funcArgNamesDifferent]
int _glfwCompareVideoModes(const GLFWvidmode* fm, const GLFWvidmode* sm)
                                                                     ^
src/external/glfw/src/internal.h:966:73: note: Function '_glfwCompareVideoModes' argument 2 names different: declaration 'second' definition 'sm'.
int _glfwCompareVideoModes(const GLFWvidmode* first, const GLFWvidmode* second);
                                                                        ^
src/external/glfw/src/monitor.c:275:70: note: Function '_glfwCompareVideoModes' argument 2 names different: declaration 'second' definition 'sm'.
int _glfwCompareVideoModes(const GLFWvidmode* fm, const GLFWvidmode* sm)
                                                                     ^
src/external/glfw/src/monitor.c:328:45: style:inconclusive: Function 'glfwGetMonitorPos' argument 1 names different: declaration 'monitor' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwGetMonitorPos(GLFWmonitor* handle, int* xpos, int* ypos)
                                            ^
src/external/glfw/include/GLFW/glfw3.h:2554:45: note: Function 'glfwGetMonitorPos' argument 1 names different: declaration 'monitor' definition 'handle'.
GLFWAPI void glfwGetMonitorPos(GLFWmonitor* monitor, int* xpos, int* ypos);
                                            ^
src/external/glfw/src/monitor.c:328:45: note: Function 'glfwGetMonitorPos' argument 1 names different: declaration 'monitor' definition 'handle'.
GLFWAPI void glfwGetMonitorPos(GLFWmonitor* handle, int* xpos, int* ypos)
                                            ^
src/external/glfw/src/monitor.c:343:50: style:inconclusive: Function 'glfwGetMonitorWorkarea' argument 1 names different: declaration 'monitor' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwGetMonitorWorkarea(GLFWmonitor* handle,
                                                 ^
src/external/glfw/include/GLFW/glfw3.h:2585:50: note: Function 'glfwGetMonitorWorkarea' argument 1 names different: declaration 'monitor' definition 'handle'.
GLFWAPI void glfwGetMonitorWorkarea(GLFWmonitor* monitor, int* xpos, int* ypos, int* width, int* height);
                                                 ^
src/external/glfw/src/monitor.c:343:50: note: Function 'glfwGetMonitorWorkarea' argument 1 names different: declaration 'monitor' definition 'handle'.
GLFWAPI void glfwGetMonitorWorkarea(GLFWmonitor* handle,
                                                 ^
src/external/glfw/src/monitor.c:364:54: style:inconclusive: Function 'glfwGetMonitorPhysicalSize' argument 1 names different: declaration 'monitor' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwGetMonitorPhysicalSize(GLFWmonitor* handle, int* widthMM, int* heightMM)
                                                     ^
src/external/glfw/include/GLFW/glfw3.h:2619:54: note: Function 'glfwGetMonitorPhysicalSize' argument 1 names different: declaration 'monitor' definition 'handle'.
GLFWAPI void glfwGetMonitorPhysicalSize(GLFWmonitor* monitor, int* widthMM, int* heightMM);
                                                     ^
src/external/glfw/src/monitor.c:364:54: note: Function 'glfwGetMonitorPhysicalSize' argument 1 names different: declaration 'monitor' definition 'handle'.
GLFWAPI void glfwGetMonitorPhysicalSize(GLFWmonitor* handle, int* widthMM, int* heightMM)
                                                     ^
src/external/glfw/src/monitor.c:382:54: style:inconclusive: Function 'glfwGetMonitorContentScale' argument 1 names different: declaration 'monitor' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwGetMonitorContentScale(GLFWmonitor* handle,
                                                     ^
src/external/glfw/include/GLFW/glfw3.h:2651:54: note: Function 'glfwGetMonitorContentScale' argument 1 names different: declaration 'monitor' definition 'handle'.
GLFWAPI void glfwGetMonitorContentScale(GLFWmonitor* monitor, float* xscale, float* yscale);
                                                     ^
src/external/glfw/src/monitor.c:382:54: note: Function 'glfwGetMonitorContentScale' argument 1 names different: declaration 'monitor' definition 'handle'.
GLFWAPI void glfwGetMonitorContentScale(GLFWmonitor* handle,
                                                     ^
src/external/glfw/src/monitor.c:397:53: style:inconclusive: Function 'glfwGetMonitorName' argument 1 names different: declaration 'monitor' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI const char* glfwGetMonitorName(GLFWmonitor* handle)
                                                    ^
src/external/glfw/include/GLFW/glfw3.h:2677:53: note: Function 'glfwGetMonitorName' argument 1 names different: declaration 'monitor' definition 'handle'.
GLFWAPI const char* glfwGetMonitorName(GLFWmonitor* monitor);
                                                    ^
src/external/glfw/src/monitor.c:397:53: note: Function 'glfwGetMonitorName' argument 1 names different: declaration 'monitor' definition 'handle'.
GLFWAPI const char* glfwGetMonitorName(GLFWmonitor* handle)
                                                    ^
src/external/glfw/src/monitor.c:406:53: style:inconclusive: Function 'glfwSetMonitorUserPointer' argument 1 names different: declaration 'monitor' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwSetMonitorUserPointer(GLFWmonitor* handle, void* pointer)
                                                    ^
src/external/glfw/include/GLFW/glfw3.h:2703:53: note: Function 'glfwSetMonitorUserPointer' argument 1 names different: declaration 'monitor' definition 'handle'.
GLFWAPI void glfwSetMonitorUserPointer(GLFWmonitor* monitor, void* pointer);
                                                    ^
src/external/glfw/src/monitor.c:406:53: note: Function 'glfwSetMonitorUserPointer' argument 1 names different: declaration 'monitor' definition 'handle'.
GLFWAPI void glfwSetMonitorUserPointer(GLFWmonitor* handle, void* pointer)
                                                    ^
src/external/glfw/src/monitor.c:415:54: style:inconclusive: Function 'glfwGetMonitorUserPointer' argument 1 names different: declaration 'monitor' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void* glfwGetMonitorUserPointer(GLFWmonitor* handle)
                                                     ^
src/external/glfw/include/GLFW/glfw3.h:2727:54: note: Function 'glfwGetMonitorUserPointer' argument 1 names different: declaration 'monitor' definition 'handle'.
GLFWAPI void* glfwGetMonitorUserPointer(GLFWmonitor* monitor);
                                                     ^
src/external/glfw/src/monitor.c:415:54: note: Function 'glfwGetMonitorUserPointer' argument 1 names different: declaration 'monitor' definition 'handle'.
GLFWAPI void* glfwGetMonitorUserPointer(GLFWmonitor* handle)
                                                     ^
src/external/glfw/src/monitor.c:424:62: style:inconclusive: Function 'glfwSetMonitorCallback' argument 1 names different: declaration 'callback' definition 'cbfun'. [funcArgNamesDifferent]
GLFWAPI GLFWmonitorfun glfwSetMonitorCallback(GLFWmonitorfun cbfun)
                                                             ^
src/external/glfw/include/GLFW/glfw3.h:2757:62: note: Function 'glfwSetMonitorCallback' argument 1 names different: declaration 'callback' definition 'cbfun'.
GLFWAPI GLFWmonitorfun glfwSetMonitorCallback(GLFWmonitorfun callback);
                                                             ^
src/external/glfw/src/monitor.c:424:62: note: Function 'glfwSetMonitorCallback' argument 1 names different: declaration 'callback' definition 'cbfun'.
GLFWAPI GLFWmonitorfun glfwSetMonitorCallback(GLFWmonitorfun cbfun)
                                                             ^
src/external/glfw/src/monitor.c:431:59: style:inconclusive: Function 'glfwGetVideoModes' argument 1 names different: declaration 'monitor' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI const GLFWvidmode* glfwGetVideoModes(GLFWmonitor* handle, int* count)
                                                          ^
src/external/glfw/include/GLFW/glfw3.h:2791:59: note: Function 'glfwGetVideoModes' argument 1 names different: declaration 'monitor' definition 'handle'.
GLFWAPI const GLFWvidmode* glfwGetVideoModes(GLFWmonitor* monitor, int* count);
                                                          ^
src/external/glfw/src/monitor.c:431:59: note: Function 'glfwGetVideoModes' argument 1 names different: declaration 'monitor' definition 'handle'.
GLFWAPI const GLFWvidmode* glfwGetVideoModes(GLFWmonitor* handle, int* count)
                                                          ^
src/external/glfw/src/monitor.c:448:58: style:inconclusive: Function 'glfwGetVideoMode' argument 1 names different: declaration 'monitor' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI const GLFWvidmode* glfwGetVideoMode(GLFWmonitor* handle)
                                                         ^
src/external/glfw/include/GLFW/glfw3.h:2819:58: note: Function 'glfwGetVideoMode' argument 1 names different: declaration 'monitor' definition 'handle'.
GLFWAPI const GLFWvidmode* glfwGetVideoMode(GLFWmonitor* monitor);
                                                         ^
src/external/glfw/src/monitor.c:448:58: note: Function 'glfwGetVideoMode' argument 1 names different: declaration 'monitor' definition 'handle'.
GLFWAPI const GLFWvidmode* glfwGetVideoMode(GLFWmonitor* handle)
                                                         ^
src/external/glfw/src/monitor.c:459:40: style:inconclusive: Function 'glfwSetGamma' argument 1 names different: declaration 'monitor' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwSetGamma(GLFWmonitor* handle, float gamma)
                                       ^
src/external/glfw/include/GLFW/glfw3.h:2852:40: note: Function 'glfwSetGamma' argument 1 names different: declaration 'monitor' definition 'handle'.
GLFWAPI void glfwSetGamma(GLFWmonitor* monitor, float gamma);
                                       ^
src/external/glfw/src/monitor.c:459:40: note: Function 'glfwSetGamma' argument 1 names different: declaration 'monitor' definition 'handle'.
GLFWAPI void glfwSetGamma(GLFWmonitor* handle, float gamma)
                                       ^
src/external/glfw/src/monitor.c:506:60: style:inconclusive: Function 'glfwGetGammaRamp' argument 1 names different: declaration 'monitor' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI const GLFWgammaramp* glfwGetGammaRamp(GLFWmonitor* handle)
                                                           ^
src/external/glfw/include/GLFW/glfw3.h:2882:60: note: Function 'glfwGetGammaRamp' argument 1 names different: declaration 'monitor' definition 'handle'.
GLFWAPI const GLFWgammaramp* glfwGetGammaRamp(GLFWmonitor* monitor);
                                                           ^
src/external/glfw/src/monitor.c:506:60: note: Function 'glfwGetGammaRamp' argument 1 names different: declaration 'monitor' definition 'handle'.
GLFWAPI const GLFWgammaramp* glfwGetGammaRamp(GLFWmonitor* handle)
                                                           ^
src/external/glfw/src/monitor.c:520:44: style:inconclusive: Function 'glfwSetGammaRamp' argument 1 names different: declaration 'monitor' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwSetGammaRamp(GLFWmonitor* handle, const GLFWgammaramp* ramp)
                                           ^
src/external/glfw/include/GLFW/glfw3.h:2923:44: note: Function 'glfwSetGammaRamp' argument 1 names different: declaration 'monitor' definition 'handle'.
GLFWAPI void glfwSetGammaRamp(GLFWmonitor* monitor, const GLFWgammaramp* ramp);
                                           ^
src/external/glfw/src/monitor.c:520:44: note: Function 'glfwSetGammaRamp' argument 1 names different: declaration 'monitor' definition 'handle'.
GLFWAPI void glfwSetGammaRamp(GLFWmonitor* handle, const GLFWgammaramp* ramp)
                                           ^
src/external/glfw/src/null_init.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/null_joystick.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/null_monitor.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/null_window.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/osmesa_context.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 45 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/osmesa_context.c:119:0: information: Skipping configuration '_GLFW_OSMESA_LIBRARY' since the value of '_GLFW_OSMESA_LIBRARY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        _GLFW_OSMESA_LIBRARY,
^
src/external/glfw/src/platform.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 48 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/platform.c:56:34: style:inconclusive: Function '_glfwSelectPlatform' argument 1 names different: declaration 'platformID' definition 'desiredID'. [funcArgNamesDifferent]
GLFWbool _glfwSelectPlatform(int desiredID, _GLFWplatform* platform)
                                 ^
src/external/glfw/src/internal.h:954:34: note: Function '_glfwSelectPlatform' argument 1 names different: declaration 'platformID' definition 'desiredID'.
GLFWbool _glfwSelectPlatform(int platformID, _GLFWplatform* platform);
                                 ^
src/external/glfw/src/platform.c:56:34: note: Function '_glfwSelectPlatform' argument 1 names different: declaration 'platformID' definition 'desiredID'.
GLFWbool _glfwSelectPlatform(int desiredID, _GLFWplatform* platform)
                                 ^
src/external/glfw/src/platform.c:120:39: style:inconclusive: Function 'glfwPlatformSupported' argument 1 names different: declaration 'platform' definition 'platformID'. [funcArgNamesDifferent]
GLFWAPI int glfwPlatformSupported(int platformID)
                                      ^
src/external/glfw/include/GLFW/glfw3.h:2476:39: note: Function 'glfwPlatformSupported' argument 1 names different: declaration 'platform' definition 'platformID'.
GLFWAPI int glfwPlatformSupported(int platform);
                                      ^
src/external/glfw/src/platform.c:120:39: note: Function 'glfwPlatformSupported' argument 1 names different: declaration 'platform' definition 'platformID'.
GLFWAPI int glfwPlatformSupported(int platformID)
                                      ^
src/external/glfw/src/posix_module.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/posix_poll.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 43 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/posix_thread.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/posix_time.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/vulkan.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 43 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/vulkan.c:298:54: style:inconclusive: Function 'glfwCreateWindowSurface' argument 2 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
                                         GLFWwindow* handle,
                                                     ^
src/external/glfw/include/GLFW/glfw3.h:6386:75: note: Function 'glfwCreateWindowSurface' argument 2 names different: declaration 'window' definition 'handle'.
GLFWAPI VkResult glfwCreateWindowSurface(VkInstance instance, GLFWwindow* window, const VkAllocationCallbacks* allocator, VkSurfaceKHR* surface);
                                                                          ^
src/external/glfw/src/vulkan.c:298:54: note: Function 'glfwCreateWindowSurface' argument 2 names different: declaration 'window' definition 'handle'.
                                         GLFWwindow* handle,
                                                     ^
src/external/glfw/src/vulkan.c:59:0: information: Skipping configuration '_GLFW_VULKAN_LIBRARY' since the value of '_GLFW_VULKAN_LIBRARY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        _glfw.vk.handle = _glfwPlatformLoadModule(_GLFW_VULKAN_LIBRARY);
^
src/external/glfw/src/wgl_context.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/wgl_context.c:527:9: style: The scope of the variable 'attribs' can be reduced. [variableScope]
    int attribs[40];
        ^
src/external/glfw/src/win32_init.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 43 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/win32_init.c:336:0: information: Skipping configuration 'CALLBACK' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static LRESULT CALLBACK helperWindowProc(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam)
^
src/external/glfw/src/win32_joystick.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/win32_joystick.c:274:0: information: Skipping configuration 'CALLBACK' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static BOOL CALLBACK deviceObjectCallback(const DIDEVICEOBJECTINSTANCEW* doi,
^
src/external/glfw/src/win32_joystick.c:346:0: information: Skipping configuration 'CALLBACK' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static BOOL CALLBACK deviceCallback(const DIDEVICEINSTANCE* di, void* user)
^
src/external/glfw/src/win32_module.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/win32_monitor.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/win32_monitor.c:40:0: information: Skipping configuration 'CALLBACK' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static BOOL CALLBACK monitorCallback(HMONITOR handle,
^
src/external/glfw/src/win32_thread.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/win32_time.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/win32_window.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/win32_window.c:543:0: information: Skipping configuration 'CALLBACK' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static LRESULT CALLBACK windowProc(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam)
^
src/external/glfw/src/window.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/window.c:77:51: style:inconclusive: Function '_glfwInputWindowPos' argument 2 names different: declaration 'xpos' definition 'x'. [funcArgNamesDifferent]
void _glfwInputWindowPos(_GLFWwindow* window, int x, int y)
                                                  ^
src/external/glfw/src/internal.h:914:51: note: Function '_glfwInputWindowPos' argument 2 names different: declaration 'xpos' definition 'x'.
void _glfwInputWindowPos(_GLFWwindow* window, int xpos, int ypos);
                                                  ^
src/external/glfw/src/window.c:77:51: note: Function '_glfwInputWindowPos' argument 2 names different: declaration 'xpos' definition 'x'.
void _glfwInputWindowPos(_GLFWwindow* window, int x, int y)
                                                  ^
src/external/glfw/src/window.c:77:58: style:inconclusive: Function '_glfwInputWindowPos' argument 3 names different: declaration 'ypos' definition 'y'. [funcArgNamesDifferent]
void _glfwInputWindowPos(_GLFWwindow* window, int x, int y)
                                                         ^
src/external/glfw/src/internal.h:914:61: note: Function '_glfwInputWindowPos' argument 3 names different: declaration 'ypos' definition 'y'.
void _glfwInputWindowPos(_GLFWwindow* window, int xpos, int ypos);
                                                            ^
src/external/glfw/src/window.c:77:58: note: Function '_glfwInputWindowPos' argument 3 names different: declaration 'ypos' definition 'y'.
void _glfwInputWindowPos(_GLFWwindow* window, int x, int y)
                                                         ^
src/external/glfw/src/window.c:467:44: style:inconclusive: Function 'glfwDestroyWindow' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwDestroyWindow(GLFWwindow* handle)
                                           ^
src/external/glfw/include/GLFW/glfw3.h:3190:44: note: Function 'glfwDestroyWindow' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwDestroyWindow(GLFWwindow* window);
                                           ^
src/external/glfw/src/window.c:467:44: note: Function 'glfwDestroyWindow' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwDestroyWindow(GLFWwindow* handle)
                                           ^
src/external/glfw/src/window.c:500:47: style:inconclusive: Function 'glfwWindowShouldClose' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI int glfwWindowShouldClose(GLFWwindow* handle)
                                              ^
src/external/glfw/include/GLFW/glfw3.h:3210:47: note: Function 'glfwWindowShouldClose' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI int glfwWindowShouldClose(GLFWwindow* window);
                                              ^
src/external/glfw/src/window.c:500:47: note: Function 'glfwWindowShouldClose' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI int glfwWindowShouldClose(GLFWwindow* handle)
                                              ^
src/external/glfw/src/window.c:509:51: style:inconclusive: Function 'glfwSetWindowShouldClose' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwSetWindowShouldClose(GLFWwindow* handle, int value)
                                                  ^
src/external/glfw/include/GLFW/glfw3.h:3232:51: note: Function 'glfwSetWindowShouldClose' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwSetWindowShouldClose(GLFWwindow* window, int value);
                                                  ^
src/external/glfw/src/window.c:509:51: note: Function 'glfwSetWindowShouldClose' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwSetWindowShouldClose(GLFWwindow* handle, int value)
                                                  ^
src/external/glfw/src/window.c:518:45: style:inconclusive: Function 'glfwSetWindowTitle' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwSetWindowTitle(GLFWwindow* handle, const char* title)
                                            ^
src/external/glfw/include/GLFW/glfw3.h:3257:45: note: Function 'glfwSetWindowTitle' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwSetWindowTitle(GLFWwindow* window, const char* title);
                                            ^
src/external/glfw/src/window.c:518:45: note: Function 'glfwSetWindowTitle' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwSetWindowTitle(GLFWwindow* handle, const char* title)
                                            ^
src/external/glfw/src/window.c:528:44: style:inconclusive: Function 'glfwSetWindowIcon' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwSetWindowIcon(GLFWwindow* handle,
                                           ^
src/external/glfw/include/GLFW/glfw3.h:3305:44: note: Function 'glfwSetWindowIcon' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwSetWindowIcon(GLFWwindow* window, int count, const GLFWimage* images);
                                           ^
src/external/glfw/src/window.c:528:44: note: Function 'glfwSetWindowIcon' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwSetWindowIcon(GLFWwindow* handle,
                                           ^
src/external/glfw/src/window.c:561:43: style:inconclusive: Function 'glfwGetWindowPos' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwGetWindowPos(GLFWwindow* handle, int* xpos, int* ypos)
                                          ^
src/external/glfw/include/GLFW/glfw3.h:3337:43: note: Function 'glfwGetWindowPos' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwGetWindowPos(GLFWwindow* window, int* xpos, int* ypos);
                                          ^
src/external/glfw/src/window.c:561:43: note: Function 'glfwGetWindowPos' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwGetWindowPos(GLFWwindow* handle, int* xpos, int* ypos)
                                          ^
src/external/glfw/src/window.c:575:43: style:inconclusive: Function 'glfwSetWindowPos' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwSetWindowPos(GLFWwindow* handle, int xpos, int ypos)
                                          ^
src/external/glfw/include/GLFW/glfw3.h:3372:43: note: Function 'glfwSetWindowPos' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwSetWindowPos(GLFWwindow* window, int xpos, int ypos);
                                          ^
src/external/glfw/src/window.c:575:43: note: Function 'glfwSetWindowPos' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwSetWindowPos(GLFWwindow* handle, int xpos, int ypos)
                                          ^
src/external/glfw/src/window.c:588:44: style:inconclusive: Function 'glfwGetWindowSize' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwGetWindowSize(GLFWwindow* handle, int* width, int* height)
                                           ^
src/external/glfw/include/GLFW/glfw3.h:3402:44: note: Function 'glfwGetWindowSize' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwGetWindowSize(GLFWwindow* window, int* width, int* height);
                                           ^
src/external/glfw/src/window.c:588:44: note: Function 'glfwGetWindowSize' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwGetWindowSize(GLFWwindow* handle, int* width, int* height)
                                           ^
src/external/glfw/src/window.c:602:44: style:inconclusive: Function 'glfwSetWindowSize' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwSetWindowSize(GLFWwindow* handle, int width, int height)
                                           ^
src/external/glfw/include/GLFW/glfw3.h:3529:44: note: Function 'glfwSetWindowSize' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwSetWindowSize(GLFWwindow* window, int width, int height);
                                           ^
src/external/glfw/src/window.c:602:44: note: Function 'glfwSetWindowSize' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwSetWindowSize(GLFWwindow* handle, int width, int height)
                                           ^
src/external/glfw/src/window.c:617:50: style:inconclusive: Function 'glfwSetWindowSizeLimits' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwSetWindowSizeLimits(GLFWwindow* handle,
                                                 ^
src/external/glfw/include/GLFW/glfw3.h:3445:50: note: Function 'glfwSetWindowSizeLimits' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwSetWindowSizeLimits(GLFWwindow* window, int minwidth, int minheight, int maxwidth, int maxheight);
                                                 ^
src/external/glfw/src/window.c:617:50: note: Function 'glfwSetWindowSizeLimits' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwSetWindowSizeLimits(GLFWwindow* handle,
                                                 ^
src/external/glfw/src/window.c:662:51: style:inconclusive: Function 'glfwSetWindowAspectRatio' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwSetWindowAspectRatio(GLFWwindow* handle, int numer, int denom)
                                                  ^
src/external/glfw/include/GLFW/glfw3.h:3488:51: note: Function 'glfwSetWindowAspectRatio' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwSetWindowAspectRatio(GLFWwindow* window, int numer, int denom);
                                                  ^
src/external/glfw/src/window.c:662:51: note: Function 'glfwSetWindowAspectRatio' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwSetWindowAspectRatio(GLFWwindow* handle, int numer, int denom)
                                                  ^
src/external/glfw/src/window.c:691:49: style:inconclusive: Function 'glfwGetFramebufferSize' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwGetFramebufferSize(GLFWwindow* handle, int* width, int* height)
                                                ^
src/external/glfw/include/GLFW/glfw3.h:3558:49: note: Function 'glfwGetFramebufferSize' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwGetFramebufferSize(GLFWwindow* window, int* width, int* height);
                                                ^
src/external/glfw/src/window.c:691:49: note: Function 'glfwGetFramebufferSize' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwGetFramebufferSize(GLFWwindow* handle, int* width, int* height)
                                                ^
src/external/glfw/src/window.c:705:49: style:inconclusive: Function 'glfwGetWindowFrameSize' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwGetWindowFrameSize(GLFWwindow* handle,
                                                ^
src/external/glfw/include/GLFW/glfw3.h:3595:49: note: Function 'glfwGetWindowFrameSize' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwGetWindowFrameSize(GLFWwindow* window, int* left, int* top, int* right, int* bottom);
                                                ^
src/external/glfw/src/window.c:705:49: note: Function 'glfwGetWindowFrameSize' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwGetWindowFrameSize(GLFWwindow* handle,
                                                ^
src/external/glfw/src/window.c:725:52: style:inconclusive: Function 'glfwGetWindowContentScale' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwGetWindowContentScale(GLFWwindow* handle,
                                                   ^
src/external/glfw/include/GLFW/glfw3.h:3628:52: note: Function 'glfwGetWindowContentScale' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwGetWindowContentScale(GLFWwindow* window, float* xscale, float* yscale);
                                                   ^
src/external/glfw/src/window.c:725:52: note: Function 'glfwGetWindowContentScale' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwGetWindowContentScale(GLFWwindow* handle,
                                                   ^
src/external/glfw/src/window.c:740:48: style:inconclusive: Function 'glfwGetWindowOpacity' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI float glfwGetWindowOpacity(GLFWwindow* handle)
                                               ^
src/external/glfw/include/GLFW/glfw3.h:3655:48: note: Function 'glfwGetWindowOpacity' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI float glfwGetWindowOpacity(GLFWwindow* window);
                                               ^
src/external/glfw/src/window.c:740:48: note: Function 'glfwGetWindowOpacity' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI float glfwGetWindowOpacity(GLFWwindow* handle)
                                               ^
src/external/glfw/src/window.c:749:47: style:inconclusive: Function 'glfwSetWindowOpacity' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwSetWindowOpacity(GLFWwindow* handle, float opacity)
                                              ^
src/external/glfw/include/GLFW/glfw3.h:3687:47: note: Function 'glfwSetWindowOpacity' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwSetWindowOpacity(GLFWwindow* window, float opacity);
                                              ^
src/external/glfw/src/window.c:749:47: note: Function 'glfwSetWindowOpacity' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwSetWindowOpacity(GLFWwindow* handle, float opacity)
                                              ^
src/external/glfw/src/window.c:768:44: style:inconclusive: Function 'glfwIconifyWindow' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwIconifyWindow(GLFWwindow* handle)
                                           ^
src/external/glfw/include/GLFW/glfw3.h:3719:44: note: Function 'glfwIconifyWindow' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwIconifyWindow(GLFWwindow* window);
                                           ^
src/external/glfw/src/window.c:768:44: note: Function 'glfwIconifyWindow' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwIconifyWindow(GLFWwindow* handle)
                                           ^
src/external/glfw/src/window.c:777:44: style:inconclusive: Function 'glfwRestoreWindow' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwRestoreWindow(GLFWwindow* handle)
                                           ^
src/external/glfw/include/GLFW/glfw3.h:3746:44: note: Function 'glfwRestoreWindow' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwRestoreWindow(GLFWwindow* window);
                                           ^
src/external/glfw/src/window.c:777:44: note: Function 'glfwRestoreWindow' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwRestoreWindow(GLFWwindow* handle)
                                           ^
src/external/glfw/src/window.c:786:45: style:inconclusive: Function 'glfwMaximizeWindow' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwMaximizeWindow(GLFWwindow* handle)
                                            ^
src/external/glfw/include/GLFW/glfw3.h:3771:45: note: Function 'glfwMaximizeWindow' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwMaximizeWindow(GLFWwindow* window);
                                            ^
src/external/glfw/src/window.c:786:45: note: Function 'glfwMaximizeWindow' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwMaximizeWindow(GLFWwindow* handle)
                                            ^
src/external/glfw/src/window.c:799:41: style:inconclusive: Function 'glfwShowWindow' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwShowWindow(GLFWwindow* handle)
                                        ^
src/external/glfw/include/GLFW/glfw3.h:3803:41: note: Function 'glfwShowWindow' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwShowWindow(GLFWwindow* window);
                                        ^
src/external/glfw/src/window.c:799:41: note: Function 'glfwShowWindow' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwShowWindow(GLFWwindow* handle)
                                        ^
src/external/glfw/src/window.c:815:53: style:inconclusive: Function 'glfwRequestWindowAttention' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwRequestWindowAttention(GLFWwindow* handle)
                                                    ^
src/external/glfw/include/GLFW/glfw3.h:3891:53: note: Function 'glfwRequestWindowAttention' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwRequestWindowAttention(GLFWwindow* window);
                                                    ^
src/external/glfw/src/window.c:815:53: note: Function 'glfwRequestWindowAttention' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwRequestWindowAttention(GLFWwindow* handle)
                                                    ^
src/external/glfw/src/window.c:825:41: style:inconclusive: Function 'glfwHideWindow' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwHideWindow(GLFWwindow* handle)
                                        ^
src/external/glfw/include/GLFW/glfw3.h:3825:41: note: Function 'glfwHideWindow' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwHideWindow(GLFWwindow* window);
                                        ^
src/external/glfw/src/window.c:825:41: note: Function 'glfwHideWindow' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwHideWindow(GLFWwindow* handle)
                                        ^
src/external/glfw/src/window.c:838:42: style:inconclusive: Function 'glfwFocusWindow' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwFocusWindow(GLFWwindow* handle)
                                         ^
src/external/glfw/include/GLFW/glfw3.h:3864:42: note: Function 'glfwFocusWindow' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwFocusWindow(GLFWwindow* window);
                                         ^
src/external/glfw/src/window.c:838:42: note: Function 'glfwFocusWindow' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwFocusWindow(GLFWwindow* handle)
                                         ^
src/external/glfw/src/window.c:848:45: style:inconclusive: Function 'glfwGetWindowAttrib' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI int glfwGetWindowAttrib(GLFWwindow* handle, int attrib)
                                            ^
src/external/glfw/include/GLFW/glfw3.h:4009:45: note: Function 'glfwGetWindowAttrib' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI int glfwGetWindowAttrib(GLFWwindow* window, int attrib);
                                            ^
src/external/glfw/src/window.c:848:45: note: Function 'glfwGetWindowAttrib' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI int glfwGetWindowAttrib(GLFWwindow* handle, int attrib)
                                            ^
src/external/glfw/src/window.c:911:46: style:inconclusive: Function 'glfwSetWindowAttrib' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwSetWindowAttrib(GLFWwindow* handle, int attrib, int value)
                                             ^
src/external/glfw/include/GLFW/glfw3.h:4047:46: note: Function 'glfwSetWindowAttrib' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwSetWindowAttrib(GLFWwindow* window, int attrib, int value);
                                             ^
src/external/glfw/src/window.c:911:46: note: Function 'glfwSetWindowAttrib' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwSetWindowAttrib(GLFWwindow* handle, int attrib, int value)
                                             ^
src/external/glfw/src/window.c:957:55: style:inconclusive: Function 'glfwGetWindowMonitor' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI GLFWmonitor* glfwGetWindowMonitor(GLFWwindow* handle)
                                                      ^
src/external/glfw/include/GLFW/glfw3.h:3913:55: note: Function 'glfwGetWindowMonitor' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWmonitor* glfwGetWindowMonitor(GLFWwindow* window);
                                                      ^
src/external/glfw/src/window.c:957:55: note: Function 'glfwGetWindowMonitor' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWmonitor* glfwGetWindowMonitor(GLFWwindow* handle)
                                                      ^
src/external/glfw/src/window.c:966:47: style:inconclusive: Function 'glfwSetWindowMonitor' argument 1 names different: declaration 'window' definition 'wh'. [funcArgNamesDifferent]
GLFWAPI void glfwSetWindowMonitor(GLFWwindow* wh,
                                              ^
src/external/glfw/include/GLFW/glfw3.h:3972:47: note: Function 'glfwSetWindowMonitor' argument 1 names different: declaration 'window' definition 'wh'.
GLFWAPI void glfwSetWindowMonitor(GLFWwindow* window, GLFWmonitor* monitor, int xpos, int ypos, int width, int height, int refreshRate);
                                              ^
src/external/glfw/src/window.c:966:47: note: Function 'glfwSetWindowMonitor' argument 1 names different: declaration 'window' definition 'wh'.
GLFWAPI void glfwSetWindowMonitor(GLFWwindow* wh,
                                              ^
src/external/glfw/src/window.c:967:48: style:inconclusive: Function 'glfwSetWindowMonitor' argument 2 names different: declaration 'monitor' definition 'mh'. [funcArgNamesDifferent]
                                  GLFWmonitor* mh,
                                               ^
src/external/glfw/include/GLFW/glfw3.h:3972:68: note: Function 'glfwSetWindowMonitor' argument 2 names different: declaration 'monitor' definition 'mh'.
GLFWAPI void glfwSetWindowMonitor(GLFWwindow* window, GLFWmonitor* monitor, int xpos, int ypos, int width, int height, int refreshRate);
                                                                   ^
src/external/glfw/src/window.c:967:48: note: Function 'glfwSetWindowMonitor' argument 2 names different: declaration 'monitor' definition 'mh'.
                                  GLFWmonitor* mh,
                                               ^
src/external/glfw/src/window.c:1005:51: style:inconclusive: Function 'glfwSetWindowUserPointer' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void glfwSetWindowUserPointer(GLFWwindow* handle, void* pointer)
                                                  ^
src/external/glfw/include/GLFW/glfw3.h:4070:51: note: Function 'glfwSetWindowUserPointer' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwSetWindowUserPointer(GLFWwindow* window, void* pointer);
                                                  ^
src/external/glfw/src/window.c:1005:51: note: Function 'glfwSetWindowUserPointer' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void glfwSetWindowUserPointer(GLFWwindow* handle, void* pointer)
                                                  ^
src/external/glfw/src/window.c:1014:52: style:inconclusive: Function 'glfwGetWindowUserPointer' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI void* glfwGetWindowUserPointer(GLFWwindow* handle)
                                                   ^
src/external/glfw/include/GLFW/glfw3.h:4091:52: note: Function 'glfwGetWindowUserPointer' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void* glfwGetWindowUserPointer(GLFWwindow* window);
                                                   ^
src/external/glfw/src/window.c:1014:52: note: Function 'glfwGetWindowUserPointer' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI void* glfwGetWindowUserPointer(GLFWwindow* handle)
                                                   ^
src/external/glfw/src/window.c:1023:63: style:inconclusive: Function 'glfwSetWindowPosCallback' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI GLFWwindowposfun glfwSetWindowPosCallback(GLFWwindow* handle,
                                                              ^
src/external/glfw/include/GLFW/glfw3.h:4126:63: note: Function 'glfwSetWindowPosCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWwindowposfun glfwSetWindowPosCallback(GLFWwindow* window, GLFWwindowposfun callback);
                                                              ^
src/external/glfw/src/window.c:1023:63: note: Function 'glfwSetWindowPosCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWwindowposfun glfwSetWindowPosCallback(GLFWwindow* handle,
                                                              ^
src/external/glfw/src/window.c:1024:68: style:inconclusive: Function 'glfwSetWindowPosCallback' argument 2 names different: declaration 'callback' definition 'cbfun'. [funcArgNamesDifferent]
                                                  GLFWwindowposfun cbfun)
                                                                   ^
src/external/glfw/include/GLFW/glfw3.h:4126:88: note: Function 'glfwSetWindowPosCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
GLFWAPI GLFWwindowposfun glfwSetWindowPosCallback(GLFWwindow* window, GLFWwindowposfun callback);
                                                                                       ^
src/external/glfw/src/window.c:1024:68: note: Function 'glfwSetWindowPosCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
                                                  GLFWwindowposfun cbfun)
                                                                   ^
src/external/glfw/src/window.c:1034:65: style:inconclusive: Function 'glfwSetWindowSizeCallback' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI GLFWwindowsizefun glfwSetWindowSizeCallback(GLFWwindow* handle,
                                                                ^
src/external/glfw/include/GLFW/glfw3.h:4158:65: note: Function 'glfwSetWindowSizeCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWwindowsizefun glfwSetWindowSizeCallback(GLFWwindow* window, GLFWwindowsizefun callback);
                                                                ^
src/external/glfw/src/window.c:1034:65: note: Function 'glfwSetWindowSizeCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWwindowsizefun glfwSetWindowSizeCallback(GLFWwindow* handle,
                                                                ^
src/external/glfw/src/window.c:1035:71: style:inconclusive: Function 'glfwSetWindowSizeCallback' argument 2 names different: declaration 'callback' definition 'cbfun'. [funcArgNamesDifferent]
                                                    GLFWwindowsizefun cbfun)
                                                                      ^
src/external/glfw/include/GLFW/glfw3.h:4158:91: note: Function 'glfwSetWindowSizeCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
GLFWAPI GLFWwindowsizefun glfwSetWindowSizeCallback(GLFWwindow* window, GLFWwindowsizefun callback);
                                                                                          ^
src/external/glfw/src/window.c:1035:71: note: Function 'glfwSetWindowSizeCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
                                                    GLFWwindowsizefun cbfun)
                                                                      ^
src/external/glfw/src/window.c:1045:67: style:inconclusive: Function 'glfwSetWindowCloseCallback' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI GLFWwindowclosefun glfwSetWindowCloseCallback(GLFWwindow* handle,
                                                                  ^
src/external/glfw/include/GLFW/glfw3.h:4198:67: note: Function 'glfwSetWindowCloseCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWwindowclosefun glfwSetWindowCloseCallback(GLFWwindow* window, GLFWwindowclosefun callback);
                                                                  ^
src/external/glfw/src/window.c:1045:67: note: Function 'glfwSetWindowCloseCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWwindowclosefun glfwSetWindowCloseCallback(GLFWwindow* handle,
                                                                  ^
src/external/glfw/src/window.c:1046:74: style:inconclusive: Function 'glfwSetWindowCloseCallback' argument 2 names different: declaration 'callback' definition 'cbfun'. [funcArgNamesDifferent]
                                                      GLFWwindowclosefun cbfun)
                                                                         ^
src/external/glfw/include/GLFW/glfw3.h:4198:94: note: Function 'glfwSetWindowCloseCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
GLFWAPI GLFWwindowclosefun glfwSetWindowCloseCallback(GLFWwindow* window, GLFWwindowclosefun callback);
                                                                                             ^
src/external/glfw/src/window.c:1046:74: note: Function 'glfwSetWindowCloseCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
                                                      GLFWwindowclosefun cbfun)
                                                                         ^
src/external/glfw/src/window.c:1056:71: style:inconclusive: Function 'glfwSetWindowRefreshCallback' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI GLFWwindowrefreshfun glfwSetWindowRefreshCallback(GLFWwindow* handle,
                                                                      ^
src/external/glfw/include/GLFW/glfw3.h:4234:71: note: Function 'glfwSetWindowRefreshCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWwindowrefreshfun glfwSetWindowRefreshCallback(GLFWwindow* window, GLFWwindowrefreshfun callback);
                                                                      ^
src/external/glfw/src/window.c:1056:71: note: Function 'glfwSetWindowRefreshCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWwindowrefreshfun glfwSetWindowRefreshCallback(GLFWwindow* handle,
                                                                      ^
src/external/glfw/src/window.c:1057:80: style:inconclusive: Function 'glfwSetWindowRefreshCallback' argument 2 names different: declaration 'callback' definition 'cbfun'. [funcArgNamesDifferent]
                                                          GLFWwindowrefreshfun cbfun)
                                                                               ^
src/external/glfw/include/GLFW/glfw3.h:4234:100: note: Function 'glfwSetWindowRefreshCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
GLFWAPI GLFWwindowrefreshfun glfwSetWindowRefreshCallback(GLFWwindow* window, GLFWwindowrefreshfun callback);
                                                                                                   ^
src/external/glfw/src/window.c:1057:80: note: Function 'glfwSetWindowRefreshCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
                                                          GLFWwindowrefreshfun cbfun)
                                                                               ^
src/external/glfw/src/window.c:1067:67: style:inconclusive: Function 'glfwSetWindowFocusCallback' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI GLFWwindowfocusfun glfwSetWindowFocusCallback(GLFWwindow* handle,
                                                                  ^
src/external/glfw/include/GLFW/glfw3.h:4269:67: note: Function 'glfwSetWindowFocusCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWwindowfocusfun glfwSetWindowFocusCallback(GLFWwindow* window, GLFWwindowfocusfun callback);
                                                                  ^
src/external/glfw/src/window.c:1067:67: note: Function 'glfwSetWindowFocusCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWwindowfocusfun glfwSetWindowFocusCallback(GLFWwindow* handle,
                                                                  ^
src/external/glfw/src/window.c:1068:74: style:inconclusive: Function 'glfwSetWindowFocusCallback' argument 2 names different: declaration 'callback' definition 'cbfun'. [funcArgNamesDifferent]
                                                      GLFWwindowfocusfun cbfun)
                                                                         ^
src/external/glfw/include/GLFW/glfw3.h:4269:94: note: Function 'glfwSetWindowFocusCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
GLFWAPI GLFWwindowfocusfun glfwSetWindowFocusCallback(GLFWwindow* window, GLFWwindowfocusfun callback);
                                                                                             ^
src/external/glfw/src/window.c:1068:74: note: Function 'glfwSetWindowFocusCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
                                                      GLFWwindowfocusfun cbfun)
                                                                         ^
src/external/glfw/src/window.c:1078:71: style:inconclusive: Function 'glfwSetWindowIconifyCallback' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI GLFWwindowiconifyfun glfwSetWindowIconifyCallback(GLFWwindow* handle,
                                                                      ^
src/external/glfw/include/GLFW/glfw3.h:4299:71: note: Function 'glfwSetWindowIconifyCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWwindowiconifyfun glfwSetWindowIconifyCallback(GLFWwindow* window, GLFWwindowiconifyfun callback);
                                                                      ^
src/external/glfw/src/window.c:1078:71: note: Function 'glfwSetWindowIconifyCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWwindowiconifyfun glfwSetWindowIconifyCallback(GLFWwindow* handle,
                                                                      ^
src/external/glfw/src/window.c:1079:80: style:inconclusive: Function 'glfwSetWindowIconifyCallback' argument 2 names different: declaration 'callback' definition 'cbfun'. [funcArgNamesDifferent]
                                                          GLFWwindowiconifyfun cbfun)
                                                                               ^
src/external/glfw/include/GLFW/glfw3.h:4299:100: note: Function 'glfwSetWindowIconifyCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
GLFWAPI GLFWwindowiconifyfun glfwSetWindowIconifyCallback(GLFWwindow* window, GLFWwindowiconifyfun callback);
                                                                                                   ^
src/external/glfw/src/window.c:1079:80: note: Function 'glfwSetWindowIconifyCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
                                                          GLFWwindowiconifyfun cbfun)
                                                                               ^
src/external/glfw/src/window.c:1089:73: style:inconclusive: Function 'glfwSetWindowMaximizeCallback' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI GLFWwindowmaximizefun glfwSetWindowMaximizeCallback(GLFWwindow* handle,
                                                                        ^
src/external/glfw/include/GLFW/glfw3.h:4329:73: note: Function 'glfwSetWindowMaximizeCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWwindowmaximizefun glfwSetWindowMaximizeCallback(GLFWwindow* window, GLFWwindowmaximizefun callback);
                                                                        ^
src/external/glfw/src/window.c:1089:73: note: Function 'glfwSetWindowMaximizeCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWwindowmaximizefun glfwSetWindowMaximizeCallback(GLFWwindow* handle,
                                                                        ^
src/external/glfw/src/window.c:1090:83: style:inconclusive: Function 'glfwSetWindowMaximizeCallback' argument 2 names different: declaration 'callback' definition 'cbfun'. [funcArgNamesDifferent]
                                                            GLFWwindowmaximizefun cbfun)
                                                                                  ^
src/external/glfw/include/GLFW/glfw3.h:4329:103: note: Function 'glfwSetWindowMaximizeCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
GLFWAPI GLFWwindowmaximizefun glfwSetWindowMaximizeCallback(GLFWwindow* window, GLFWwindowmaximizefun callback);
                                                                                                      ^
src/external/glfw/src/window.c:1090:83: note: Function 'glfwSetWindowMaximizeCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
                                                            GLFWwindowmaximizefun cbfun)
                                                                                  ^
src/external/glfw/src/window.c:1100:75: style:inconclusive: Function 'glfwSetFramebufferSizeCallback' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI GLFWframebuffersizefun glfwSetFramebufferSizeCallback(GLFWwindow* handle,
                                                                          ^
src/external/glfw/include/GLFW/glfw3.h:4359:75: note: Function 'glfwSetFramebufferSizeCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWframebuffersizefun glfwSetFramebufferSizeCallback(GLFWwindow* window, GLFWframebuffersizefun callback);
                                                                          ^
src/external/glfw/src/window.c:1100:75: note: Function 'glfwSetFramebufferSizeCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWframebuffersizefun glfwSetFramebufferSizeCallback(GLFWwindow* handle,
                                                                          ^
src/external/glfw/src/window.c:1101:86: style:inconclusive: Function 'glfwSetFramebufferSizeCallback' argument 2 names different: declaration 'callback' definition 'cbfun'. [funcArgNamesDifferent]
                                                              GLFWframebuffersizefun cbfun)
                                                                                     ^
src/external/glfw/include/GLFW/glfw3.h:4359:106: note: Function 'glfwSetFramebufferSizeCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
GLFWAPI GLFWframebuffersizefun glfwSetFramebufferSizeCallback(GLFWwindow* window, GLFWframebuffersizefun callback);
                                                                                                         ^
src/external/glfw/src/window.c:1101:86: note: Function 'glfwSetFramebufferSizeCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
                                                              GLFWframebuffersizefun cbfun)
                                                                                     ^
src/external/glfw/src/window.c:1111:81: style:inconclusive: Function 'glfwSetWindowContentScaleCallback' argument 1 names different: declaration 'window' definition 'handle'. [funcArgNamesDifferent]
GLFWAPI GLFWwindowcontentscalefun glfwSetWindowContentScaleCallback(GLFWwindow* handle,
                                                                                ^
src/external/glfw/include/GLFW/glfw3.h:4390:81: note: Function 'glfwSetWindowContentScaleCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWwindowcontentscalefun glfwSetWindowContentScaleCallback(GLFWwindow* window, GLFWwindowcontentscalefun callback);
                                                                                ^
src/external/glfw/src/window.c:1111:81: note: Function 'glfwSetWindowContentScaleCallback' argument 1 names different: declaration 'window' definition 'handle'.
GLFWAPI GLFWwindowcontentscalefun glfwSetWindowContentScaleCallback(GLFWwindow* handle,
                                                                                ^
src/external/glfw/src/window.c:1112:95: style:inconclusive: Function 'glfwSetWindowContentScaleCallback' argument 2 names different: declaration 'callback' definition 'cbfun'. [funcArgNamesDifferent]
                                                                    GLFWwindowcontentscalefun cbfun)
                                                                                              ^
src/external/glfw/include/GLFW/glfw3.h:4390:115: note: Function 'glfwSetWindowContentScaleCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
GLFWAPI GLFWwindowcontentscalefun glfwSetWindowContentScaleCallback(GLFWwindow* window, GLFWwindowcontentscalefun callback);
                                                                                                                  ^
src/external/glfw/src/window.c:1112:95: note: Function 'glfwSetWindowContentScaleCallback' argument 2 names different: declaration 'callback' definition 'cbfun'.
                                                                    GLFWwindowcontentscalefun cbfun)
                                                                                              ^
src/external/glfw/src/wl_init.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 43 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/wl_init.c:667:0: information: Skipping configuration 'WL_KEYBOARD_REPEAT_INFO_SINCE_VERSION' since the value of 'WL_KEYBOARD_REPEAT_INFO_SINCE_VERSION' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (_glfw.wl.seatVersion >= WL_KEYBOARD_REPEAT_INFO_SINCE_VERSION)
^
src/external/glfw/src/wl_monitor.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/wl_monitor.c:174:0: information: Skipping configuration 'WL_OUTPUT_NAME_SINCE_VERSION' since the value of 'WL_OUTPUT_NAME_SINCE_VERSION' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    version = _glfw_min(version, WL_OUTPUT_NAME_SINCE_VERSION);
^
src/external/glfw/src/wl_monitor.c:237:68: style:inconclusive: Function '_glfwGetVideoModesWayland' argument 2 names different: declaration 'count' definition 'found'. [funcArgNamesDifferent]
GLFWvidmode* _glfwGetVideoModesWayland(_GLFWmonitor* monitor, int* found)
                                                                   ^
src/external/glfw/src/wl_platform.h:511:68: note: Function '_glfwGetVideoModesWayland' argument 2 names different: declaration 'count' definition 'found'.
GLFWvidmode* _glfwGetVideoModesWayland(_GLFWmonitor* monitor, int* count);
                                                                   ^
src/external/glfw/src/wl_monitor.c:237:68: note: Function '_glfwGetVideoModesWayland' argument 2 names different: declaration 'count' definition 'found'.
GLFWvidmode* _glfwGetVideoModesWayland(_GLFWmonitor* monitor, int* found)
                                                                   ^
src/external/glfw/src/wl_window.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 44 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/wl_window.c:107:0: information: Skipping configuration 'SHM_ANON' since the value of 'SHM_ANON' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    fd = shm_open(SHM_ANON, O_RDWR | O_CLOEXEC, 0600);
^
src/external/glfw/src/x11_init.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 44 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/x11_init.c:980:9: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
        snprintf(name, sizeof(name), "_NET_WM_CM_S%u", _glfw.x11.screen);
        ^
src/external/glfw/src/x11_init.c:448:35: warning:inconclusive: Possible null pointer dereference: styles [nullPointer]
    for (unsigned int i = 0;  i < styles->count_styles;  i++)
                                  ^
src/external/glfw/src/x11_init.c:443:25: note: Assignment 'styles=NULL', assigned value is 0
    XIMStyles* styles = NULL;
                        ^
src/external/glfw/src/x11_init.c:445:70: note: Assuming condition is false
    if (XGetIMValues(_glfw.x11.im, XNQueryInputStyle, &styles, NULL) != NULL)
                                                                     ^
src/external/glfw/src/x11_init.c:448:35: note: Null pointer dereference
    for (unsigned int i = 0;  i < styles->count_styles;  i++)
                                  ^
src/external/glfw/src/x11_monitor.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/x11_window.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/x11_window.c:2627:23: style: struct member 'Anonymous17::functions' is never used. [unusedStructMember]
        unsigned long functions;
                      ^
src/external/glfw/src/x11_window.c:2629:14: style: struct member 'Anonymous17::input_mode' is never used. [unusedStructMember]
        long input_mode;
             ^
src/external/glfw/src/x11_window.c:2630:23: style: struct member 'Anonymous17::status' is never used. [unusedStructMember]
        unsigned long status;
                      ^
src/external/glfw/src/x11_window.c:2627:23: style: struct member 'Anonymous18::functions' is never used. [unusedStructMember]
        unsigned long functions;
                      ^
src/external/glfw/src/x11_window.c:2629:14: style: struct member 'Anonymous18::input_mode' is never used. [unusedStructMember]
        long input_mode;
             ^
src/external/glfw/src/x11_window.c:2630:23: style: struct member 'Anonymous18::status' is never used. [unusedStructMember]
        unsigned long status;
                      ^
src/external/glfw/src/x11_window.c:2627:23: style: struct member 'Anonymous25::functions' is never used. [unusedStructMember]
        unsigned long functions;
                      ^
src/external/glfw/src/x11_window.c:2629:14: style: struct member 'Anonymous25::input_mode' is never used. [unusedStructMember]
        long input_mode;
             ^
src/external/glfw/src/x11_window.c:2630:23: style: struct member 'Anonymous25::status' is never used. [unusedStructMember]
        unsigned long status;
                      ^
src/external/glfw/src/x11_window.c:2849:55: style:inconclusive: Function '_glfwSetCursorPosX11' argument 2 names different: declaration 'xpos' definition 'x'. [funcArgNamesDifferent]
void _glfwSetCursorPosX11(_GLFWwindow* window, double x, double y)
                                                      ^
src/external/glfw/src/x11_platform.h:947:55: note: Function '_glfwSetCursorPosX11' argument 2 names different: declaration 'xpos' definition 'x'.
void _glfwSetCursorPosX11(_GLFWwindow* window, double xpos, double ypos);
                                                      ^
src/external/glfw/src/x11_window.c:2849:55: note: Function '_glfwSetCursorPosX11' argument 2 names different: declaration 'xpos' definition 'x'.
void _glfwSetCursorPosX11(_GLFWwindow* window, double x, double y)
                                                      ^
src/external/glfw/src/x11_window.c:2849:65: style:inconclusive: Function '_glfwSetCursorPosX11' argument 3 names different: declaration 'ypos' definition 'y'. [funcArgNamesDifferent]
void _glfwSetCursorPosX11(_GLFWwindow* window, double x, double y)
                                                                ^
src/external/glfw/src/x11_platform.h:947:68: note: Function '_glfwSetCursorPosX11' argument 3 names different: declaration 'ypos' definition 'y'.
void _glfwSetCursorPosX11(_GLFWwindow* window, double xpos, double ypos);
                                                                   ^
src/external/glfw/src/x11_window.c:2849:65: note: Function '_glfwSetCursorPosX11' argument 3 names different: declaration 'ypos' definition 'y'.
void _glfwSetCursorPosX11(_GLFWwindow* window, double x, double y)
                                                                ^
src/external/glfw/src/x11_window.c:2627:23: style: struct member 'Anonymous38::functions' is never used. [unusedStructMember]
        unsigned long functions;
                      ^
src/external/glfw/src/x11_window.c:2629:14: style: struct member 'Anonymous38::input_mode' is never used. [unusedStructMember]
        long input_mode;
             ^
src/external/glfw/src/x11_window.c:2630:23: style: struct member 'Anonymous38::status' is never used. [unusedStructMember]
        unsigned long status;
                      ^
src/external/glfw/src/xkb_unicode.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glfw/src/xkb_unicode.c:914:9: style: The scope of the variable 'mid' can be reduced. [variableScope]
    int mid;
        ^
src/external/qoaplay.c:94:16: error: Resource leak: file [resourceLeak]
    if (!read) return NULL;
               ^
src/external/qoaplay.c:98:27: error: Resource leak: file [resourceLeak]
    if (!first_frame_pos) return NULL;
                          ^
src/external/stb_vorbis.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/stb_vorbis.c:2118:42: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
   uint8 ***part_classdata = (uint8 ***) temp_block_array(f,f->channels, part_read * sizeof(**part_classdata));
                                         ^
src/external/stb_vorbis.c:2635:28: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
   float *buf2 = (float *) temp_alloc(f, n2 * sizeof(*buf2));
                           ^
src/external/stb_vorbis.c:1404:75: warning: Invalid test for overflow 'f->stream_start+loc<f->stream_start'; pointer overflow is undefined behavior. Some mainstream compilers remove such overflow tests when optimising the code and assume it's always false. [invalidTestForOverflow]
      if (f->stream_start + loc >= f->stream_end || f->stream_start + loc < f->stream_start) {
                                                                          ^
src/external/stb_vorbis.c:1107:23: style: The scope of the variable 'y' can be reduced. [variableScope]
      int z = len[i], y;
                      ^
src/external/stb_vorbis.c:2456:10: style: The scope of the variable 'k00_20' can be reduced. [variableScope]
   float k00_20, k01_21;
         ^
src/external/stb_vorbis.c:2456:18: style: The scope of the variable 'k01_21' can be reduced. [variableScope]
   float k00_20, k01_21;
                 ^
src/external/stb_vorbis.c:2515:10: style: The scope of the variable 'k00' can be reduced. [variableScope]
   float k00,k11;
         ^
src/external/stb_vorbis.c:2515:14: style: The scope of the variable 'k11' can be reduced. [variableScope]
   float k00,k11;
             ^
src/external/stb_vorbis.c:4355:10: style: The scope of the variable 'n' can be reduced. [variableScope]
   int i,n;
         ^
src/external/stb_vorbis.c:5054:16: style: The scope of the variable 'f' can be reduced. [variableScope]
   stb_vorbis *f, p;
               ^
src/external/stb_vorbis.c:5101:16: style: The scope of the variable 'f' can be reduced. [variableScope]
   stb_vorbis *f, p;
               ^
src/external/stb_vorbis.c:5460:11: style: The scope of the variable 'i' can be reduced. [variableScope]
      int i;
          ^
src/external/stb_vorbis.c:4271:35: style:inconclusive: Function 'stb_vorbis_close' argument 1 names different: declaration 'f' definition 'p'. [funcArgNamesDifferent]
void stb_vorbis_close(stb_vorbis *p)
                                  ^
src/external/stb_vorbis.c:159:42: note: Function 'stb_vorbis_close' argument 1 names different: declaration 'f' definition 'p'.
extern void stb_vorbis_close(stb_vorbis *f);
                                         ^
src/external/stb_vorbis.c:4271:35: note: Function 'stb_vorbis_close' argument 1 names different: declaration 'f' definition 'p'.
void stb_vorbis_close(stb_vorbis *p)
                                  ^
src/external/stb_vorbis.c:4446:23: style:inconclusive: Function 'stb_vorbis_decode_frame_pushdata' argument 2 names different: declaration 'datablock' definition 'data'. [funcArgNamesDifferent]
         const uint8 *data, int data_len, // the memory available for decoding
                      ^
src/external/stb_vorbis.c:199:31: note: Function 'stb_vorbis_decode_frame_pushdata' argument 2 names different: declaration 'datablock' definition 'data'.
         const unsigned char *datablock, int datablock_length_in_bytes,
                              ^
src/external/stb_vorbis.c:4446:23: note: Function 'stb_vorbis_decode_frame_pushdata' argument 2 names different: declaration 'datablock' definition 'data'.
         const uint8 *data, int data_len, // the memory available for decoding
                      ^
src/external/stb_vorbis.c:4446:33: style:inconclusive: Function 'stb_vorbis_decode_frame_pushdata' argument 3 names different: declaration 'datablock_length_in_bytes' definition 'data_len'. [funcArgNamesDifferent]
         const uint8 *data, int data_len, // the memory available for decoding
                                ^
src/external/stb_vorbis.c:199:46: note: Function 'stb_vorbis_decode_frame_pushdata' argument 3 names different: declaration 'datablock_length_in_bytes' definition 'data_len'.
         const unsigned char *datablock, int datablock_length_in_bytes,
                                             ^
src/external/stb_vorbis.c:4446:33: note: Function 'stb_vorbis_decode_frame_pushdata' argument 3 names different: declaration 'datablock_length_in_bytes' definition 'data_len'.
         const uint8 *data, int data_len, // the memory available for decoding
                                ^
src/external/stb_vorbis.c:4515:31: style:inconclusive: Function 'stb_vorbis_open_pushdata' argument 1 names different: declaration 'datablock' definition 'data'. [funcArgNamesDifferent]
         const unsigned char *data, int data_len, // the memory available for decoding
                              ^
src/external/stb_vorbis.c:184:32: note: Function 'stb_vorbis_open_pushdata' argument 1 names different: declaration 'datablock' definition 'data'.
         const unsigned char * datablock, int datablock_length_in_bytes,
                               ^
src/external/stb_vorbis.c:4515:31: note: Function 'stb_vorbis_open_pushdata' argument 1 names different: declaration 'datablock' definition 'data'.
         const unsigned char *data, int data_len, // the memory available for decoding
                              ^
src/external/stb_vorbis.c:4515:41: style:inconclusive: Function 'stb_vorbis_open_pushdata' argument 2 names different: declaration 'datablock_length_in_bytes' definition 'data_len'. [funcArgNamesDifferent]
         const unsigned char *data, int data_len, // the memory available for decoding
                                        ^
src/external/stb_vorbis.c:184:47: note: Function 'stb_vorbis_open_pushdata' argument 2 names different: declaration 'datablock_length_in_bytes' definition 'data_len'.
         const unsigned char * datablock, int datablock_length_in_bytes,
                                              ^
src/external/stb_vorbis.c:4515:41: note: Function 'stb_vorbis_open_pushdata' argument 2 names different: declaration 'datablock_length_in_bytes' definition 'data_len'.
         const unsigned char *data, int data_len, // the memory available for decoding
                                        ^
src/external/stb_vorbis.c:4516:15: style:inconclusive: Function 'stb_vorbis_open_pushdata' argument 3 names different: declaration 'datablock_memory_consumed_in_bytes' definition 'data_used'. [funcArgNamesDifferent]
         int *data_used,              // only defined if result is not NULL
              ^
src/external/stb_vorbis.c:185:15: note: Function 'stb_vorbis_open_pushdata' argument 3 names different: declaration 'datablock_memory_consumed_in_bytes' definition 'data_used'.
         int *datablock_memory_consumed_in_bytes,
              ^
src/external/stb_vorbis.c:4516:15: note: Function 'stb_vorbis_open_pushdata' argument 3 names different: declaration 'datablock_memory_consumed_in_bytes' definition 'data_used'.
         int *data_used,              // only defined if result is not NULL
              ^
src/external/stb_vorbis.c:4517:46: style:inconclusive: Function 'stb_vorbis_open_pushdata' argument 5 names different: declaration 'alloc_buffer' definition 'alloc'. [funcArgNamesDifferent]
         int *error, const stb_vorbis_alloc *alloc)
                                             ^
src/external/stb_vorbis.c:187:34: note: Function 'stb_vorbis_open_pushdata' argument 5 names different: declaration 'alloc_buffer' definition 'alloc'.
         const stb_vorbis_alloc *alloc_buffer);
                                 ^
src/external/stb_vorbis.c:4517:46: note: Function 'stb_vorbis_open_pushdata' argument 5 names different: declaration 'alloc_buffer' definition 'alloc'.
         int *error, const stb_vorbis_alloc *alloc)
                                             ^
src/external/stb_vorbis.c:5052:49: style:inconclusive: Function 'stb_vorbis_open_file_section' argument 1 names different: declaration 'f' definition 'file'. [funcArgNamesDifferent]
stb_vorbis * stb_vorbis_open_file_section(FILE *file, int close_on_free, int *error, const stb_vorbis_alloc *alloc, unsigned int length)
                                                ^
src/external/stb_vorbis.c:289:56: note: Function 'stb_vorbis_open_file_section' argument 1 names different: declaration 'f' definition 'file'.
extern stb_vorbis * stb_vorbis_open_file_section(FILE *f, int close_handle_on_close,
                                                       ^
src/external/stb_vorbis.c:5052:49: note: Function 'stb_vorbis_open_file_section' argument 1 names different: declaration 'f' definition 'file'.
stb_vorbis * stb_vorbis_open_file_section(FILE *file, int close_on_free, int *error, const stb_vorbis_alloc *alloc, unsigned int length)
                                                ^
src/external/stb_vorbis.c:5052:59: style:inconclusive: Function 'stb_vorbis_open_file_section' argument 2 names different: declaration 'close_handle_on_close' definition 'close_on_free'. [funcArgNamesDifferent]
stb_vorbis * stb_vorbis_open_file_section(FILE *file, int close_on_free, int *error, const stb_vorbis_alloc *alloc, unsigned int length)
                                                          ^
src/external/stb_vorbis.c:289:63: note: Function 'stb_vorbis_open_file_section' argument 2 names different: declaration 'close_handle_on_close' definition 'close_on_free'.
extern stb_vorbis * stb_vorbis_open_file_section(FILE *f, int close_handle_on_close,
                                                              ^
src/external/stb_vorbis.c:5052:59: note: Function 'stb_vorbis_open_file_section' argument 2 names different: declaration 'close_handle_on_close' definition 'close_on_free'.
stb_vorbis * stb_vorbis_open_file_section(FILE *file, int close_on_free, int *error, const stb_vorbis_alloc *alloc, unsigned int length)
                                                          ^
src/external/stb_vorbis.c:5052:110: style:inconclusive: Function 'stb_vorbis_open_file_section' argument 4 names different: declaration 'alloc_buffer' definition 'alloc'. [funcArgNamesDifferent]
stb_vorbis * stb_vorbis_open_file_section(FILE *file, int close_on_free, int *error, const stb_vorbis_alloc *alloc, unsigned int length)
                                                                                                             ^
src/external/stb_vorbis.c:290:53: note: Function 'stb_vorbis_open_file_section' argument 4 names different: declaration 'alloc_buffer' definition 'alloc'.
                int *error, const stb_vorbis_alloc *alloc_buffer, unsigned int len);
                                                    ^
src/external/stb_vorbis.c:5052:110: note: Function 'stb_vorbis_open_file_section' argument 4 names different: declaration 'alloc_buffer' definition 'alloc'.
stb_vorbis * stb_vorbis_open_file_section(FILE *file, int close_on_free, int *error, const stb_vorbis_alloc *alloc, unsigned int length)
                                                                                                             ^
src/external/stb_vorbis.c:5052:130: style:inconclusive: Function 'stb_vorbis_open_file_section' argument 5 names different: declaration 'len' definition 'length'. [funcArgNamesDifferent]
stb_vorbis * stb_vorbis_open_file_section(FILE *file, int close_on_free, int *error, const stb_vorbis_alloc *alloc, unsigned int length)
                                                                                                                                 ^
src/external/stb_vorbis.c:290:80: note: Function 'stb_vorbis_open_file_section' argument 5 names different: declaration 'len' definition 'length'.
                int *error, const stb_vorbis_alloc *alloc_buffer, unsigned int len);
                                                                               ^
src/external/stb_vorbis.c:5052:130: note: Function 'stb_vorbis_open_file_section' argument 5 names different: declaration 'len' definition 'length'.
stb_vorbis * stb_vorbis_open_file_section(FILE *file, int close_on_free, int *error, const stb_vorbis_alloc *alloc, unsigned int length)
                                                                                                                                 ^
src/external/stb_vorbis.c:5073:41: style:inconclusive: Function 'stb_vorbis_open_file' argument 1 names different: declaration 'f' definition 'file'. [funcArgNamesDifferent]
stb_vorbis * stb_vorbis_open_file(FILE *file, int close_on_free, int *error, const stb_vorbis_alloc *alloc)
                                        ^
src/external/stb_vorbis.c:279:48: note: Function 'stb_vorbis_open_file' argument 1 names different: declaration 'f' definition 'file'.
extern stb_vorbis * stb_vorbis_open_file(FILE *f, int close_handle_on_close,
                                               ^
src/external/stb_vorbis.c:5073:41: note: Function 'stb_vorbis_open_file' argument 1 names different: declaration 'f' definition 'file'.
stb_vorbis * stb_vorbis_open_file(FILE *file, int close_on_free, int *error, const stb_vorbis_alloc *alloc)
                                        ^
src/external/stb_vorbis.c:5073:51: style:inconclusive: Function 'stb_vorbis_open_file' argument 2 names different: declaration 'close_handle_on_close' definition 'close_on_free'. [funcArgNamesDifferent]
stb_vorbis * stb_vorbis_open_file(FILE *file, int close_on_free, int *error, const stb_vorbis_alloc *alloc)
                                                  ^
src/external/stb_vorbis.c:279:55: note: Function 'stb_vorbis_open_file' argument 2 names different: declaration 'close_handle_on_close' definition 'close_on_free'.
extern stb_vorbis * stb_vorbis_open_file(FILE *f, int close_handle_on_close,
                                                      ^
src/external/stb_vorbis.c:5073:51: note: Function 'stb_vorbis_open_file' argument 2 names different: declaration 'close_handle_on_close' definition 'close_on_free'.
stb_vorbis * stb_vorbis_open_file(FILE *file, int close_on_free, int *error, const stb_vorbis_alloc *alloc)
                                                  ^
src/external/stb_vorbis.c:5073:102: style:inconclusive: Function 'stb_vorbis_open_file' argument 4 names different: declaration 'alloc_buffer' definition 'alloc'. [funcArgNamesDifferent]
stb_vorbis * stb_vorbis_open_file(FILE *file, int close_on_free, int *error, const stb_vorbis_alloc *alloc)
                                                                                                     ^
src/external/stb_vorbis.c:280:71: note: Function 'stb_vorbis_open_file' argument 4 names different: declaration 'alloc_buffer' definition 'alloc'.
                                  int *error, const stb_vorbis_alloc *alloc_buffer);
                                                                      ^
src/external/stb_vorbis.c:5073:102: note: Function 'stb_vorbis_open_file' argument 4 names different: declaration 'alloc_buffer' definition 'alloc'.
stb_vorbis * stb_vorbis_open_file(FILE *file, int close_on_free, int *error, const stb_vorbis_alloc *alloc)
                                                                                                     ^
src/external/stb_vorbis.c:5083:97: style:inconclusive: Function 'stb_vorbis_open_filename' argument 3 names different: declaration 'alloc_buffer' definition 'alloc'. [funcArgNamesDifferent]
stb_vorbis * stb_vorbis_open_filename(const char *filename, int *error, const stb_vorbis_alloc *alloc)
                                                                                                ^
src/external/stb_vorbis.c:275:71: note: Function 'stb_vorbis_open_filename' argument 3 names different: declaration 'alloc_buffer' definition 'alloc'.
                                  int *error, const stb_vorbis_alloc *alloc_buffer);
                                                                      ^
src/external/stb_vorbis.c:5083:97: note: Function 'stb_vorbis_open_filename' argument 3 names different: declaration 'alloc_buffer' definition 'alloc'.
stb_vorbis * stb_vorbis_open_filename(const char *filename, int *error, const stb_vorbis_alloc *alloc)
                                                                                                ^
src/external/stb_vorbis.c:5099:109: style:inconclusive: Function 'stb_vorbis_open_memory' argument 4 names different: declaration 'alloc_buffer' definition 'alloc'. [funcArgNamesDifferent]
stb_vorbis * stb_vorbis_open_memory(const unsigned char *data, int len, int *error, const stb_vorbis_alloc *alloc)
                                                                                                            ^
src/external/stb_vorbis.c:269:71: note: Function 'stb_vorbis_open_memory' argument 4 names different: declaration 'alloc_buffer' definition 'alloc'.
                                  int *error, const stb_vorbis_alloc *alloc_buffer);
                                                                      ^
src/external/stb_vorbis.c:5099:109: note: Function 'stb_vorbis_open_memory' argument 4 names different: declaration 'alloc_buffer' definition 'alloc'.
stb_vorbis * stb_vorbis_open_memory(const unsigned char *data, int len, int *error, const stb_vorbis_alloc *alloc)
                                                                                                            ^
src/external/stb_vorbis.c:5328:83: style:inconclusive: Function 'stb_vorbis_get_samples_short' argument 4 names different: declaration 'num_samples' definition 'len'. [funcArgNamesDifferent]
int stb_vorbis_get_samples_short(stb_vorbis *f, int channels, short **buffer, int len)
                                                                                  ^
src/external/stb_vorbis.c:362:90: note: Function 'stb_vorbis_get_samples_short' argument 4 names different: declaration 'num_samples' definition 'len'.
extern int stb_vorbis_get_samples_short(stb_vorbis *f, int channels, short **buffer, int num_samples);
                                                                                         ^
src/external/stb_vorbis.c:5328:83: note: Function 'stb_vorbis_get_samples_short' argument 4 names different: declaration 'num_samples' definition 'len'.
int stb_vorbis_get_samples_short(stb_vorbis *f, int channels, short **buffer, int len)
                                                                                  ^
src/external/stb_vorbis.c:1613:14: style: Local variable 'z' shadows outer variable [shadowVariable]
         int z = get8_packet_raw(f);
             ^
src/external/stb_vorbis.c:1601:11: note: Shadowed declaration
   uint32 z;
          ^
src/external/stb_vorbis.c:1613:14: note: Shadow variable
         int z = get8_packet_raw(f);
             ^
src/external/stb_vorbis.c:2143:29: style: Local variable 'c' shadows outer variable [shadowVariable]
                  Codebook *c = f->codebooks+r->classbook;
                            ^
src/external/stb_vorbis.c:2109:8: note: Shadowed declaration
   int c = r->classbook;
       ^
src/external/stb_vorbis.c:2143:29: note: Shadow variable
                  Codebook *c = f->codebooks+r->classbook;
                            ^
src/external/stb_vorbis.c:2157:23: style: Local variable 'z' shadows outer variable [shadowVariable]
                  int z = r->begin + pcount*r->part_size;
                      ^
src/external/stb_vorbis.c:2140:20: note: Shadowed declaration
               int z = r->begin + pcount*r->part_size;
                   ^
src/external/stb_vorbis.c:2157:23: note: Shadow variable
                  int z = r->begin + pcount*r->part_size;
                      ^
src/external/stb_vorbis.c:2159:23: style: Local variable 'c' shadows outer variable [shadowVariable]
                  int c = part_classdata[0][class_set][i];
                      ^
src/external/stb_vorbis.c:2109:8: note: Shadowed declaration
   int c = r->classbook;
       ^
src/external/stb_vorbis.c:2159:23: note: Shadow variable
                  int c = part_classdata[0][class_set][i];
                      ^
src/external/stb_vorbis.c:2189:29: style: Local variable 'c' shadows outer variable [shadowVariable]
                  Codebook *c = f->codebooks+r->classbook;
                            ^
src/external/stb_vorbis.c:2109:8: note: Shadowed declaration
   int c = r->classbook;
       ^
src/external/stb_vorbis.c:2189:29: note: Shadow variable
                  Codebook *c = f->codebooks+r->classbook;
                            ^
src/external/stb_vorbis.c:2203:23: style: Local variable 'z' shadows outer variable [shadowVariable]
                  int z = r->begin + pcount*r->part_size;
                      ^
src/external/stb_vorbis.c:2186:20: note: Shadowed declaration
               int z = r->begin + pcount*r->part_size;
                   ^
src/external/stb_vorbis.c:2203:23: note: Shadow variable
                  int z = r->begin + pcount*r->part_size;
                      ^
src/external/stb_vorbis.c:2205:23: style: Local variable 'c' shadows outer variable [shadowVariable]
                  int c = part_classdata[0][class_set][i];
                      ^
src/external/stb_vorbis.c:2109:8: note: Shadowed declaration
   int c = r->classbook;
       ^
src/external/stb_vorbis.c:2205:23: note: Shadow variable
                  int c = part_classdata[0][class_set][i];
                      ^
src/external/stb_vorbis.c:2236:29: style: Local variable 'c' shadows outer variable [shadowVariable]
                  Codebook *c = f->codebooks+r->classbook;
                            ^
src/external/stb_vorbis.c:2109:8: note: Shadowed declaration
   int c = r->classbook;
       ^
src/external/stb_vorbis.c:2236:29: note: Shadow variable
                  Codebook *c = f->codebooks+r->classbook;
                            ^
src/external/stb_vorbis.c:2255:23: style: Local variable 'c' shadows outer variable [shadowVariable]
                  int c = part_classdata[j][class_set][i];
                      ^
src/external/stb_vorbis.c:2109:8: note: Shadowed declaration
   int c = r->classbook;
       ^
src/external/stb_vorbis.c:2255:23: note: Shadow variable
                  int c = part_classdata[j][class_set][i];
                      ^
src/external/stb_vorbis.c:2263:26: style: Local variable 'n' shadows outer argument [shadowArgument]
                     int n = r->part_size;
                         ^
src/external/stb_vorbis.c:2104:75: note: Shadowed declaration
static void decode_residue(vorb *f, float *residue_buffers[], int ch, int n, int rn, uint8 *do_not_decode)
                                                                          ^
src/external/stb_vorbis.c:2263:26: note: Shadow variable
                     int n = r->part_size;
                         ^
src/external/stb_vorbis.c:3331:11: style: Local variable 'n2' shadows outer variable [shadowVariable]
      int n2 = n >> 1;
          ^
src/external/stb_vorbis.c:3183:16: note: Shadowed declaration
   int i,j,k,n,n2;
               ^
src/external/stb_vorbis.c:3331:11: note: Shadow variable
      int n2 = n >> 1;
          ^
src/external/stb_vorbis.c:3332:14: style: Local variable 'm' shadows outer argument [shadowArgument]
      float *m = f->channel_buffers[map->chan[i].magnitude];
             ^
src/external/stb_vorbis.c:3180:63: note: Shadowed declaration
static int vorbis_decode_packet_rest(vorb *f, int *len, Mode *m, int left_start, int left_end, int right_start, int right_end, int *p_left)
                                                              ^
src/external/stb_vorbis.c:3332:14: note: Shadow variable
      float *m = f->channel_buffers[map->chan[i].magnitude];
             ^
src/external/stb_vorbis.c:3469:11: style: Local variable 'i' shadows outer variable [shadowVariable]
      int i,j, n = f->previous_length;
          ^
src/external/stb_vorbis.c:3458:13: note: Shadowed declaration
   int prev,i,j;
            ^
src/external/stb_vorbis.c:3469:11: note: Shadow variable
      int i,j, n = f->previous_length;
          ^
src/external/stb_vorbis.c:3469:13: style: Local variable 'j' shadows outer variable [shadowVariable]
      int i,j, n = f->previous_length;
            ^
src/external/stb_vorbis.c:3458:15: note: Shadowed declaration
   int prev,i,j;
              ^
src/external/stb_vorbis.c:3469:13: note: Shadow variable
      int i,j, n = f->previous_length;
            ^
src/external/stb_vorbis.c:3856:17: style: Local variable 'values' shadows outer variable [shadowVariable]
            int values = lookup1_values(c->entries, c->dimensions);
                ^
src/external/stb_vorbis.c:3720:15: note: Shadowed declaration
      uint32 *values;
              ^
src/external/stb_vorbis.c:3856:17: note: Shadow variable
            int values = lookup1_values(c->entries, c->dimensions);
                ^
src/external/stb_vorbis.c:3873:17: style: Local variable 'len' shadows outer variable [shadowVariable]
            int len, sparse = c->sparse;
                ^
src/external/stb_vorbis.c:3583:8: note: Shadowed declaration
   int len,i,j,k, max_submaps = 0;
       ^
src/external/stb_vorbis.c:3873:17: note: Shadow variable
            int len, sparse = c->sparse;
                ^
src/external/stb_vorbis.c:4161:11: style: Local variable 'i' shadows outer variable [shadowVariable]
      int i,max_part_read=0;
          ^
src/external/stb_vorbis.c:3583:12: note: Shadowed declaration
   int len,i,j,k, max_submaps = 0;
           ^
src/external/stb_vorbis.c:4161:11: note: Shadow variable
      int i,max_part_read=0;
          ^
src/external/stb_vorbis.c:4411:11: style: Local variable 'n' shadows outer variable [shadowVariable]
      int n = f->scan[i].bytes_done;
          ^
src/external/stb_vorbis.c:4355:10: note: Shadowed declaration
   int i,n;
         ^
src/external/stb_vorbis.c:4411:11: note: Shadow variable
      int n = f->scan[i].bytes_done;
          ^
src/external/stb_vorbis.c:4474:27: style: Local variable 'error' shadows outer function [shadowFunction]
      enum STBVorbisError error = f->error;
                          ^
src/external/stb_vorbis.c:913:12: note: Shadowed declaration
static int error(vorb *f, enum STBVorbisError e)
           ^
src/external/stb_vorbis.c:4474:27: note: Shadow variable
      enum STBVorbisError error = f->error;
                          ^
src/external/stb_vorbis.c:4580:20: style: Local variable 'i' shadows outer variable [shadowVariable]
            uint32 i, crc, goal, len;
                   ^
src/external/stb_vorbis.c:4569:14: note: Shadowed declaration
         int i;
             ^
src/external/stb_vorbis.c:4580:20: note: Shadow variable
            uint32 i, crc, goal, len;
                   ^
src/external/stb_vorbis.c:4758:23: style: Local variable 'error' shadows outer function [shadowFunction]
               double error = ((double) last_sample_limit - mid.last_decoded_sample) * bytes_per_sample;
                      ^
src/external/stb_vorbis.c:913:12: note: Shadowed declaration
static int error(vorb *f, enum STBVorbisError e)
           ^
src/external/stb_vorbis.c:4758:23: note: Shadow variable
               double error = ((double) last_sample_limit - mid.last_decoded_sample) * bytes_per_sample;
                      ^
src/external/stb_vorbis.c:5348:40: style: Local variable 'error' shadows outer function [shadowFunction]
   int data_len, offset, total, limit, error;
                                       ^
src/external/stb_vorbis.c:913:12: note: Shadowed declaration
static int error(vorb *f, enum STBVorbisError e)
           ^
src/external/stb_vorbis.c:5348:40: note: Shadow variable
   int data_len, offset, total, limit, error;
                                       ^
src/external/stb_vorbis.c:5388:40: style: Local variable 'error' shadows outer function [shadowFunction]
   int data_len, offset, total, limit, error;
                                       ^
src/external/stb_vorbis.c:913:12: note: Shadowed declaration
static int error(vorb *f, enum STBVorbisError e)
           ^
src/external/stb_vorbis.c:5388:40: note: Shadow variable
   int data_len, offset, total, limit, error;
                                       ^
src/external/stb_vorbis.c:2120:37: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
   int **classifications = (int **) temp_block_array(f,f->channels, part_read * sizeof(**classifications));
                                    ^
src/external/stb_vorbis.c:2161:23: style: Local variable 'c' shadows outer variable [shadowVariable]
                  int c = classifications[0][pcount];
                      ^
src/external/stb_vorbis.c:2109:8: note: Shadowed declaration
   int c = r->classbook;
       ^
src/external/stb_vorbis.c:2161:23: note: Shadow variable
                  int c = classifications[0][pcount];
                      ^
src/external/stb_vorbis.c:2207:23: style: Local variable 'c' shadows outer variable [shadowVariable]
                  int c = classifications[0][pcount];
                      ^
src/external/stb_vorbis.c:2109:8: note: Shadowed declaration
   int c = r->classbook;
       ^
src/external/stb_vorbis.c:2207:23: note: Shadow variable
                  int c = classifications[0][pcount];
                      ^
src/external/stb_vorbis.c:2257:23: style: Local variable 'c' shadows outer variable [shadowVariable]
                  int c = classifications[j][pcount];
                      ^
src/external/stb_vorbis.c:2109:8: note: Shadowed declaration
   int c = r->classbook;
       ^
src/external/stb_vorbis.c:2257:23: note: Shadow variable
                  int c = classifications[j][pcount];
                      ^
src/external/stb_vorbis.c:5411:0: error: failed to expand 'realloc', Wrong number of parameters for macro 'realloc'. [preprocessorErrorDirective]
         data2 = (short *) realloc(data, total * sizeof(*data));
^
src/external/stb_vorbis.c:3261:30: style: Condition 'val&1' is always true [knownConditionTrueFalse]
                     if (val & 1)
                             ^
src/external/stb_vorbis.c:3252:20: note: Assuming condition 'val' is true
               if (val) {
                   ^
src/external/stb_vorbis.c:3261:30: note: Condition 'val&1' is always true
                     if (val & 1)
                             ^
src/external/stb_vorbis.c:772:12: style: struct member 'CRCscan::goal_crc' is never used. [unusedStructMember]
   uint32  goal_crc;    // expected crc if match
           ^
src/external/stb_vorbis.c:773:12: style: struct member 'CRCscan::bytes_left' is never used. [unusedStructMember]
   int     bytes_left;  // bytes left in packet
           ^
src/external/stb_vorbis.c:774:12: style: struct member 'CRCscan::crc_so_far' is never used. [unusedStructMember]
   uint32  crc_so_far;  // running crc
           ^
src/external/stb_vorbis.c:775:12: style: struct member 'CRCscan::bytes_done' is never used. [unusedStructMember]
   int     bytes_done;  // bytes processed in _current_ chunk
           ^
src/external/stb_vorbis.c:776:12: style: struct member 'CRCscan::sample_loc' is never used. [unusedStructMember]
   uint32  sample_loc;  // granule pos encoded in page
           ^
src/raudio.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 1355 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/jar_mod.h:370:15: error: Array 's[5]' accessed at index 1083, which is out of bounds. [arrayIndexOutOfBounds]
        d[i]=s[i];
              ^
src/external/jar_mod.h:370:10: warning: The address of local variable 'length' might be accessed at non-zero index. [objectIndex]
        d[i]=s[i];
         ^
src/external/jar_mod.h:1152:25: note: Address of variable taken here.
                memcopy(&(modctx->song.length), &(modctx->song.samples[15]), 130);
                        ^
src/external/jar_mod.h:1152:25: note: Calling function 'memcopy', 1st argument '&(modctx->song.length)' value is lifetime=length
                memcopy(&(modctx->song.length), &(modctx->song.samples[15]), 130);
                        ^
src/external/jar_mod.h:370:10: note: The address of local variable 'length' might be accessed at non-zero index.
        d[i]=s[i];
         ^
src/external/jar_mod.h:437:20: warning: Identical inner 'if' condition is always true. [identicalInnerCondition]
        if( period || sample )
                   ^
src/external/jar_mod.h:430:17: note: outer condition: period||sample
    if ( period || sample )
                ^
src/external/jar_mod.h:437:20: note: identical inner condition: period||sample
        if( period || sample )
                   ^
src/external/miniaudio.h:11639:25: style: Condition '(*(char*)&n)==1' is always true [knownConditionTrueFalse]
    return (*(char*)&n) == 1;
                        ^
src/external/miniaudio.h:11638:13: note: Assignment 'n=1', assigned value is 1
    int n = 1;
            ^
src/external/miniaudio.h:11639:25: note: Condition '(*(char*)&n)==1' is always true
    return (*(char*)&n) == 1;
                        ^
src/external/miniaudio.h:51286:11: style: Condition 'n==0' is always false [knownConditionTrueFalse]
    if (n == 0) {
          ^
src/external/miniaudio.h:51279:20: note: Assuming that condition 'ratioInOut<=0' is not redundant
    if (ratioInOut <= 0) {
                   ^
src/external/miniaudio.h:51284:9: note: Assignment 'n=(unsigned int)(ratioInOut*d)', assigned value is 0
    n = (ma_uint32)(ratioInOut * d);
        ^
src/external/miniaudio.h:51286:11: note: Condition 'n==0' is always false
    if (n == 0) {
          ^
src/external/miniaudio.h:51760:11: style: Condition 'n==0' is always false [knownConditionTrueFalse]
    if (n == 0) {
          ^
src/external/miniaudio.h:51753:15: note: Assuming that condition 'ratio<=0' is not redundant
    if (ratio <= 0) {
              ^
src/external/miniaudio.h:51758:9: note: Assignment 'n=(unsigned int)(ratio*d)', assigned value is 0
    n = (ma_uint32)(ratio * d);
        ^
src/external/miniaudio.h:51760:11: note: Condition 'n==0' is always false
    if (n == 0) {
          ^
src/external/miniaudio.h:52060:17: style: Condition '!isInputChannelPositionInOutput' is always true [knownConditionTrueFalse]
            if (!isInputChannelPositionInOutput) {
                ^
src/external/miniaudio.h:52054:56: note: Assignment 'isInputChannelPositionInOutput=0', assigned value is 0
            ma_bool32 isInputChannelPositionInOutput = MA_FALSE;
                                                       ^
src/external/miniaudio.h:52055:57: note: Assuming condition is false
            if (ma_channel_map_contains_channel_position(channelsOut, pChannelMapOut, ma_channel_map_get_channel(pChannelMapIn, channelsIn, iChannelIn))) {
                                                        ^
src/external/miniaudio.h:52060:17: note: Condition '!isInputChannelPositionInOutput' is always true
            if (!isInputChannelPositionInOutput) {
                ^
src/external/miniaudio.h:63492:20: style: Condition 'result!=MA_SUCCESS' is always true [knownConditionTrueFalse]
        if (result != MA_SUCCESS) {
                   ^
src/external/miniaudio.h:63457:24: note: Assignment 'result=MA_NO_BACKEND', assigned value is -103
    ma_result result = MA_NO_BACKEND;
                       ^
src/external/miniaudio.h:63492:20: note: Condition 'result!=MA_SUCCESS' is always true
        if (result != MA_SUCCESS) {
                   ^
src/external/miniaudio.h:63497:16: style: Condition 'result!=MA_SUCCESS' is always true [knownConditionTrueFalse]
    if (result != MA_SUCCESS) {
               ^
src/external/miniaudio.h:63457:24: note: Assignment 'result=MA_NO_BACKEND', assigned value is -103
    ma_result result = MA_NO_BACKEND;
                       ^
src/external/miniaudio.h:63497:16: note: Condition 'result!=MA_SUCCESS' is always true
    if (result != MA_SUCCESS) {
               ^
src/external/miniaudio.h:63504:20: style: Condition 'result!=MA_SUCCESS' is always true [knownConditionTrueFalse]
        if (result != MA_SUCCESS) {
                   ^
src/external/miniaudio.h:63457:24: note: Assignment 'result=MA_NO_BACKEND', assigned value is -103
    ma_result result = MA_NO_BACKEND;
                       ^
src/external/miniaudio.h:63504:20: note: Condition 'result!=MA_SUCCESS' is always true
        if (result != MA_SUCCESS) {
                   ^
src/external/miniaudio.h:63957:20: style: Condition 'result!=MA_SUCCESS' is always true [knownConditionTrueFalse]
        if (result != MA_SUCCESS) {
                   ^
src/external/miniaudio.h:63932:14: note: Assignment 'result=MA_NO_BACKEND', assigned value is -103
    result = MA_NO_BACKEND;
             ^
src/external/miniaudio.h:63957:20: note: Condition 'result!=MA_SUCCESS' is always true
        if (result != MA_SUCCESS) {
                   ^
src/external/miniaudio.h:63962:16: style: Condition 'result!=MA_SUCCESS' is always true [knownConditionTrueFalse]
    if (result != MA_SUCCESS) {
               ^
src/external/miniaudio.h:63932:14: note: Assignment 'result=MA_NO_BACKEND', assigned value is -103
    result = MA_NO_BACKEND;
             ^
src/external/miniaudio.h:63962:16: note: Condition 'result!=MA_SUCCESS' is always true
    if (result != MA_SUCCESS) {
               ^
src/external/miniaudio.h:63969:20: style: Condition 'result!=MA_SUCCESS' is always true [knownConditionTrueFalse]
        if (result != MA_SUCCESS) {
                   ^
src/external/miniaudio.h:63932:14: note: Assignment 'result=MA_NO_BACKEND', assigned value is -103
    result = MA_NO_BACKEND;
             ^
src/external/miniaudio.h:63969:20: note: Condition 'result!=MA_SUCCESS' is always true
        if (result != MA_SUCCESS) {
                   ^
src/external/miniaudio.h:64090:20: style: Condition 'result!=MA_SUCCESS' is always true [knownConditionTrueFalse]
        if (result != MA_SUCCESS) {
                   ^
src/external/miniaudio.h:64065:14: note: Assignment 'result=MA_NO_BACKEND', assigned value is -103
    result = MA_NO_BACKEND;
             ^
src/external/miniaudio.h:64090:20: note: Condition 'result!=MA_SUCCESS' is always true
        if (result != MA_SUCCESS) {
                   ^
src/external/miniaudio.h:64095:16: style: Condition 'result!=MA_SUCCESS' is always true [knownConditionTrueFalse]
    if (result != MA_SUCCESS) {
               ^
src/external/miniaudio.h:64065:14: note: Assignment 'result=MA_NO_BACKEND', assigned value is -103
    result = MA_NO_BACKEND;
             ^
src/external/miniaudio.h:64095:16: note: Condition 'result!=MA_SUCCESS' is always true
    if (result != MA_SUCCESS) {
               ^
src/external/miniaudio.h:64102:20: style: Condition 'result!=MA_SUCCESS' is always true [knownConditionTrueFalse]
        if (result != MA_SUCCESS) {
                   ^
src/external/miniaudio.h:64065:14: note: Assignment 'result=MA_NO_BACKEND', assigned value is -103
    result = MA_NO_BACKEND;
             ^
src/external/miniaudio.h:64102:20: note: Condition 'result!=MA_SUCCESS' is always true
        if (result != MA_SUCCESS) {
                   ^
src/external/miniaudio.h:74230:16: style: Condition 'result!=MA_SUCCESS' is always true [knownConditionTrueFalse]
    if (result != MA_SUCCESS) {
               ^
src/external/miniaudio.h:74226:18: note: Assignment 'result=MA_INVALID_OPERATION', assigned value is -3
        result = MA_INVALID_OPERATION;  /* Device IO is disabled, so there's no real notion of "starting" the engine. */
                 ^
src/external/miniaudio.h:74230:16: note: Condition 'result!=MA_SUCCESS' is always true
    if (result != MA_SUCCESS) {
               ^
src/external/miniaudio.h:74259:16: style: Condition 'result!=MA_SUCCESS' is always true [knownConditionTrueFalse]
    if (result != MA_SUCCESS) {
               ^
src/external/miniaudio.h:74255:18: note: Assignment 'result=MA_INVALID_OPERATION', assigned value is -3
        result = MA_INVALID_OPERATION;  /* Device IO is disabled, so there's no real notion of "stopping" the engine. */
                 ^
src/external/miniaudio.h:74259:16: note: Condition 'result!=MA_SUCCESS' is always true
    if (result != MA_SUCCESS) {
               ^
src/external/dr_wav.h:1475:25: style: Condition '(*(char*)&n)==1' is always true [knownConditionTrueFalse]
    return (*(char*)&n) == 1;
                        ^
src/external/dr_wav.h:1474:13: note: Assignment 'n=1', assigned value is 1
    int n = 1;
            ^
src/external/dr_wav.h:1475:25: note: Condition '(*(char*)&n)==1' is always true
    return (*(char*)&n) == 1;
                        ^
src/external/jar_xm.h:1555:39: style: Condition '(s->effect_param>>4)==0' is always false [knownConditionTrueFalse]
            if((s->effect_param >> 4) == 0) {    /* Keep previous x value */
                                      ^
src/external/jar_xm.h:1554:28: note: Assuming that condition 's->effect_param>0' is not redundant
        if(s->effect_param > 0) {
                           ^
src/external/jar_xm.h:1555:39: note: Condition '(s->effect_param>>4)==0' is always false
            if((s->effect_param >> 4) == 0) {    /* Keep previous x value */
                                      ^
src/external/miniaudio.h:49918:34: warning: Either the condition 'pSpatializer==0' is redundant or there is possible null pointer dereference: pSpatializer. [nullPointerRedundantCheck]
    ma_channel* pChannelMapIn  = pSpatializer->pChannelMapIn;
                                 ^
src/external/miniaudio.h:49921:22: note: Assuming that condition 'pSpatializer==0' is not redundant
    if (pSpatializer == NULL) {
                     ^
src/external/miniaudio.h:49918:34: note: Null pointer dereference
    ma_channel* pChannelMapIn  = pSpatializer->pChannelMapIn;
                                 ^
src/external/miniaudio.h:49919:34: warning: Either the condition 'pListener!=0' is redundant or there is possible null pointer dereference: pListener. [nullPointerRedundantCheck]
    ma_channel* pChannelMapOut = pListener->config.pChannelMapOut;
                                 ^
src/external/miniaudio.h:49969:23: note: Assuming that condition 'pListener!=0' is not redundant
        if (pListener != NULL) {
                      ^
src/external/miniaudio.h:49919:34: note: Null pointer dereference
    ma_channel* pChannelMapOut = pListener->config.pChannelMapOut;
                                 ^
src/external/miniaudio.h:68196:5: warning: Either the condition 'pDataBuffer==0' is redundant or there is possible null pointer dereference: pDataBuffer. [nullPointerRedundantCheck]
    MA_ASSERT(ma_resource_manager_data_buffer_node_result(pDataBuffer->pNode) != MA_UNAVAILABLE);
    ^
src/external/miniaudio.h:68198:21: note: Assuming that condition 'pDataBuffer==0' is not redundant
    if (pDataBuffer == NULL || pCursor == NULL) {
                    ^
src/external/miniaudio.h:68196:5: note: Null pointer dereference
    MA_ASSERT(ma_resource_manager_data_buffer_node_result(pDataBuffer->pNode) != MA_UNAVAILABLE);
    ^
src/external/miniaudio.h:68236:5: warning: Either the condition 'pDataBuffer==0' is redundant or there is possible null pointer dereference: pDataBuffer. [nullPointerRedundantCheck]
    MA_ASSERT(ma_resource_manager_data_buffer_node_result(pDataBuffer->pNode) != MA_UNAVAILABLE);
    ^
src/external/miniaudio.h:68238:21: note: Assuming that condition 'pDataBuffer==0' is not redundant
    if (pDataBuffer == NULL || pLength == NULL) {
                    ^
src/external/miniaudio.h:68236:5: note: Null pointer dereference
    MA_ASSERT(ma_resource_manager_data_buffer_node_result(pDataBuffer->pNode) != MA_UNAVAILABLE);
    ^
src/external/jar_xm.h:1595:21: warning: Either the condition 'ch->sample!=0' is redundant or there is possible null pointer dereference: ch->sample. [nullPointerRedundantCheck]
    ch->panning = ch->sample->panning;
                    ^
src/external/jar_xm.h:1613:19: note: Assuming that condition 'ch->sample!=0' is not redundant
    if(ch->sample != NULL) {     ch->sample->latest_trigger = ctx->generated_samples; }
                  ^
src/external/jar_xm.h:1595:21: note: Null pointer dereference
    ch->panning = ch->sample->panning;
                    ^
src/external/jar_mod.h:1125:30: warning: Either the condition 'modmemory' is redundant or there is pointer arithmetic with NULL pointer. [nullPointerArithmeticRedundantCheck]
    endmodmemory = modmemory + mod_data_size;
                             ^
src/external/jar_mod.h:1129:8: note: Assuming that condition 'modmemory' is not redundant
    if(modmemory)
       ^
src/external/jar_mod.h:1125:30: note: Null pointer addition
    endmodmemory = modmemory + mod_data_size;
                             ^
src/external/miniaudio.h:15587:5: portability: Casting from float * to unsigned int * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    c89atomic_store_explicit_32((volatile c89atomic_uint32*)dst, x.i, order);
    ^
src/external/miniaudio.h:15593:5: portability: Casting from double * to unsigned long long * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    c89atomic_store_explicit_64((volatile c89atomic_uint64*)dst, x.i, order);
    ^
src/external/miniaudio.h:15598:38: portability: Casting from const float * to const unsigned int * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    r.i = c89atomic_load_explicit_32((volatile const c89atomic_uint32*)ptr, order);
                                     ^
src/external/miniaudio.h:15604:38: portability: Casting from const double * to const unsigned long long * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    r.i = c89atomic_load_explicit_64((volatile const c89atomic_uint64*)ptr, order);
                                     ^
src/external/miniaudio.h:15612:42: portability: Casting from float * to unsigned int * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    r.i = c89atomic_exchange_explicit_32((volatile c89atomic_uint32*)dst, x.i, order);
                                         ^
src/external/miniaudio.h:15620:42: portability: Casting from double * to unsigned long long * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    r.i = c89atomic_exchange_explicit_64((volatile c89atomic_uint64*)dst, x.i, order);
                                         ^
src/external/miniaudio.h:15627:58: portability: Casting from float * to unsigned int * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    return c89atomic_compare_exchange_strong_explicit_32((volatile c89atomic_uint32*)dst, (c89atomic_uint32*)expected, d.i, successOrder, failureOrder);
                                                         ^
src/external/miniaudio.h:15633:58: portability: Casting from double * to unsigned long long * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    return c89atomic_compare_exchange_strong_explicit_64((volatile c89atomic_uint64*)dst, (c89atomic_uint64*)expected, d.i, successOrder, failureOrder);
                                                         ^
src/external/miniaudio.h:15639:12: portability: Casting from float * to unsigned int * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    return c89atomic_compare_exchange_weak_explicit_32((volatile c89atomic_uint32*)dst, (c89atomic_uint32*)expected, d.i, successOrder, failureOrder);
           ^
src/external/miniaudio.h:15645:12: portability: Casting from double * to unsigned long long * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    return c89atomic_compare_exchange_weak_explicit_64((volatile c89atomic_uint64*)dst, (c89atomic_uint64*)expected, d.i, successOrder, failureOrder);
           ^
src/external/miniaudio.h:15652:43: portability: Casting from float * to unsigned int * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    r.i = c89atomic_fetch_add_explicit_32((volatile c89atomic_uint32*)dst, x.i, order);
                                          ^
src/external/miniaudio.h:15660:43: portability: Casting from double * to unsigned long long * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    r.i = c89atomic_fetch_add_explicit_64((volatile c89atomic_uint64*)dst, x.i, order);
                                          ^
src/external/miniaudio.h:15668:43: portability: Casting from float * to unsigned int * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    r.i = c89atomic_fetch_sub_explicit_32((volatile c89atomic_uint32*)dst, x.i, order);
                                          ^
src/external/miniaudio.h:15676:43: portability: Casting from double * to unsigned long long * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    r.i = c89atomic_fetch_sub_explicit_64((volatile c89atomic_uint64*)dst, x.i, order);
                                          ^
src/external/miniaudio.h:15684:42: portability: Casting from float * to unsigned int * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    r.i = c89atomic_fetch_or_explicit_32((volatile c89atomic_uint32*)dst, x.i, order);
                                         ^
src/external/miniaudio.h:15692:42: portability: Casting from double * to unsigned long long * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    r.i = c89atomic_fetch_or_explicit_64((volatile c89atomic_uint64*)dst, x.i, order);
                                         ^
src/external/miniaudio.h:15700:43: portability: Casting from float * to unsigned int * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    r.i = c89atomic_fetch_xor_explicit_32((volatile c89atomic_uint32*)dst, x.i, order);
                                          ^
src/external/miniaudio.h:15708:43: portability: Casting from double * to unsigned long long * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    r.i = c89atomic_fetch_xor_explicit_64((volatile c89atomic_uint64*)dst, x.i, order);
                                          ^
src/external/miniaudio.h:15716:43: portability: Casting from float * to unsigned int * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    r.i = c89atomic_fetch_and_explicit_32((volatile c89atomic_uint32*)dst, x.i, order);
                                          ^
src/external/miniaudio.h:15724:43: portability: Casting from double * to unsigned long long * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    r.i = c89atomic_fetch_and_explicit_64((volatile c89atomic_uint64*)dst, x.i, order);
                                          ^
src/external/miniaudio.h:15755:11: portability: Casting from float * to unsigned int * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    r.i = c89atomic_compare_and_swap_32((volatile c89atomic_uint32*)dst, e.i, d.i);
          ^
src/external/miniaudio.h:15764:11: portability: Casting from double * to unsigned long long * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    r.i = c89atomic_compare_and_swap_64((volatile c89atomic_uint64*)dst, e.i, d.i);
          ^
src/external/miniaudio.h:73313:36: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                pRunningFramesIn = (float*)temp;
                                   ^
src/external/dr_wav.h:6189:32: portability: Casting between const unsigned char * and const float * which have an incompatible binary data representation. [invalidPointerCast]
        drwav_f32_to_s16(pOut, (const float*)pIn, totalSampleCount);
                               ^
src/external/dr_wav.h:6192:32: portability: Casting between const unsigned char * and const double * which have an incompatible binary data representation. [invalidPointerCast]
        drwav_f64_to_s16(pOut, (const double*)pIn, totalSampleCount);
                               ^
src/external/dr_wav.h:6601:24: portability: Casting between const unsigned char * and const float * which have an incompatible binary data representation. [invalidPointerCast]
            *pOut++ = ((const float*)pIn)[i];
                       ^
src/external/dr_wav.h:6605:32: portability: Casting between const unsigned char * and const double * which have an incompatible binary data representation. [invalidPointerCast]
        drwav_f64_to_f32(pOut, (const double*)pIn, sampleCount);
                               ^
src/external/dr_wav.h:7061:32: portability: Casting between const unsigned char * and const float * which have an incompatible binary data representation. [invalidPointerCast]
        drwav_f32_to_s32(pOut, (const float*)pIn, totalSampleCount);
                               ^
src/external/dr_wav.h:7064:32: portability: Casting between const unsigned char * and const double * which have an incompatible binary data representation. [invalidPointerCast]
        drwav_f64_to_s32(pOut, (const double*)pIn, totalSampleCount);
                               ^
src/external/jar_xm.h:972:28: portability: Casting between signed char * and float * which have an incompatible binary data representation. [invalidPointerCast]
            sample->data = (float*)mempool;
                           ^
src/raudio.c:1813:124: portability: Casting between signed char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                        int frameCountRead = (int)drwav_read_pcm_frames_f32((drwav *)music.ctxData, frameCountStillNeeded, (float *)((char *)AUDIO.System.pcmBuffer + frameCountReadTotal*frameSize));
                                                                                                                           ^
src/raudio.c:1840:120: portability: Casting between signed char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                    int frameCountRead = (int)drmp3_read_pcm_frames_f32((drmp3 *)music.ctxData, frameCountStillNeeded, (float *)((char *)AUDIO.System.pcmBuffer + frameCountReadTotal*frameSize));
                                                                                                                       ^
src/external/miniaudio.h:56812:24: style: Variable 'result' is reassigned a value before the old one has been used. [redundantAssignment]
                result = ma_data_source_seek_to_pcm_frame(pCurrentDataSource, pCurrentDataSource->loopBegInFrames);
                       ^
src/external/miniaudio.h:56795:20: note: result is assigned
            result = MA_SUCCESS;
                   ^
src/external/miniaudio.h:56812:24: note: result is overwritten
                result = ma_data_source_seek_to_pcm_frame(pCurrentDataSource, pCurrentDataSource->loopBegInFrames);
                       ^
src/external/miniaudio.h:64322:28: style: Variable 'result' is reassigned a value before the old one has been used. [redundantAssignment]
                    result = ma_data_converter_process_pcm_frames(&pDecoder->converter, pIntermediaryBuffer, &framesReadThisIterationIn, pRunningFramesOut, &framesReadThisIterationOut);
                           ^
src/external/miniaudio.h:64312:32: note: result is assigned
                        result = ma_data_source_read_pcm_frames(pDecoder->pBackend, pIntermediaryBuffer, framesToReadThisIterationIn, &framesReadThisIterationIn);
                               ^
src/external/miniaudio.h:64322:28: note: result is overwritten
                    result = ma_data_converter_process_pcm_frames(&pDecoder->converter, pIntermediaryBuffer, &framesReadThisIterationIn, pRunningFramesOut, &framesReadThisIterationOut);
                           ^
src/external/miniaudio.h:67275:24: style: Variable 'result' is reassigned a value before the old one has been used. [redundantAssignment]
                result = ma_paged_audio_buffer_data_append_page(&pDataBufferNode->data.backend.decodedPaged.data, pPage);
                       ^
src/external/miniaudio.h:67271:20: note: result is assigned
            result = ma_decoder_read_pcm_frames(pDecoder, pPage->pAudioData, framesToTryReading, &framesRead);
                   ^
src/external/miniaudio.h:67275:24: note: result is overwritten
                result = ma_paged_audio_buffer_data_append_page(&pDataBufferNode->data.backend.decodedPaged.data, pPage);
                       ^
src/external/miniaudio.h:69741:12: style: Variable 'result' is reassigned a value before the old one has been used. [redundantAssignment]
    result = ma_resource_manager_data_buffer_node_result(pDataBuffer->pNode);
           ^
src/external/miniaudio.h:69702:16: note: result is assigned
        result = MA_SUCCESS;    /* <-- Make sure this is reset. */
               ^
src/external/miniaudio.h:69741:12: note: result is overwritten
    result = ma_resource_manager_data_buffer_node_result(pDataBuffer->pNode);
           ^
src/external/jar_xm.h:961:35: style: Variable 'sample->loop_type' is reassigned a value before the old one has been used. 'break;' missing? [redundantAssignInSwitch]
                sample->loop_type = jar_xm_FORWARD_LOOP;
                                  ^
src/external/jar_xm.h:959:35: note: $symbol is assigned
                sample->loop_type = jar_xm_PING_PONG_LOOP;
                                  ^
src/external/jar_xm.h:961:35: note: $symbol is overwritten
                sample->loop_type = jar_xm_FORWARD_LOOP;
                                  ^
src/raudio.c:1582:25: style: Variable 'musicLoaded' is reassigned a value before the old one has been used. [redundantAssignment]
            musicLoaded = true;
                        ^
src/raudio.c:1579:25: note: musicLoaded is assigned
            musicLoaded = true;
                        ^
src/raudio.c:1582:25: note: musicLoaded is overwritten
            musicLoaded = true;
                        ^
src/external/miniaudio.h:48850:9: style:inconclusive: Found duplicate branches for 'if' and 'else'. [duplicateBranch]
        if (pPanner->channels == 1) {
        ^
src/external/miniaudio.h:48853:11: note: Found duplicate branches for 'if' and 'else'.
        } else {
          ^
src/external/miniaudio.h:48850:9: note: Found duplicate branches for 'if' and 'else'.
        if (pPanner->channels == 1) {
        ^
src/external/miniaudio.h:16154:23: style: The comparison 'scheduler != -1' is always false. [knownConditionTrueFalse]
        if (scheduler != -1) {
                      ^
src/external/miniaudio.h:16127:26: note: 'scheduler' is assigned value '-1' here.
        int scheduler = -1;
                         ^
src/external/miniaudio.h:16154:23: note: The comparison 'scheduler != -1' is always false.
        if (scheduler != -1) {
                      ^
src/external/miniaudio.h:13477:15: style: The scope of the variable 'pFormattedMessageHeap' can be reduced. [variableScope]
        char* pFormattedMessageHeap = NULL;
              ^
src/external/miniaudio.h:45921:15: style: The scope of the variable 'ilpf1' can be reduced. [variableScope]
    ma_uint32 ilpf1;
              ^
src/external/miniaudio.h:45922:15: style: The scope of the variable 'ilpf2' can be reduced. [variableScope]
    ma_uint32 ilpf2;
              ^
src/external/miniaudio.h:48970:23: style: The scope of the variable 'iFrame' can be reduced. [variableScope]
            ma_uint64 iFrame;
                      ^
src/external/miniaudio.h:48971:23: style: The scope of the variable 'iChannel' can be reduced. [variableScope]
            ma_uint32 iChannel;
                      ^
src/external/miniaudio.h:52293:15: style: The scope of the variable 'iFrame' can be reduced. [variableScope]
    ma_uint64 iFrame;
              ^
src/external/miniaudio.h:56662:19: style: The scope of the variable 'absoluteCursor' can be reduced. [variableScope]
        ma_uint64 absoluteCursor;
                  ^
src/external/miniaudio.h:67239:19: style: The scope of the variable 'pDst' can be reduced. [variableScope]
            void* pDst;
                  ^
src/external/miniaudio.h:71624:23: style: The scope of the variable 'consumeNullInput' can be reduced. [variableScope]
            ma_bool32 consumeNullInput = MA_FALSE;
                      ^
src/external/miniaudio.h:73234:14: style: The scope of the variable 'temp' can be reduced. [variableScope]
    ma_uint8 temp[MA_DATA_CONVERTER_STACK_BUFFER_SIZE];
             ^
src/external/miniaudio.h:73235:15: style: The scope of the variable 'tempCapInFrames' can be reduced. [variableScope]
    ma_uint32 tempCapInFrames;
              ^
src/external/miniaudio.h:74467:19: style: The scope of the variable 'soundFlags' can be reduced. [variableScope]
        ma_uint32 soundFlags = 0;
                  ^
src/external/dr_wav.h:2196:22: style: The scope of the variable 'iSampleLoop' can be reduced. [variableScope]
        drwav_uint32 iSampleLoop;
                     ^
src/external/dr_wav.h:2506:16: style: The scope of the variable 'extraBytes' can be reduced. [variableScope]
        size_t extraBytes;
               ^
src/external/dr_wav.h:6207:18: style: The scope of the variable 'samplesRead' can be reduced. [variableScope]
    drwav_uint64 samplesRead;
                 ^
src/external/dr_wav.h:6258:18: style: The scope of the variable 'samplesRead' can be reduced. [variableScope]
    drwav_uint64 samplesRead;
                 ^
src/external/dr_wav.h:6308:18: style: The scope of the variable 'samplesRead' can be reduced. [variableScope]
    drwav_uint64 samplesRead;
                 ^
src/external/dr_wav.h:6358:18: style: The scope of the variable 'samplesRead' can be reduced. [variableScope]
    drwav_uint64 samplesRead;
                 ^
src/external/dr_wav.h:6467:9: style: The scope of the variable 'r' can be reduced. [variableScope]
    int r;
        ^
src/external/dr_wav.h:6479:9: style: The scope of the variable 'r' can be reduced. [variableScope]
    int r;
        ^
src/external/dr_wav.h:6490:9: style: The scope of the variable 'r' can be reduced. [variableScope]
    int r;
        ^
src/external/dr_wav.h:6501:9: style: The scope of the variable 'r' can be reduced. [variableScope]
    int r;
        ^
src/external/dr_wav.h:6516:9: style: The scope of the variable 'r' can be reduced. [variableScope]
    int r;
        ^
src/external/dr_wav.h:6621:18: style: The scope of the variable 'samplesRead' can be reduced. [variableScope]
    drwav_uint64 samplesRead;
                 ^
src/external/dr_wav.h:6697:18: style: The scope of the variable 'samplesRead' can be reduced. [variableScope]
    drwav_uint64 samplesRead;
                 ^
src/external/dr_wav.h:6748:18: style: The scope of the variable 'samplesRead' can be reduced. [variableScope]
    drwav_uint64 samplesRead;
                 ^
src/external/dr_wav.h:6794:18: style: The scope of the variable 'samplesRead' can be reduced. [variableScope]
    drwav_uint64 samplesRead;
                 ^
src/external/dr_wav.h:7080:18: style: The scope of the variable 'samplesRead' can be reduced. [variableScope]
    drwav_uint64 samplesRead;
                 ^
src/external/dr_wav.h:7159:18: style: The scope of the variable 'samplesRead' can be reduced. [variableScope]
    drwav_uint64 samplesRead;
                 ^
src/external/dr_wav.h:7205:18: style: The scope of the variable 'samplesRead' can be reduced. [variableScope]
    drwav_uint64 samplesRead;
                 ^
src/external/dr_wav.h:7251:18: style: The scope of the variable 'samplesRead' can be reduced. [variableScope]
    drwav_uint64 samplesRead;
                 ^
src/external/jar_mod.h:422:11: style: The scope of the variable 'curnote' can be reduced. [variableScope]
    muint curnote, arpnote;
          ^
src/external/jar_mod.h:422:20: style: The scope of the variable 'arpnote' can be reduced. [variableScope]
    muint curnote, arpnote;
                   ^
src/external/jar_mod.h:1059:11: style: The scope of the variable 'i' can be reduced. [variableScope]
    muint i,j;
          ^
src/external/jar_mod.h:1059:13: style: The scope of the variable 'j' can be reduced. [variableScope]
    muint i,j;
            ^
src/external/jar_mod.h:1119:11: style: The scope of the variable 'i' can be reduced. [variableScope]
    muint i, max;
          ^
src/external/jar_mod.h:1119:14: style: The scope of the variable 'max' can be reduced. [variableScope]
    muint i, max;
             ^
src/external/jar_mod.h:1120:20: style: The scope of the variable 't' can be reduced. [variableScope]
    unsigned short t;
                   ^
src/external/jar_mod.h:1237:19: style: The scope of the variable 'i' can be reduced. [variableScope]
    unsigned long i, j;
                  ^
src/external/jar_mod.h:1237:22: style: The scope of the variable 'j' can be reduced. [variableScope]
    unsigned long i, j;
                     ^
src/external/jar_mod.h:1238:19: style: The scope of the variable 'k' can be reduced. [variableScope]
    unsigned long k;
                  ^
src/external/jar_mod.h:1239:19: style: The scope of the variable 'c' can be reduced. [variableScope]
    unsigned char c;
                  ^
src/external/jar_mod.h:1240:18: style: The scope of the variable 'state_remaining_steps' can be reduced. [variableScope]
    unsigned int state_remaining_steps;
                 ^
src/external/jar_mod.h:1241:9: style: The scope of the variable 'l' can be reduced. [variableScope]
    int l,r;
        ^
src/external/jar_mod.h:1241:11: style: The scope of the variable 'r' can be reduced. [variableScope]
    int l,r;
          ^
src/external/jar_mod.h:1242:9: style: The scope of the variable 'll' can be reduced. [variableScope]
    int ll,lr;
        ^
src/external/jar_mod.h:1242:12: style: The scope of the variable 'lr' can be reduced. [variableScope]
    int ll,lr;
           ^
src/external/jar_mod.h:1243:9: style: The scope of the variable 'tl' can be reduced. [variableScope]
    int tl,tr;
        ^
src/external/jar_mod.h:1243:12: style: The scope of the variable 'tr' can be reduced. [variableScope]
    int tl,tr;
           ^
src/external/jar_mod.h:1244:11: style: The scope of the variable 'finalperiod' can be reduced. [variableScope]
    short finalperiod;
          ^
src/external/dr_mp3.h:1338:68: portability: Shifting a negative value is technically undefined behaviour [shiftNegativeLHS]
                        leaf = codebook[DRMP3_PEEK_BITS(w) - (leaf >> 3)];
                                                                   ^
src/external/dr_mp3.h:1375:68: portability: Shifting a negative value is technically undefined behaviour [shiftNegativeLHS]
                        leaf = codebook[DRMP3_PEEK_BITS(w) - (leaf >> 3)];
                                                                   ^
src/external/miniaudio.h:42510:53: style:inconclusive: Function 'ma_apply_volume_factor_pcm_frames' argument 1 names different: declaration 'pFrames' definition 'pFramesOut'. [funcArgNamesDifferent]
MA_API void ma_apply_volume_factor_pcm_frames(void* pFramesOut, ma_uint64 frameCount, ma_format format, ma_uint32 channels, float factor)
                                                    ^
src/external/miniaudio.h:9472:53: note: Function 'ma_apply_volume_factor_pcm_frames' argument 1 names different: declaration 'pFrames' definition 'pFramesOut'.
MA_API void ma_apply_volume_factor_pcm_frames(void* pFrames, ma_uint64 frameCount, ma_format format, ma_uint32 channels, float factor);
                                                    ^
src/external/miniaudio.h:42510:53: note: Function 'ma_apply_volume_factor_pcm_frames' argument 1 names different: declaration 'pFrames' definition 'pFramesOut'.
MA_API void ma_apply_volume_factor_pcm_frames(void* pFramesOut, ma_uint64 frameCount, ma_format format, ma_uint32 channels, float factor)
                                                    ^
src/external/miniaudio.h:42778:36: style:inconclusive: Function 'ma_pcm_u8_to_s16' argument 1 names different: declaration 'pOut' definition 'dst'. [funcArgNamesDifferent]
MA_API void ma_pcm_u8_to_s16(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                   ^
src/external/miniaudio.h:5529:36: note: Function 'ma_pcm_u8_to_s16' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_u8_to_s16(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                   ^
src/external/miniaudio.h:42778:36: note: Function 'ma_pcm_u8_to_s16' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_u8_to_s16(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                   ^
src/external/miniaudio.h:42778:53: style:inconclusive: Function 'ma_pcm_u8_to_s16' argument 2 names different: declaration 'pIn' definition 'src'. [funcArgNamesDifferent]
MA_API void ma_pcm_u8_to_s16(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                    ^
src/external/miniaudio.h:5529:54: note: Function 'ma_pcm_u8_to_s16' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_u8_to_s16(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                                     ^
src/external/miniaudio.h:42778:53: note: Function 'ma_pcm_u8_to_s16' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_u8_to_s16(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                    ^
src/external/miniaudio.h:42835:36: style:inconclusive: Function 'ma_pcm_u8_to_s24' argument 1 names different: declaration 'pOut' definition 'dst'. [funcArgNamesDifferent]
MA_API void ma_pcm_u8_to_s24(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                   ^
src/external/miniaudio.h:5530:36: note: Function 'ma_pcm_u8_to_s24' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_u8_to_s24(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                   ^
src/external/miniaudio.h:42835:36: note: Function 'ma_pcm_u8_to_s24' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_u8_to_s24(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                   ^
src/external/miniaudio.h:42835:53: style:inconclusive: Function 'ma_pcm_u8_to_s24' argument 2 names different: declaration 'pIn' definition 'src'. [funcArgNamesDifferent]
MA_API void ma_pcm_u8_to_s24(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                    ^
src/external/miniaudio.h:5530:54: note: Function 'ma_pcm_u8_to_s24' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_u8_to_s24(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                                     ^
src/external/miniaudio.h:42835:53: note: Function 'ma_pcm_u8_to_s24' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_u8_to_s24(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                    ^
src/external/miniaudio.h:42890:36: style:inconclusive: Function 'ma_pcm_u8_to_s32' argument 1 names different: declaration 'pOut' definition 'dst'. [funcArgNamesDifferent]
MA_API void ma_pcm_u8_to_s32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                   ^
src/external/miniaudio.h:5531:36: note: Function 'ma_pcm_u8_to_s32' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_u8_to_s32(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                   ^
src/external/miniaudio.h:42890:36: note: Function 'ma_pcm_u8_to_s32' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_u8_to_s32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                   ^
src/external/miniaudio.h:42890:53: style:inconclusive: Function 'ma_pcm_u8_to_s32' argument 2 names different: declaration 'pIn' definition 'src'. [funcArgNamesDifferent]
MA_API void ma_pcm_u8_to_s32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                    ^
src/external/miniaudio.h:5531:54: note: Function 'ma_pcm_u8_to_s32' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_u8_to_s32(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                                     ^
src/external/miniaudio.h:42890:53: note: Function 'ma_pcm_u8_to_s32' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_u8_to_s32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                    ^
src/external/miniaudio.h:42946:36: style:inconclusive: Function 'ma_pcm_u8_to_f32' argument 1 names different: declaration 'pOut' definition 'dst'. [funcArgNamesDifferent]
MA_API void ma_pcm_u8_to_f32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                   ^
src/external/miniaudio.h:5532:36: note: Function 'ma_pcm_u8_to_f32' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_u8_to_f32(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                   ^
src/external/miniaudio.h:42946:36: note: Function 'ma_pcm_u8_to_f32' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_u8_to_f32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                   ^
src/external/miniaudio.h:42946:53: style:inconclusive: Function 'ma_pcm_u8_to_f32' argument 2 names different: declaration 'pIn' definition 'src'. [funcArgNamesDifferent]
MA_API void ma_pcm_u8_to_f32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                    ^
src/external/miniaudio.h:5532:54: note: Function 'ma_pcm_u8_to_f32' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_u8_to_f32(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                                     ^
src/external/miniaudio.h:42946:53: note: Function 'ma_pcm_u8_to_f32' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_u8_to_f32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                    ^
src/external/miniaudio.h:43098:36: style:inconclusive: Function 'ma_pcm_s16_to_u8' argument 1 names different: declaration 'pOut' definition 'dst'. [funcArgNamesDifferent]
MA_API void ma_pcm_s16_to_u8(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                   ^
src/external/miniaudio.h:5533:36: note: Function 'ma_pcm_s16_to_u8' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_s16_to_u8(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                   ^
src/external/miniaudio.h:43098:36: note: Function 'ma_pcm_s16_to_u8' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_s16_to_u8(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                   ^
src/external/miniaudio.h:43098:53: style:inconclusive: Function 'ma_pcm_s16_to_u8' argument 2 names different: declaration 'pIn' definition 'src'. [funcArgNamesDifferent]
MA_API void ma_pcm_s16_to_u8(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                    ^
src/external/miniaudio.h:5533:54: note: Function 'ma_pcm_s16_to_u8' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_s16_to_u8(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                                     ^
src/external/miniaudio.h:43098:53: note: Function 'ma_pcm_s16_to_u8' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_s16_to_u8(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                    ^
src/external/miniaudio.h:43159:37: style:inconclusive: Function 'ma_pcm_s16_to_s24' argument 1 names different: declaration 'pOut' definition 'dst'. [funcArgNamesDifferent]
MA_API void ma_pcm_s16_to_s24(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                    ^
src/external/miniaudio.h:5534:37: note: Function 'ma_pcm_s16_to_s24' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_s16_to_s24(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                    ^
src/external/miniaudio.h:43159:37: note: Function 'ma_pcm_s16_to_s24' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_s16_to_s24(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                    ^
src/external/miniaudio.h:43159:54: style:inconclusive: Function 'ma_pcm_s16_to_s24' argument 2 names different: declaration 'pIn' definition 'src'. [funcArgNamesDifferent]
MA_API void ma_pcm_s16_to_s24(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                     ^
src/external/miniaudio.h:5534:55: note: Function 'ma_pcm_s16_to_s24' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_s16_to_s24(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                                      ^
src/external/miniaudio.h:43159:54: note: Function 'ma_pcm_s16_to_s24' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_s16_to_s24(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                     ^
src/external/miniaudio.h:43211:37: style:inconclusive: Function 'ma_pcm_s16_to_s32' argument 1 names different: declaration 'pOut' definition 'dst'. [funcArgNamesDifferent]
MA_API void ma_pcm_s16_to_s32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                    ^
src/external/miniaudio.h:5535:37: note: Function 'ma_pcm_s16_to_s32' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_s16_to_s32(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                    ^
src/external/miniaudio.h:43211:37: note: Function 'ma_pcm_s16_to_s32' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_s16_to_s32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                    ^
src/external/miniaudio.h:43211:54: style:inconclusive: Function 'ma_pcm_s16_to_s32' argument 2 names different: declaration 'pIn' definition 'src'. [funcArgNamesDifferent]
MA_API void ma_pcm_s16_to_s32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                     ^
src/external/miniaudio.h:5535:55: note: Function 'ma_pcm_s16_to_s32' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_s16_to_s32(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                                      ^
src/external/miniaudio.h:43211:54: note: Function 'ma_pcm_s16_to_s32' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_s16_to_s32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                     ^
src/external/miniaudio.h:43275:37: style:inconclusive: Function 'ma_pcm_s16_to_f32' argument 1 names different: declaration 'pOut' definition 'dst'. [funcArgNamesDifferent]
MA_API void ma_pcm_s16_to_f32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                    ^
src/external/miniaudio.h:5536:37: note: Function 'ma_pcm_s16_to_f32' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_s16_to_f32(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                    ^
src/external/miniaudio.h:43275:37: note: Function 'ma_pcm_s16_to_f32' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_s16_to_f32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                    ^
src/external/miniaudio.h:43275:54: style:inconclusive: Function 'ma_pcm_s16_to_f32' argument 2 names different: declaration 'pIn' definition 'src'. [funcArgNamesDifferent]
MA_API void ma_pcm_s16_to_f32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                     ^
src/external/miniaudio.h:5536:55: note: Function 'ma_pcm_s16_to_f32' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_s16_to_f32(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                                      ^
src/external/miniaudio.h:43275:54: note: Function 'ma_pcm_s16_to_f32' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_s16_to_f32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                     ^
src/external/miniaudio.h:43403:36: style:inconclusive: Function 'ma_pcm_s24_to_u8' argument 1 names different: declaration 'pOut' definition 'dst'. [funcArgNamesDifferent]
MA_API void ma_pcm_s24_to_u8(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                   ^
src/external/miniaudio.h:5537:36: note: Function 'ma_pcm_s24_to_u8' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_s24_to_u8(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                   ^
src/external/miniaudio.h:43403:36: note: Function 'ma_pcm_s24_to_u8' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_s24_to_u8(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                   ^
src/external/miniaudio.h:43403:53: style:inconclusive: Function 'ma_pcm_s24_to_u8' argument 2 names different: declaration 'pIn' definition 'src'. [funcArgNamesDifferent]
MA_API void ma_pcm_s24_to_u8(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                    ^
src/external/miniaudio.h:5537:54: note: Function 'ma_pcm_s24_to_u8' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_s24_to_u8(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                                     ^
src/external/miniaudio.h:43403:53: note: Function 'ma_pcm_s24_to_u8' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_s24_to_u8(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                    ^
src/external/miniaudio.h:43473:37: style:inconclusive: Function 'ma_pcm_s24_to_s16' argument 1 names different: declaration 'pOut' definition 'dst'. [funcArgNamesDifferent]
MA_API void ma_pcm_s24_to_s16(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                    ^
src/external/miniaudio.h:5538:37: note: Function 'ma_pcm_s24_to_s16' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_s24_to_s16(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                    ^
src/external/miniaudio.h:43473:37: note: Function 'ma_pcm_s24_to_s16' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_s24_to_s16(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                    ^
src/external/miniaudio.h:43473:54: style:inconclusive: Function 'ma_pcm_s24_to_s16' argument 2 names different: declaration 'pIn' definition 'src'. [funcArgNamesDifferent]
MA_API void ma_pcm_s24_to_s16(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                     ^
src/external/miniaudio.h:5538:55: note: Function 'ma_pcm_s24_to_s16' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_s24_to_s16(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                                      ^
src/external/miniaudio.h:43473:54: note: Function 'ma_pcm_s24_to_s16' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_s24_to_s16(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                     ^
src/external/miniaudio.h:43533:37: style:inconclusive: Function 'ma_pcm_s24_to_s32' argument 1 names different: declaration 'pOut' definition 'dst'. [funcArgNamesDifferent]
MA_API void ma_pcm_s24_to_s32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                    ^
src/external/miniaudio.h:5539:37: note: Function 'ma_pcm_s24_to_s32' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_s24_to_s32(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                    ^
src/external/miniaudio.h:43533:37: note: Function 'ma_pcm_s24_to_s32' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_s24_to_s32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                    ^
src/external/miniaudio.h:43533:54: style:inconclusive: Function 'ma_pcm_s24_to_s32' argument 2 names different: declaration 'pIn' definition 'src'. [funcArgNamesDifferent]
MA_API void ma_pcm_s24_to_s32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                     ^
src/external/miniaudio.h:5539:55: note: Function 'ma_pcm_s24_to_s32' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_s24_to_s32(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                                      ^
src/external/miniaudio.h:43533:54: note: Function 'ma_pcm_s24_to_s32' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_s24_to_s32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                     ^
src/external/miniaudio.h:43597:37: style:inconclusive: Function 'ma_pcm_s24_to_f32' argument 1 names different: declaration 'pOut' definition 'dst'. [funcArgNamesDifferent]
MA_API void ma_pcm_s24_to_f32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                    ^
src/external/miniaudio.h:5540:37: note: Function 'ma_pcm_s24_to_f32' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_s24_to_f32(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                    ^
src/external/miniaudio.h:43597:37: note: Function 'ma_pcm_s24_to_f32' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_s24_to_f32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                    ^
src/external/miniaudio.h:43597:54: style:inconclusive: Function 'ma_pcm_s24_to_f32' argument 2 names different: declaration 'pIn' definition 'src'. [funcArgNamesDifferent]
MA_API void ma_pcm_s24_to_f32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                     ^
src/external/miniaudio.h:5540:55: note: Function 'ma_pcm_s24_to_f32' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_s24_to_f32(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                                      ^
src/external/miniaudio.h:43597:54: note: Function 'ma_pcm_s24_to_f32' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_s24_to_f32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                     ^
src/external/miniaudio.h:43733:36: style:inconclusive: Function 'ma_pcm_s32_to_u8' argument 1 names different: declaration 'pOut' definition 'dst'. [funcArgNamesDifferent]
MA_API void ma_pcm_s32_to_u8(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                   ^
src/external/miniaudio.h:5541:36: note: Function 'ma_pcm_s32_to_u8' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_s32_to_u8(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                   ^
src/external/miniaudio.h:43733:36: note: Function 'ma_pcm_s32_to_u8' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_s32_to_u8(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                   ^
src/external/miniaudio.h:43733:53: style:inconclusive: Function 'ma_pcm_s32_to_u8' argument 2 names different: declaration 'pIn' definition 'src'. [funcArgNamesDifferent]
MA_API void ma_pcm_s32_to_u8(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                    ^
src/external/miniaudio.h:5541:54: note: Function 'ma_pcm_s32_to_u8' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_s32_to_u8(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                                     ^
src/external/miniaudio.h:43733:53: note: Function 'ma_pcm_s32_to_u8' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_s32_to_u8(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                    ^
src/external/miniaudio.h:43803:37: style:inconclusive: Function 'ma_pcm_s32_to_s16' argument 1 names different: declaration 'pOut' definition 'dst'. [funcArgNamesDifferent]
MA_API void ma_pcm_s32_to_s16(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                    ^
src/external/miniaudio.h:5542:37: note: Function 'ma_pcm_s32_to_s16' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_s32_to_s16(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                    ^
src/external/miniaudio.h:43803:37: note: Function 'ma_pcm_s32_to_s16' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_s32_to_s16(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                    ^
src/external/miniaudio.h:43803:54: style:inconclusive: Function 'ma_pcm_s32_to_s16' argument 2 names different: declaration 'pIn' definition 'src'. [funcArgNamesDifferent]
MA_API void ma_pcm_s32_to_s16(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                     ^
src/external/miniaudio.h:5542:55: note: Function 'ma_pcm_s32_to_s16' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_s32_to_s16(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                                      ^
src/external/miniaudio.h:43803:54: note: Function 'ma_pcm_s32_to_s16' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_s32_to_s16(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                     ^
src/external/miniaudio.h:43858:37: style:inconclusive: Function 'ma_pcm_s32_to_s24' argument 1 names different: declaration 'pOut' definition 'dst'. [funcArgNamesDifferent]
MA_API void ma_pcm_s32_to_s24(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                    ^
src/external/miniaudio.h:5543:37: note: Function 'ma_pcm_s32_to_s24' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_s32_to_s24(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                    ^
src/external/miniaudio.h:43858:37: note: Function 'ma_pcm_s32_to_s24' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_s32_to_s24(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                    ^
src/external/miniaudio.h:43858:54: style:inconclusive: Function 'ma_pcm_s32_to_s24' argument 2 names different: declaration 'pIn' definition 'src'. [funcArgNamesDifferent]
MA_API void ma_pcm_s32_to_s24(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                     ^
src/external/miniaudio.h:5543:55: note: Function 'ma_pcm_s32_to_s24' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_s32_to_s24(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                                      ^
src/external/miniaudio.h:43858:54: note: Function 'ma_pcm_s32_to_s24' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_s32_to_s24(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                     ^
src/external/miniaudio.h:43928:37: style:inconclusive: Function 'ma_pcm_s32_to_f32' argument 1 names different: declaration 'pOut' definition 'dst'. [funcArgNamesDifferent]
MA_API void ma_pcm_s32_to_f32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                    ^
src/external/miniaudio.h:5544:37: note: Function 'ma_pcm_s32_to_f32' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_s32_to_f32(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                    ^
src/external/miniaudio.h:43928:37: note: Function 'ma_pcm_s32_to_f32' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_s32_to_f32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                    ^
src/external/miniaudio.h:43928:54: style:inconclusive: Function 'ma_pcm_s32_to_f32' argument 2 names different: declaration 'pIn' definition 'src'. [funcArgNamesDifferent]
MA_API void ma_pcm_s32_to_f32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                     ^
src/external/miniaudio.h:5544:55: note: Function 'ma_pcm_s32_to_f32' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_s32_to_f32(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                                      ^
src/external/miniaudio.h:43928:54: note: Function 'ma_pcm_s32_to_f32' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_s32_to_f32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                     ^
src/external/miniaudio.h:44051:36: style:inconclusive: Function 'ma_pcm_f32_to_u8' argument 1 names different: declaration 'pOut' definition 'dst'. [funcArgNamesDifferent]
MA_API void ma_pcm_f32_to_u8(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                   ^
src/external/miniaudio.h:5545:36: note: Function 'ma_pcm_f32_to_u8' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_f32_to_u8(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                   ^
src/external/miniaudio.h:44051:36: note: Function 'ma_pcm_f32_to_u8' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_f32_to_u8(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                   ^
src/external/miniaudio.h:44051:53: style:inconclusive: Function 'ma_pcm_f32_to_u8' argument 2 names different: declaration 'pIn' definition 'src'. [funcArgNamesDifferent]
MA_API void ma_pcm_f32_to_u8(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                    ^
src/external/miniaudio.h:5545:54: note: Function 'ma_pcm_f32_to_u8' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_f32_to_u8(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                                     ^
src/external/miniaudio.h:44051:53: note: Function 'ma_pcm_f32_to_u8' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_f32_to_u8(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                    ^
src/external/miniaudio.h:44371:37: style:inconclusive: Function 'ma_pcm_f32_to_s16' argument 1 names different: declaration 'pOut' definition 'dst'. [funcArgNamesDifferent]
MA_API void ma_pcm_f32_to_s16(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                    ^
src/external/miniaudio.h:5546:37: note: Function 'ma_pcm_f32_to_s16' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_f32_to_s16(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                    ^
src/external/miniaudio.h:44371:37: note: Function 'ma_pcm_f32_to_s16' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_f32_to_s16(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                    ^
src/external/miniaudio.h:44371:54: style:inconclusive: Function 'ma_pcm_f32_to_s16' argument 2 names different: declaration 'pIn' definition 'src'. [funcArgNamesDifferent]
MA_API void ma_pcm_f32_to_s16(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                     ^
src/external/miniaudio.h:5546:55: note: Function 'ma_pcm_f32_to_s16' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_f32_to_s16(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                                      ^
src/external/miniaudio.h:44371:54: note: Function 'ma_pcm_f32_to_s16' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_f32_to_s16(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                     ^
src/external/miniaudio.h:44440:37: style:inconclusive: Function 'ma_pcm_f32_to_s24' argument 1 names different: declaration 'pOut' definition 'dst'. [funcArgNamesDifferent]
MA_API void ma_pcm_f32_to_s24(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                    ^
src/external/miniaudio.h:5547:37: note: Function 'ma_pcm_f32_to_s24' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_f32_to_s24(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                    ^
src/external/miniaudio.h:44440:37: note: Function 'ma_pcm_f32_to_s24' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_f32_to_s24(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                    ^
src/external/miniaudio.h:44440:54: style:inconclusive: Function 'ma_pcm_f32_to_s24' argument 2 names different: declaration 'pIn' definition 'src'. [funcArgNamesDifferent]
MA_API void ma_pcm_f32_to_s24(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                     ^
src/external/miniaudio.h:5547:55: note: Function 'ma_pcm_f32_to_s24' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_f32_to_s24(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                                      ^
src/external/miniaudio.h:44440:54: note: Function 'ma_pcm_f32_to_s24' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_f32_to_s24(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                     ^
src/external/miniaudio.h:44505:37: style:inconclusive: Function 'ma_pcm_f32_to_s32' argument 1 names different: declaration 'pOut' definition 'dst'. [funcArgNamesDifferent]
MA_API void ma_pcm_f32_to_s32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                    ^
src/external/miniaudio.h:5548:37: note: Function 'ma_pcm_f32_to_s32' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_f32_to_s32(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                    ^
src/external/miniaudio.h:44505:37: note: Function 'ma_pcm_f32_to_s32' argument 1 names different: declaration 'pOut' definition 'dst'.
MA_API void ma_pcm_f32_to_s32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                    ^
src/external/miniaudio.h:44505:54: style:inconclusive: Function 'ma_pcm_f32_to_s32' argument 2 names different: declaration 'pIn' definition 'src'. [funcArgNamesDifferent]
MA_API void ma_pcm_f32_to_s32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                     ^
src/external/miniaudio.h:5548:55: note: Function 'ma_pcm_f32_to_s32' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_f32_to_s32(void* pOut, const void* pIn, ma_uint64 count, ma_dither_mode ditherMode);
                                                      ^
src/external/miniaudio.h:44505:54: note: Function 'ma_pcm_f32_to_s32' argument 2 names different: declaration 'pIn' definition 'src'.
MA_API void ma_pcm_f32_to_s32(void* dst, const void* src, ma_uint64 count, ma_dither_mode ditherMode)
                                                     ^
src/external/miniaudio.h:45427:97: style:inconclusive: Function 'ma_lpf2_init_preallocated' argument 3 names different: declaration 'pHPF' definition 'pLPF'. [funcArgNamesDifferent]
MA_API ma_result ma_lpf2_init_preallocated(const ma_lpf2_config* pConfig, void* pHeap, ma_lpf2* pLPF)
                                                                                                ^
src/external/miniaudio.h:4547:97: note: Function 'ma_lpf2_init_preallocated' argument 3 names different: declaration 'pHPF' definition 'pLPF'.
MA_API ma_result ma_lpf2_init_preallocated(const ma_lpf2_config* pConfig, void* pHeap, ma_lpf2* pHPF);
                                                                                                ^
src/external/miniaudio.h:45427:97: note: Function 'ma_lpf2_init_preallocated' argument 3 names different: declaration 'pHPF' definition 'pLPF'.
MA_API ma_result ma_lpf2_init_preallocated(const ma_lpf2_config* pConfig, void* pHeap, ma_lpf2* pLPF)
                                                                                                ^
src/external/miniaudio.h:46099:124: style:inconclusive: Function 'ma_hpf1_init' argument 3 names different: declaration 'pHPF' definition 'pLPF'. [funcArgNamesDifferent]
MA_API ma_result ma_hpf1_init(const ma_hpf1_config* pConfig, const ma_allocation_callbacks* pAllocationCallbacks, ma_hpf1* pLPF)
                                                                                                                           ^
src/external/miniaudio.h:4623:124: note: Function 'ma_hpf1_init' argument 3 names different: declaration 'pHPF' definition 'pLPF'.
MA_API ma_result ma_hpf1_init(const ma_hpf1_config* pConfig, const ma_allocation_callbacks* pAllocationCallbacks, ma_hpf1* pHPF);
                                                                                                                           ^
src/external/miniaudio.h:46099:124: note: Function 'ma_hpf1_init' argument 3 names different: declaration 'pHPF' definition 'pLPF'.
MA_API ma_result ma_hpf1_init(const ma_hpf1_config* pConfig, const ma_allocation_callbacks* pAllocationCallbacks, ma_hpf1* pLPF)
                                                                                                                           ^
src/external/dr_wav.h:5742:89: style:inconclusive: Function 'drwav_read_pcm_frames_s16__msadpcm' argument 2 names different: declaration 'samplesToRead' definition 'framesToRead'. [funcArgNamesDifferent]
DRWAV_PRIVATE drwav_uint64 drwav_read_pcm_frames_s16__msadpcm(drwav* pWav, drwav_uint64 framesToRead, drwav_int16* pBufferOut)
                                                                                        ^
src/external/dr_wav.h:1847:89: note: Function 'drwav_read_pcm_frames_s16__msadpcm' argument 2 names different: declaration 'samplesToRead' definition 'framesToRead'.
DRWAV_PRIVATE drwav_uint64 drwav_read_pcm_frames_s16__msadpcm(drwav* pWav, drwav_uint64 samplesToRead, drwav_int16* pBufferOut);
                                                                                        ^
src/external/dr_wav.h:5742:89: note: Function 'drwav_read_pcm_frames_s16__msadpcm' argument 2 names different: declaration 'samplesToRead' definition 'framesToRead'.
DRWAV_PRIVATE drwav_uint64 drwav_read_pcm_frames_s16__msadpcm(drwav* pWav, drwav_uint64 framesToRead, drwav_int16* pBufferOut)
                                                                                        ^
src/external/dr_wav.h:5924:85: style:inconclusive: Function 'drwav_read_pcm_frames_s16__ima' argument 2 names different: declaration 'samplesToRead' definition 'framesToRead'. [funcArgNamesDifferent]
DRWAV_PRIVATE drwav_uint64 drwav_read_pcm_frames_s16__ima(drwav* pWav, drwav_uint64 framesToRead, drwav_int16* pBufferOut)
                                                                                    ^
src/external/dr_wav.h:1848:85: note: Function 'drwav_read_pcm_frames_s16__ima' argument 2 names different: declaration 'samplesToRead' definition 'framesToRead'.
DRWAV_PRIVATE drwav_uint64 drwav_read_pcm_frames_s16__ima(drwav* pWav, drwav_uint64 samplesToRead, drwav_int16* pBufferOut);
                                                                                    ^
src/external/dr_wav.h:5924:85: note: Function 'drwav_read_pcm_frames_s16__ima' argument 2 names different: declaration 'samplesToRead' definition 'framesToRead'.
DRWAV_PRIVATE drwav_uint64 drwav_read_pcm_frames_s16__ima(drwav* pWav, drwav_uint64 framesToRead, drwav_int16* pBufferOut)
                                                                                    ^
src/external/qoa.h:570:67: style:inconclusive: Function 'qoa_decode' argument 3 names different: declaration 'file' definition 'qoa'. [funcArgNamesDifferent]
short *qoa_decode(const unsigned char *bytes, int size, qoa_desc *qoa) {
                                                                  ^
src/external/qoa.h:125:67: note: Function 'qoa_decode' argument 3 names different: declaration 'file' definition 'qoa'.
short *qoa_decode(const unsigned char *bytes, int size, qoa_desc *file);
                                                                  ^
src/external/qoa.h:570:67: note: Function 'qoa_decode' argument 3 names different: declaration 'file' definition 'qoa'.
short *qoa_decode(const unsigned char *bytes, int size, qoa_desc *qoa) {
                                                                  ^
src/external/jar_xm.h:517:46: style:inconclusive: Function 'jar_xm_create_context' argument 1 names different: declaration 'ctx' definition 'ctxp'. [funcArgNamesDifferent]
int jar_xm_create_context(jar_xm_context_t** ctxp, const char* moddata, uint32_t rate) {
                                             ^
src/external/jar_xm.h:103:46: note: Function 'jar_xm_create_context' argument 1 names different: declaration 'ctx' definition 'ctxp'.
int jar_xm_create_context(jar_xm_context_t** ctx, const char* moddata, uint32_t rate);
                                             ^
src/external/jar_xm.h:517:46: note: Function 'jar_xm_create_context' argument 1 names different: declaration 'ctx' definition 'ctxp'.
int jar_xm_create_context(jar_xm_context_t** ctxp, const char* moddata, uint32_t rate) {
                                             ^
src/external/jar_xm.h:523:51: style:inconclusive: Function 'jar_xm_create_context_safe' argument 1 names different: declaration 'ctx' definition 'ctxp'. [funcArgNamesDifferent]
int jar_xm_create_context_safe(jar_xm_context_t** ctxp, const char* moddata, size_t moddata_length, uint32_t rate) {
                                                  ^
src/external/jar_xm.h:112:51: note: Function 'jar_xm_create_context_safe' argument 1 names different: declaration 'ctx' definition 'ctxp'.
int jar_xm_create_context_safe(jar_xm_context_t** ctx, const char* moddata, size_t moddata_length, uint32_t rate);
                                                  ^
src/external/jar_xm.h:523:51: note: Function 'jar_xm_create_context_safe' argument 1 names different: declaration 'ctx' definition 'ctxp'.
int jar_xm_create_context_safe(jar_xm_context_t** ctxp, const char* moddata, size_t moddata_length, uint32_t rate) {
                                                  ^
src/external/jar_mod.h:1559:48: style:inconclusive: Function 'jar_mod_max_samples' argument 1 names different: declaration 'modctx' definition 'ctx'. [funcArgNamesDifferent]
mulong jar_mod_max_samples(jar_mod_context_t * ctx)
                                               ^
src/external/jar_mod.h:251:48: note: Function 'jar_mod_max_samples' argument 1 names different: declaration 'modctx' definition 'ctx'.
mulong jar_mod_max_samples(jar_mod_context_t * modctx);
                                               ^
src/external/jar_mod.h:1559:48: note: Function 'jar_mod_max_samples' argument 1 names different: declaration 'modctx' definition 'ctx'.
mulong jar_mod_max_samples(jar_mod_context_t * ctx)
                                               ^
src/external/qoa.h:372:16: style: Local variable 'error' shadows outer function [shadowFunction]
     long long error = (sample - reconstructed);
               ^
src/external/stb_vorbis.c:913:12: note: Shadowed declaration
static int error(vorb *f, enum STBVorbisError e)
           ^
src/external/qoa.h:372:16: note: Shadow variable
     long long error = (sample - reconstructed);
               ^
src/external/jar_xm.h:915:21: style: Local variable 'flags' shadows outer variable [shadowVariable]
            uint8_t flags = READ_U8(offset + 233);
                    ^
src/external/jar_xm.h:808:14: note: Shadowed declaration
    uint16_t flags = READ_U32(offset + 14);
             ^
src/external/jar_xm.h:915:21: note: Shadow variable
            uint8_t flags = READ_U8(offset + 233);
                    ^
src/external/jar_xm.h:955:21: style: Local variable 'flags' shadows outer variable [shadowVariable]
            uint8_t flags = READ_U8(offset + 14);
                    ^
src/external/jar_xm.h:808:14: note: Shadowed declaration
    uint16_t flags = READ_U32(offset + 14);
             ^
src/external/jar_xm.h:955:21: note: Shadow variable
            uint8_t flags = READ_U8(offset + 14);
                    ^
src/external/miniaudio.h:13698:21: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
        if ((x & (1 << i)) != 0) {
                    ^
src/external/miniaudio.h:13698:21: error: Signed integer overflow for expression '1<<i'. [integerOverflow]
        if ((x & (1 << i)) != 0) {
                    ^
src/external/dr_mp3.h:2335:66: error: Uninitialized variable: grbuf [uninitvar]
            if (12 == (i += drmp3_L12_dequantize_granule(scratch.grbuf[0] + i, bs_frame, sci, info->layer | 1)))
                                                                 ^
src/external/dr_mp3.h:2326:17: note: Assuming condition is false
        if (pcm == NULL) {
                ^
src/external/dr_mp3.h:2335:66: note: Uninitialized variable: grbuf
            if (12 == (i += drmp3_L12_dequantize_granule(scratch.grbuf[0] + i, bs_frame, sci, info->layer | 1)))
                                                                 ^
src/external/qoa.h:389:18: error: Uninitialized variable: best_lms [uninitvar]
   qoa->lms[c] = best_lms;
                 ^
src/external/qoa.h:382:23: note: Assuming condition is false
    if (current_error < best_error) {
                      ^
src/external/qoa.h:389:18: note: Uninitialized variable: best_lms
   qoa->lms[c] = best_lms;
                 ^
src/external/miniaudio.h:13477:37: style: Variable 'pFormattedMessageHeap' is assigned a value that is never used. [unreadVariable]
        char* pFormattedMessageHeap = NULL;
                                    ^
src/external/miniaudio.h:52056:48: style: Variable 'isInputChannelPositionInOutput' is assigned a value that is never used. [unreadVariable]
                isInputChannelPositionInOutput = MA_TRUE;
                                               ^
src/external/miniaudio.h:60530:22: style: Variable 'result' is assigned a value that is never used. [unreadVariable]
    ma_result result = MA_NO_BACKEND;
                     ^
src/external/miniaudio.h:71624:40: style: Variable 'consumeNullInput' is assigned a value that is never used. [unreadVariable]
            ma_bool32 consumeNullInput = MA_FALSE;
                                       ^
src/external/jar_xm.h:584:13: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    if((ret = jar_xm_check_sanity_postload(ctx))) {   DEBUG("jar_xm_check_sanity_postload() returned %i, module is not safe to play", ret);
            ^
src/raudio.c:1060:19: style: Variable 'byteCount' is assigned a value that is never used. [unreadVariable]
        byteCount += sprintf(txtData + byteCount, "%.4ff };\n", ((float *)wave.data)[waveDataSize/4 - 1]);
                  ^
src/raudio.c:1066:19: style: Variable 'byteCount' is assigned a value that is never used. [unreadVariable]
        byteCount += sprintf(txtData + byteCount, "0x%x };\n", ((unsigned char *)wave.data)[waveDataSize - 1]);
                  ^
src/external/miniaudio.h:40360:47: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (deviceType == ma_device_type_playback || deviceType == ma_device_type_duplex) {
                                              ^
src/external/miniaudio.h:40310:47: note: First condition
    if (deviceType == ma_device_type_playback || deviceType == ma_device_type_duplex) {
                                              ^
src/external/miniaudio.h:40360:47: note: Second condition
    if (deviceType == ma_device_type_playback || deviceType == ma_device_type_duplex) {
                                              ^
src/external/miniaudio.h:19562:70: style: Assignment 'pDevice->null_device.currentPeriodFramesRemainingCapture=0' is redundant with condition 'pDevice->null_device.currentPeriodFramesRemainingCapture==0'. [duplicateConditionalAssign]
            pDevice->null_device.currentPeriodFramesRemainingCapture = 0;
                                                                     ^
src/external/miniaudio.h:19561:70: note: Condition 'pDevice->null_device.currentPeriodFramesRemainingCapture==0'
        if (pDevice->null_device.currentPeriodFramesRemainingCapture == 0) {
                                                                     ^
src/external/miniaudio.h:19562:70: note: Assignment 'pDevice->null_device.currentPeriodFramesRemainingCapture=0' is redundant
            pDevice->null_device.currentPeriodFramesRemainingCapture = 0;
                                                                     ^
src/external/miniaudio.h:19290:9: style: Condition 'cbResult' is always true [knownConditionTrueFalse]
    if (cbResult) {
        ^
src/external/miniaudio.h:19284:26: note: Assignment 'cbResult=1', assigned value is 1
    ma_bool32 cbResult = MA_TRUE;
                         ^
src/external/miniaudio.h:19290:9: note: Condition 'cbResult' is always true
    if (cbResult) {
        ^
src/external/miniaudio.h:41039:105: style: Condition 'ma_has_sse2()' is always false [knownConditionTrueFalse]
            ma_log_postf(ma_context_get_log(pContext), MA_LOG_LEVEL_DEBUG, "  SSE2:   %s\n", ma_has_sse2()         ? "YES" : "NO");
                                                                                                        ^
src/external/miniaudio.h:41040:105: style: Condition 'ma_has_avx2()' is always false [knownConditionTrueFalse]
            ma_log_postf(ma_context_get_log(pContext), MA_LOG_LEVEL_DEBUG, "  AVX2:   %s\n", ma_has_avx2()         ? "YES" : "NO");
                                                                                                        ^
src/external/miniaudio.h:41041:105: style: Condition 'ma_has_neon()' is always false [knownConditionTrueFalse]
            ma_log_postf(ma_context_get_log(pContext), MA_LOG_LEVEL_DEBUG, "  NEON:   %s\n", ma_has_neon()         ? "YES" : "NO");
                                                                                                        ^
src/external/miniaudio.h:40405:113: style:inconclusive: Function 'ma_device_post_init' argument 3 names different: declaration 'pPlaybackDescriptor' definition 'pDescriptorPlayback'. [funcArgNamesDifferent]
MA_API ma_result ma_device_post_init(ma_device* pDevice, ma_device_type deviceType, const ma_device_descriptor* pDescriptorPlayback, const ma_device_descriptor* pDescriptorCapture)
                                                                                                                ^
src/external/miniaudio.h:9008:113: note: Function 'ma_device_post_init' argument 3 names different: declaration 'pPlaybackDescriptor' definition 'pDescriptorPlayback'.
MA_API ma_result ma_device_post_init(ma_device* pDevice, ma_device_type deviceType, const ma_device_descriptor* pPlaybackDescriptor, const ma_device_descriptor* pCaptureDescriptor);
                                                                                                                ^
src/external/miniaudio.h:40405:113: note: Function 'ma_device_post_init' argument 3 names different: declaration 'pPlaybackDescriptor' definition 'pDescriptorPlayback'.
MA_API ma_result ma_device_post_init(ma_device* pDevice, ma_device_type deviceType, const ma_device_descriptor* pDescriptorPlayback, const ma_device_descriptor* pDescriptorCapture)
                                                                                                                ^
src/external/miniaudio.h:40405:162: style:inconclusive: Function 'ma_device_post_init' argument 4 names different: declaration 'pCaptureDescriptor' definition 'pDescriptorCapture'. [funcArgNamesDifferent]
MA_API ma_result ma_device_post_init(ma_device* pDevice, ma_device_type deviceType, const ma_device_descriptor* pDescriptorPlayback, const ma_device_descriptor* pDescriptorCapture)
                                                                                                                                                                 ^
src/external/miniaudio.h:9008:162: note: Function 'ma_device_post_init' argument 4 names different: declaration 'pCaptureDescriptor' definition 'pDescriptorCapture'.
MA_API ma_result ma_device_post_init(ma_device* pDevice, ma_device_type deviceType, const ma_device_descriptor* pPlaybackDescriptor, const ma_device_descriptor* pCaptureDescriptor);
                                                                                                                                                                 ^
src/external/miniaudio.h:40405:162: note: Function 'ma_device_post_init' argument 4 names different: declaration 'pCaptureDescriptor' definition 'pDescriptorCapture'.
MA_API ma_result ma_device_post_init(ma_device* pDevice, ma_device_type deviceType, const ma_device_descriptor* pDescriptorPlayback, const ma_device_descriptor* pDescriptorCapture)
                                                                                                                                                                 ^
src/rcore.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 165 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/glad.h:8360:9: warning: Assignment of function parameter has no effect outside the function. Did you forget dereferencing it? [uselessAssignmentPtrArg]
        exts_i = NULL;
        ^
src/external/msf_gif.h:370:17: warning: The address of local variable 'writeHead' might be accessed at non-zero index. [objectIndex]
    (*writeHead)[idx + 0] |= code <<       bit ;
                ^
src/external/msf_gif.h:481:18: note: Address of variable taken here.
    msf_put_code(&writeHead, &blockBits, msf_bit_log(lzw.len - 1), tableSize);
                 ^
src/external/msf_gif.h:481:18: note: Calling function 'msf_put_code', 1st argument '&writeHead' value is lifetime=writeHead
    msf_put_code(&writeHead, &blockBits, msf_bit_log(lzw.len - 1), tableSize);
                 ^
src/external/msf_gif.h:370:17: note: The address of local variable 'writeHead' might be accessed at non-zero index.
    (*writeHead)[idx + 0] |= code <<       bit ;
                ^
src/external/msf_gif.h:370:17: warning: The address of local variable 'writeHead' might be accessed at non-zero index. [objectIndex]
    (*writeHead)[idx + 0] |= code <<       bit ;
                ^
src/external/msf_gif.h:491:26: note: Address of variable taken here.
            msf_put_code(&writeHead, &blockBits, codeBits, lastCode);
                         ^
src/external/msf_gif.h:491:26: note: Calling function 'msf_put_code', 1st argument '&writeHead' value is lifetime=writeHead
            msf_put_code(&writeHead, &blockBits, codeBits, lastCode);
                         ^
src/external/msf_gif.h:370:17: note: The address of local variable 'writeHead' might be accessed at non-zero index.
    (*writeHead)[idx + 0] |= code <<       bit ;
                ^
src/external/msf_gif.h:370:17: warning: The address of local variable 'writeHead' might be accessed at non-zero index. [objectIndex]
    (*writeHead)[idx + 0] |= code <<       bit ;
                ^
src/external/msf_gif.h:495:30: note: Address of variable taken here.
                msf_put_code(&writeHead, &blockBits, codeBits, tableSize);
                             ^
src/external/msf_gif.h:495:30: note: Calling function 'msf_put_code', 1st argument '&writeHead' value is lifetime=writeHead
                msf_put_code(&writeHead, &blockBits, codeBits, tableSize);
                             ^
src/external/msf_gif.h:370:17: note: The address of local variable 'writeHead' might be accessed at non-zero index.
    (*writeHead)[idx + 0] |= code <<       bit ;
                ^
src/external/msf_gif.h:370:17: warning: The address of local variable 'writeHead' might be accessed at non-zero index. [objectIndex]
    (*writeHead)[idx + 0] |= code <<       bit ;
                ^
src/external/msf_gif.h:509:18: note: Address of variable taken here.
    msf_put_code(&writeHead, &blockBits, msf_imin(12, msf_bit_log(lzw.len - 1)), lastCode);
                 ^
src/external/msf_gif.h:509:18: note: Calling function 'msf_put_code', 1st argument '&writeHead' value is lifetime=writeHead
    msf_put_code(&writeHead, &blockBits, msf_imin(12, msf_bit_log(lzw.len - 1)), lastCode);
                 ^
src/external/msf_gif.h:370:17: note: The address of local variable 'writeHead' might be accessed at non-zero index.
    (*writeHead)[idx + 0] |= code <<       bit ;
                ^
src/external/msf_gif.h:370:17: warning: The address of local variable 'writeHead' might be accessed at non-zero index. [objectIndex]
    (*writeHead)[idx + 0] |= code <<       bit ;
                ^
src/external/msf_gif.h:510:18: note: Address of variable taken here.
    msf_put_code(&writeHead, &blockBits, msf_imin(12, msf_bit_log(lzw.len)), tableSize + 1);
                 ^
src/external/msf_gif.h:510:18: note: Calling function 'msf_put_code', 1st argument '&writeHead' value is lifetime=writeHead
    msf_put_code(&writeHead, &blockBits, msf_imin(12, msf_bit_log(lzw.len)), tableSize + 1);
                 ^
src/external/msf_gif.h:370:17: note: The address of local variable 'writeHead' might be accessed at non-zero index.
    (*writeHead)[idx + 0] |= code <<       bit ;
                ^
src/external/msf_gif.h:371:17: warning: The address of local variable 'writeHead' might be accessed at non-zero index. [objectIndex]
    (*writeHead)[idx + 1] |= code >> ( 8 - bit);
                ^
src/external/msf_gif.h:481:18: note: Address of variable taken here.
    msf_put_code(&writeHead, &blockBits, msf_bit_log(lzw.len - 1), tableSize);
                 ^
src/external/msf_gif.h:481:18: note: Calling function 'msf_put_code', 1st argument '&writeHead' value is lifetime=writeHead
    msf_put_code(&writeHead, &blockBits, msf_bit_log(lzw.len - 1), tableSize);
                 ^
src/external/msf_gif.h:371:17: note: The address of local variable 'writeHead' might be accessed at non-zero index.
    (*writeHead)[idx + 1] |= code >> ( 8 - bit);
                ^
src/external/msf_gif.h:371:17: warning: The address of local variable 'writeHead' might be accessed at non-zero index. [objectIndex]
    (*writeHead)[idx + 1] |= code >> ( 8 - bit);
                ^
src/external/msf_gif.h:491:26: note: Address of variable taken here.
            msf_put_code(&writeHead, &blockBits, codeBits, lastCode);
                         ^
src/external/msf_gif.h:491:26: note: Calling function 'msf_put_code', 1st argument '&writeHead' value is lifetime=writeHead
            msf_put_code(&writeHead, &blockBits, codeBits, lastCode);
                         ^
src/external/msf_gif.h:371:17: note: The address of local variable 'writeHead' might be accessed at non-zero index.
    (*writeHead)[idx + 1] |= code >> ( 8 - bit);
                ^
src/external/msf_gif.h:371:17: warning: The address of local variable 'writeHead' might be accessed at non-zero index. [objectIndex]
    (*writeHead)[idx + 1] |= code >> ( 8 - bit);
                ^
src/external/msf_gif.h:495:30: note: Address of variable taken here.
                msf_put_code(&writeHead, &blockBits, codeBits, tableSize);
                             ^
src/external/msf_gif.h:495:30: note: Calling function 'msf_put_code', 1st argument '&writeHead' value is lifetime=writeHead
                msf_put_code(&writeHead, &blockBits, codeBits, tableSize);
                             ^
src/external/msf_gif.h:371:17: note: The address of local variable 'writeHead' might be accessed at non-zero index.
    (*writeHead)[idx + 1] |= code >> ( 8 - bit);
                ^
src/external/msf_gif.h:371:17: warning: The address of local variable 'writeHead' might be accessed at non-zero index. [objectIndex]
    (*writeHead)[idx + 1] |= code >> ( 8 - bit);
                ^
src/external/msf_gif.h:509:18: note: Address of variable taken here.
    msf_put_code(&writeHead, &blockBits, msf_imin(12, msf_bit_log(lzw.len - 1)), lastCode);
                 ^
src/external/msf_gif.h:509:18: note: Calling function 'msf_put_code', 1st argument '&writeHead' value is lifetime=writeHead
    msf_put_code(&writeHead, &blockBits, msf_imin(12, msf_bit_log(lzw.len - 1)), lastCode);
                 ^
src/external/msf_gif.h:371:17: note: The address of local variable 'writeHead' might be accessed at non-zero index.
    (*writeHead)[idx + 1] |= code >> ( 8 - bit);
                ^
src/external/msf_gif.h:371:17: warning: The address of local variable 'writeHead' might be accessed at non-zero index. [objectIndex]
    (*writeHead)[idx + 1] |= code >> ( 8 - bit);
                ^
src/external/msf_gif.h:510:18: note: Address of variable taken here.
    msf_put_code(&writeHead, &blockBits, msf_imin(12, msf_bit_log(lzw.len)), tableSize + 1);
                 ^
src/external/msf_gif.h:510:18: note: Calling function 'msf_put_code', 1st argument '&writeHead' value is lifetime=writeHead
    msf_put_code(&writeHead, &blockBits, msf_imin(12, msf_bit_log(lzw.len)), tableSize + 1);
                 ^
src/external/msf_gif.h:371:17: note: The address of local variable 'writeHead' might be accessed at non-zero index.
    (*writeHead)[idx + 1] |= code >> ( 8 - bit);
                ^
src/external/msf_gif.h:372:17: warning: The address of local variable 'writeHead' might be accessed at non-zero index. [objectIndex]
    (*writeHead)[idx + 2] |= code >> (16 - bit);
                ^
src/external/msf_gif.h:481:18: note: Address of variable taken here.
    msf_put_code(&writeHead, &blockBits, msf_bit_log(lzw.len - 1), tableSize);
                 ^
src/external/msf_gif.h:481:18: note: Calling function 'msf_put_code', 1st argument '&writeHead' value is lifetime=writeHead
    msf_put_code(&writeHead, &blockBits, msf_bit_log(lzw.len - 1), tableSize);
                 ^
src/external/msf_gif.h:372:17: note: The address of local variable 'writeHead' might be accessed at non-zero index.
    (*writeHead)[idx + 2] |= code >> (16 - bit);
                ^
src/external/msf_gif.h:372:17: warning: The address of local variable 'writeHead' might be accessed at non-zero index. [objectIndex]
    (*writeHead)[idx + 2] |= code >> (16 - bit);
                ^
src/external/msf_gif.h:491:26: note: Address of variable taken here.
            msf_put_code(&writeHead, &blockBits, codeBits, lastCode);
                         ^
src/external/msf_gif.h:491:26: note: Calling function 'msf_put_code', 1st argument '&writeHead' value is lifetime=writeHead
            msf_put_code(&writeHead, &blockBits, codeBits, lastCode);
                         ^
src/external/msf_gif.h:372:17: note: The address of local variable 'writeHead' might be accessed at non-zero index.
    (*writeHead)[idx + 2] |= code >> (16 - bit);
                ^
src/external/msf_gif.h:372:17: warning: The address of local variable 'writeHead' might be accessed at non-zero index. [objectIndex]
    (*writeHead)[idx + 2] |= code >> (16 - bit);
                ^
src/external/msf_gif.h:495:30: note: Address of variable taken here.
                msf_put_code(&writeHead, &blockBits, codeBits, tableSize);
                             ^
src/external/msf_gif.h:495:30: note: Calling function 'msf_put_code', 1st argument '&writeHead' value is lifetime=writeHead
                msf_put_code(&writeHead, &blockBits, codeBits, tableSize);
                             ^
src/external/msf_gif.h:372:17: note: The address of local variable 'writeHead' might be accessed at non-zero index.
    (*writeHead)[idx + 2] |= code >> (16 - bit);
                ^
src/external/msf_gif.h:372:17: warning: The address of local variable 'writeHead' might be accessed at non-zero index. [objectIndex]
    (*writeHead)[idx + 2] |= code >> (16 - bit);
                ^
src/external/msf_gif.h:509:18: note: Address of variable taken here.
    msf_put_code(&writeHead, &blockBits, msf_imin(12, msf_bit_log(lzw.len - 1)), lastCode);
                 ^
src/external/msf_gif.h:509:18: note: Calling function 'msf_put_code', 1st argument '&writeHead' value is lifetime=writeHead
    msf_put_code(&writeHead, &blockBits, msf_imin(12, msf_bit_log(lzw.len - 1)), lastCode);
                 ^
src/external/msf_gif.h:372:17: note: The address of local variable 'writeHead' might be accessed at non-zero index.
    (*writeHead)[idx + 2] |= code >> (16 - bit);
                ^
src/external/msf_gif.h:372:17: warning: The address of local variable 'writeHead' might be accessed at non-zero index. [objectIndex]
    (*writeHead)[idx + 2] |= code >> (16 - bit);
                ^
src/external/msf_gif.h:510:18: note: Address of variable taken here.
    msf_put_code(&writeHead, &blockBits, msf_imin(12, msf_bit_log(lzw.len)), tableSize + 1);
                 ^
src/external/msf_gif.h:510:18: note: Calling function 'msf_put_code', 1st argument '&writeHead' value is lifetime=writeHead
    msf_put_code(&writeHead, &blockBits, msf_imin(12, msf_bit_log(lzw.len)), tableSize + 1);
                 ^
src/external/msf_gif.h:372:17: note: The address of local variable 'writeHead' might be accessed at non-zero index.
    (*writeHead)[idx + 2] |= code >> (16 - bit);
                ^
src/external/msf_gif.h:379:21: error: The address of local variable 'writeHead' is accessed at non-zero index. [objectIndex]
        (*writeHead)[2] = (*writeHead)[1];
                    ^
src/external/msf_gif.h:481:18: note: Address of variable taken here.
    msf_put_code(&writeHead, &blockBits, msf_bit_log(lzw.len - 1), tableSize);
                 ^
src/external/msf_gif.h:481:18: note: Calling function 'msf_put_code', 1st argument '&writeHead' value is lifetime=writeHead
    msf_put_code(&writeHead, &blockBits, msf_bit_log(lzw.len - 1), tableSize);
                 ^
src/external/msf_gif.h:379:21: note: The address of local variable 'writeHead' is accessed at non-zero index.
        (*writeHead)[2] = (*writeHead)[1];
                    ^
src/external/msf_gif.h:379:21: error: The address of local variable 'writeHead' is accessed at non-zero index. [objectIndex]
        (*writeHead)[2] = (*writeHead)[1];
                    ^
src/external/msf_gif.h:491:26: note: Address of variable taken here.
            msf_put_code(&writeHead, &blockBits, codeBits, lastCode);
                         ^
src/external/msf_gif.h:491:26: note: Calling function 'msf_put_code', 1st argument '&writeHead' value is lifetime=writeHead
            msf_put_code(&writeHead, &blockBits, codeBits, lastCode);
                         ^
src/external/msf_gif.h:379:21: note: The address of local variable 'writeHead' is accessed at non-zero index.
        (*writeHead)[2] = (*writeHead)[1];
                    ^
src/external/msf_gif.h:379:21: error: The address of local variable 'writeHead' is accessed at non-zero index. [objectIndex]
        (*writeHead)[2] = (*writeHead)[1];
                    ^
src/external/msf_gif.h:495:30: note: Address of variable taken here.
                msf_put_code(&writeHead, &blockBits, codeBits, tableSize);
                             ^
src/external/msf_gif.h:495:30: note: Calling function 'msf_put_code', 1st argument '&writeHead' value is lifetime=writeHead
                msf_put_code(&writeHead, &blockBits, codeBits, tableSize);
                             ^
src/external/msf_gif.h:379:21: note: The address of local variable 'writeHead' is accessed at non-zero index.
        (*writeHead)[2] = (*writeHead)[1];
                    ^
src/external/msf_gif.h:379:21: error: The address of local variable 'writeHead' is accessed at non-zero index. [objectIndex]
        (*writeHead)[2] = (*writeHead)[1];
                    ^
src/external/msf_gif.h:510:18: note: Address of variable taken here.
    msf_put_code(&writeHead, &blockBits, msf_imin(12, msf_bit_log(lzw.len)), tableSize + 1);
                 ^
src/external/msf_gif.h:510:18: note: Calling function 'msf_put_code', 1st argument '&writeHead' value is lifetime=writeHead
    msf_put_code(&writeHead, &blockBits, msf_imin(12, msf_bit_log(lzw.len)), tableSize + 1);
                 ^
src/external/msf_gif.h:379:21: note: The address of local variable 'writeHead' is accessed at non-zero index.
        (*writeHead)[2] = (*writeHead)[1];
                    ^
src/external/msf_gif.h:380:21: error: The address of local variable 'writeHead' is accessed at non-zero index. [objectIndex]
        (*writeHead)[1] = (*writeHead)[0];
                    ^
src/external/msf_gif.h:481:18: note: Address of variable taken here.
    msf_put_code(&writeHead, &blockBits, msf_bit_log(lzw.len - 1), tableSize);
                 ^
src/external/msf_gif.h:481:18: note: Calling function 'msf_put_code', 1st argument '&writeHead' value is lifetime=writeHead
    msf_put_code(&writeHead, &blockBits, msf_bit_log(lzw.len - 1), tableSize);
                 ^
src/external/msf_gif.h:380:21: note: The address of local variable 'writeHead' is accessed at non-zero index.
        (*writeHead)[1] = (*writeHead)[0];
                    ^
src/external/msf_gif.h:380:21: error: The address of local variable 'writeHead' is accessed at non-zero index. [objectIndex]
        (*writeHead)[1] = (*writeHead)[0];
                    ^
src/external/msf_gif.h:491:26: note: Address of variable taken here.
            msf_put_code(&writeHead, &blockBits, codeBits, lastCode);
                         ^
src/external/msf_gif.h:491:26: note: Calling function 'msf_put_code', 1st argument '&writeHead' value is lifetime=writeHead
            msf_put_code(&writeHead, &blockBits, codeBits, lastCode);
                         ^
src/external/msf_gif.h:380:21: note: The address of local variable 'writeHead' is accessed at non-zero index.
        (*writeHead)[1] = (*writeHead)[0];
                    ^
src/external/msf_gif.h:380:21: error: The address of local variable 'writeHead' is accessed at non-zero index. [objectIndex]
        (*writeHead)[1] = (*writeHead)[0];
                    ^
src/external/msf_gif.h:495:30: note: Address of variable taken here.
                msf_put_code(&writeHead, &blockBits, codeBits, tableSize);
                             ^
src/external/msf_gif.h:495:30: note: Calling function 'msf_put_code', 1st argument '&writeHead' value is lifetime=writeHead
                msf_put_code(&writeHead, &blockBits, codeBits, tableSize);
                             ^
src/external/msf_gif.h:380:21: note: The address of local variable 'writeHead' is accessed at non-zero index.
        (*writeHead)[1] = (*writeHead)[0];
                    ^
src/external/msf_gif.h:380:21: error: The address of local variable 'writeHead' is accessed at non-zero index. [objectIndex]
        (*writeHead)[1] = (*writeHead)[0];
                    ^
src/external/msf_gif.h:510:18: note: Address of variable taken here.
    msf_put_code(&writeHead, &blockBits, msf_imin(12, msf_bit_log(lzw.len)), tableSize + 1);
                 ^
src/external/msf_gif.h:510:18: note: Calling function 'msf_put_code', 1st argument '&writeHead' value is lifetime=writeHead
    msf_put_code(&writeHead, &blockBits, msf_imin(12, msf_bit_log(lzw.len)), tableSize + 1);
                 ^
src/external/msf_gif.h:380:21: note: The address of local variable 'writeHead' is accessed at non-zero index.
        (*writeHead)[1] = (*writeHead)[0];
                    ^
src/external/msf_gif.h:487:54: warning: The address of local variable 'data' might be accessed at non-zero index. [objectIndex]
        int code = (&lzw.data[lastCode * lzw.stride])[color];
                                                     ^
src/external/msf_gif.h:487:21: note: Address of variable taken here.
        int code = (&lzw.data[lastCode * lzw.stride])[color];
                    ^
src/external/msf_gif.h:487:54: note: The address of local variable 'data' might be accessed at non-zero index.
        int code = (&lzw.data[lastCode * lzw.stride])[color];
                                                     ^
src/external/msf_gif.h:498:51: warning: The address of local variable 'data' might be accessed at non-zero index. [objectIndex]
                (&lzw.data[lastCode * lzw.stride])[color] = lzw.len;
                                                  ^
src/external/msf_gif.h:498:18: note: Address of variable taken here.
                (&lzw.data[lastCode * lzw.stride])[color] = lzw.len;
                 ^
src/external/msf_gif.h:498:51: note: The address of local variable 'data' might be accessed at non-zero index.
                (&lzw.data[lastCode * lzw.stride])[color] = lzw.len;
                                                  ^
src/external/glad.h:8332:20: style: Condition 'exts_i==NULL' is always true [knownConditionTrueFalse]
        if (exts_i == NULL) {
                   ^
src/external/glad.h:8324:25: note: Assignment 'exts_i=NULL', assigned value is 0
        char **exts_i = NULL;
                        ^
src/external/glad.h:8325:39: note: Assuming condition is false
        if (glad_glGetStringi == NULL || glad_glGetIntegerv == NULL) {
                                      ^
src/external/glad.h:8332:20: note: Condition 'exts_i==NULL' is always true
        if (exts_i == NULL) {
                   ^
src/rlgl.h:4195:12: style: Redundant initialization for 'matrix'. The initialized value is overwritten before it is read. [redundantInitialization]
    matrix = RLGL.State.modelview;
           ^
src/rlgl.h:4174:19: note: matrix is initialized
    Matrix matrix = rlMatrixIdentity();
                  ^
src/rlgl.h:4195:12: note: matrix is overwritten
    matrix = RLGL.State.modelview;
           ^
src/rlgl.h:4238:9: style: Redundant initialization for 'mat'. The initialized value is overwritten before it is read. [redundantInitialization]
    mat = RLGL.State.transform;
        ^
src/rlgl.h:4232:16: note: mat is initialized
    Matrix mat = rlMatrixIdentity();
               ^
src/rlgl.h:4238:9: note: mat is overwritten
    mat = RLGL.State.transform;
        ^
src/rlgl.h:4248:9: style: Redundant initialization for 'mat'. The initialized value is overwritten before it is read. [redundantInitialization]
    mat = RLGL.State.projectionStereo[eye];
        ^
src/rlgl.h:4246:16: note: mat is initialized
    Matrix mat = rlMatrixIdentity();
               ^
src/rlgl.h:4248:9: note: mat is overwritten
    mat = RLGL.State.projectionStereo[eye];
        ^
src/rlgl.h:4258:9: style: Redundant initialization for 'mat'. The initialized value is overwritten before it is read. [redundantInitialization]
    mat = RLGL.State.viewOffsetStereo[eye];
        ^
src/rlgl.h:4256:16: note: mat is initialized
    Matrix mat = rlMatrixIdentity();
               ^
src/rlgl.h:4258:9: note: mat is overwritten
    mat = RLGL.State.viewOffsetStereo[eye];
        ^
src/rlgl.h:4128:18: style: The comparison 'size > 0' is always false. [knownConditionTrueFalse]
    return (size > 0)? (unsigned int)size : 0;
                 ^
src/rlgl.h:4121:22: note: 'size' is assigned value '0' here.
    long long size = 0;
                     ^
src/rlgl.h:4128:18: note: The comparison 'size > 0' is always false.
    return (size > 0)? (unsigned int)size : 0;
                 ^
src/rcore.c:2851:16: style: The scope of the variable 'index' can be reduced. [variableScope]
    static int index = 0;
               ^
src/rcore.c:2852:18: style: The scope of the variable 'history' can be reduced. [variableScope]
    static float history[FPS_CAPTURE_FRAMES_COUNT] = { 0 };
                 ^
src/rcore.c:3272:18: style: The scope of the variable 'fileCounter' can be reduced. [variableScope]
    unsigned int fileCounter = 0;
                 ^
src/rcore.c:3274:20: style: The scope of the variable 'entity' can be reduced. [variableScope]
    struct dirent *entity;
                   ^
src/rlgl.h:1462:31: style:inconclusive: Function 'rlColor4ub' argument 1 names different: declaration 'r' definition 'x'. [funcArgNamesDifferent]
void rlColor4ub(unsigned char x, unsigned char y, unsigned char z, unsigned char w)
                              ^
src/rlgl.h:569:37: note: Function 'rlColor4ub' argument 1 names different: declaration 'r' definition 'x'.
RLAPI void rlColor4ub(unsigned char r, unsigned char g, unsigned char b, unsigned char a);  // Define one vertex (color) - 4 byte
                                    ^
src/rlgl.h:1462:31: note: Function 'rlColor4ub' argument 1 names different: declaration 'r' definition 'x'.
void rlColor4ub(unsigned char x, unsigned char y, unsigned char z, unsigned char w)
                              ^
src/rlgl.h:1462:48: style:inconclusive: Function 'rlColor4ub' argument 2 names different: declaration 'g' definition 'y'. [funcArgNamesDifferent]
void rlColor4ub(unsigned char x, unsigned char y, unsigned char z, unsigned char w)
                                               ^
src/rlgl.h:569:54: note: Function 'rlColor4ub' argument 2 names different: declaration 'g' definition 'y'.
RLAPI void rlColor4ub(unsigned char r, unsigned char g, unsigned char b, unsigned char a);  // Define one vertex (color) - 4 byte
                                                     ^
src/rlgl.h:1462:48: note: Function 'rlColor4ub' argument 2 names different: declaration 'g' definition 'y'.
void rlColor4ub(unsigned char x, unsigned char y, unsigned char z, unsigned char w)
                                               ^
src/rlgl.h:1462:65: style:inconclusive: Function 'rlColor4ub' argument 3 names different: declaration 'b' definition 'z'. [funcArgNamesDifferent]
void rlColor4ub(unsigned char x, unsigned char y, unsigned char z, unsigned char w)
                                                                ^
src/rlgl.h:569:71: note: Function 'rlColor4ub' argument 3 names different: declaration 'b' definition 'z'.
RLAPI void rlColor4ub(unsigned char r, unsigned char g, unsigned char b, unsigned char a);  // Define one vertex (color) - 4 byte
                                                                      ^
src/rlgl.h:1462:65: note: Function 'rlColor4ub' argument 3 names different: declaration 'b' definition 'z'.
void rlColor4ub(unsigned char x, unsigned char y, unsigned char z, unsigned char w)
                                                                ^
src/rlgl.h:1462:82: style:inconclusive: Function 'rlColor4ub' argument 4 names different: declaration 'a' definition 'w'. [funcArgNamesDifferent]
void rlColor4ub(unsigned char x, unsigned char y, unsigned char z, unsigned char w)
                                                                                 ^
src/rlgl.h:569:88: note: Function 'rlColor4ub' argument 4 names different: declaration 'a' definition 'w'.
RLAPI void rlColor4ub(unsigned char r, unsigned char g, unsigned char b, unsigned char a);  // Define one vertex (color) - 4 byte
                                                                                       ^
src/rlgl.h:1462:82: note: Function 'rlColor4ub' argument 4 names different: declaration 'a' definition 'w'.
void rlColor4ub(unsigned char x, unsigned char y, unsigned char z, unsigned char w)
                                                                                 ^
src/rlgl.h:1471:22: style:inconclusive: Function 'rlColor4f' argument 1 names different: declaration 'x' definition 'r'. [funcArgNamesDifferent]
void rlColor4f(float r, float g, float b, float a)
                     ^
src/rlgl.h:571:28: note: Function 'rlColor4f' argument 1 names different: declaration 'x' definition 'r'.
RLAPI void rlColor4f(float x, float y, float z, float w); // Define one vertex (color) - 4 float
                           ^
src/rlgl.h:1471:22: note: Function 'rlColor4f' argument 1 names different: declaration 'x' definition 'r'.
void rlColor4f(float r, float g, float b, float a)
                     ^
src/rlgl.h:1471:31: style:inconclusive: Function 'rlColor4f' argument 2 names different: declaration 'y' definition 'g'. [funcArgNamesDifferent]
void rlColor4f(float r, float g, float b, float a)
                              ^
src/rlgl.h:571:37: note: Function 'rlColor4f' argument 2 names different: declaration 'y' definition 'g'.
RLAPI void rlColor4f(float x, float y, float z, float w); // Define one vertex (color) - 4 float
                                    ^
src/rlgl.h:1471:31: note: Function 'rlColor4f' argument 2 names different: declaration 'y' definition 'g'.
void rlColor4f(float r, float g, float b, float a)
                              ^
src/rlgl.h:1471:40: style:inconclusive: Function 'rlColor4f' argument 3 names different: declaration 'z' definition 'b'. [funcArgNamesDifferent]
void rlColor4f(float r, float g, float b, float a)
                                       ^
src/rlgl.h:571:46: note: Function 'rlColor4f' argument 3 names different: declaration 'z' definition 'b'.
RLAPI void rlColor4f(float x, float y, float z, float w); // Define one vertex (color) - 4 float
                                             ^
src/rlgl.h:1471:40: note: Function 'rlColor4f' argument 3 names different: declaration 'z' definition 'b'.
void rlColor4f(float r, float g, float b, float a)
                                       ^
src/rlgl.h:1471:49: style:inconclusive: Function 'rlColor4f' argument 4 names different: declaration 'w' definition 'a'. [funcArgNamesDifferent]
void rlColor4f(float r, float g, float b, float a)
                                                ^
src/rlgl.h:571:55: note: Function 'rlColor4f' argument 4 names different: declaration 'w' definition 'a'.
RLAPI void rlColor4f(float x, float y, float z, float w); // Define one vertex (color) - 4 float
                                                      ^
src/rlgl.h:1471:49: note: Function 'rlColor4f' argument 4 names different: declaration 'w' definition 'a'.
void rlColor4f(float r, float g, float b, float a)
                                                ^
src/rlgl.h:3554:40: style:inconclusive: Function 'rlUpdateVertexBuffer' argument 1 names different: declaration 'bufferId' definition 'id'. [funcArgNamesDifferent]
void rlUpdateVertexBuffer(unsigned int id, const void *data, int dataSize, int offset)
                                       ^
src/rlgl.h:676:46: note: Function 'rlUpdateVertexBuffer' argument 1 names different: declaration 'bufferId' definition 'id'.
RLAPI void rlUpdateVertexBuffer(unsigned int bufferId, const void *data, int dataSize, int offset);     // Update GPU buffer with new data
                                             ^
src/rlgl.h:3554:40: note: Function 'rlUpdateVertexBuffer' argument 1 names different: declaration 'bufferId' definition 'id'.
void rlUpdateVertexBuffer(unsigned int id, const void *data, int dataSize, int offset)
                                       ^
src/rlgl.h:4272:35: style:inconclusive: Function 'rlSetMatrixProjection' argument 1 names different: declaration 'proj' definition 'projection'. [funcArgNamesDifferent]
void rlSetMatrixProjection(Matrix projection)
                                  ^
src/rlgl.h:740:41: note: Function 'rlSetMatrixProjection' argument 1 names different: declaration 'proj' definition 'projection'.
RLAPI void rlSetMatrixProjection(Matrix proj);                            // Set a custom projection matrix (replaces internal projection matrix)
                                        ^
src/rlgl.h:4272:35: note: Function 'rlSetMatrixProjection' argument 1 names different: declaration 'proj' definition 'projection'.
void rlSetMatrixProjection(Matrix projection)
                                  ^
src/rgestures.h:504:37: style:inconclusive: Function 'rgVector2Angle' argument 1 names different: declaration 'initialPosition' definition 'v1'. [funcArgNamesDifferent]
static float rgVector2Angle(Vector2 v1, Vector2 v2)
                                    ^
src/rgestures.h:244:37: note: Function 'rgVector2Angle' argument 1 names different: declaration 'initialPosition' definition 'v1'.
static float rgVector2Angle(Vector2 initialPosition, Vector2 finalPosition);
                                    ^
src/rgestures.h:504:37: note: Function 'rgVector2Angle' argument 1 names different: declaration 'initialPosition' definition 'v1'.
static float rgVector2Angle(Vector2 v1, Vector2 v2)
                                    ^
src/rgestures.h:504:49: style:inconclusive: Function 'rgVector2Angle' argument 2 names different: declaration 'finalPosition' definition 'v2'. [funcArgNamesDifferent]
static float rgVector2Angle(Vector2 v1, Vector2 v2)
                                                ^
src/rgestures.h:244:62: note: Function 'rgVector2Angle' argument 2 names different: declaration 'finalPosition' definition 'v2'.
static float rgVector2Angle(Vector2 initialPosition, Vector2 finalPosition);
                                                             ^
src/rgestures.h:504:49: note: Function 'rgVector2Angle' argument 2 names different: declaration 'finalPosition' definition 'v2'.
static float rgVector2Angle(Vector2 v1, Vector2 v2)
                                                ^
src/external/sinfl.h:571:43: style:inconclusive: Function 'zsinflate' argument 3 names different: declaration 'in' definition 'mem'. [funcArgNamesDifferent]
zsinflate(void *out, int cap, const void *mem, int size) {
                                          ^
src/external/sinfl.h:132:54: note: Function 'zsinflate' argument 3 names different: declaration 'in' definition 'mem'.
extern int zsinflate(void *out, int cap, const void *in, int size);
                                                     ^
src/external/sinfl.h:571:43: note: Function 'zsinflate' argument 3 names different: declaration 'in' definition 'mem'.
zsinflate(void *out, int cap, const void *mem, int size) {
                                          ^
src/external/sdefl.h:635:33: style:inconclusive: Function 'sdeflate' argument 2 names different: declaration 'o' definition 'out'. [funcArgNamesDifferent]
sdeflate(struct sdefl *s, void *out, const void *in, int n, int lvl) {
                                ^
src/external/sdefl.h:168:44: note: Function 'sdeflate' argument 2 names different: declaration 'o' definition 'out'.
extern int sdeflate(struct sdefl *s, void *o, const void *i, int n, int lvl);
                                           ^
src/external/sdefl.h:635:33: note: Function 'sdeflate' argument 2 names different: declaration 'o' definition 'out'.
sdeflate(struct sdefl *s, void *out, const void *in, int n, int lvl) {
                                ^
src/external/sdefl.h:635:50: style:inconclusive: Function 'sdeflate' argument 3 names different: declaration 'i' definition 'in'. [funcArgNamesDifferent]
sdeflate(struct sdefl *s, void *out, const void *in, int n, int lvl) {
                                                 ^
src/external/sdefl.h:168:59: note: Function 'sdeflate' argument 3 names different: declaration 'i' definition 'in'.
extern int sdeflate(struct sdefl *s, void *o, const void *i, int n, int lvl);
                                                          ^
src/external/sdefl.h:635:50: note: Function 'sdeflate' argument 3 names different: declaration 'i' definition 'in'.
sdeflate(struct sdefl *s, void *out, const void *in, int n, int lvl) {
                                                 ^
src/external/sdefl.h:671:34: style:inconclusive: Function 'zsdeflate' argument 2 names different: declaration 'o' definition 'out'. [funcArgNamesDifferent]
zsdeflate(struct sdefl *s, void *out, const void *in, int n, int lvl) {
                                 ^
src/external/sdefl.h:169:45: note: Function 'zsdeflate' argument 2 names different: declaration 'o' definition 'out'.
extern int zsdeflate(struct sdefl *s, void *o, const void *i, int n, int lvl);
                                            ^
src/external/sdefl.h:671:34: note: Function 'zsdeflate' argument 2 names different: declaration 'o' definition 'out'.
zsdeflate(struct sdefl *s, void *out, const void *in, int n, int lvl) {
                                 ^
src/external/sdefl.h:671:51: style:inconclusive: Function 'zsdeflate' argument 3 names different: declaration 'i' definition 'in'. [funcArgNamesDifferent]
zsdeflate(struct sdefl *s, void *out, const void *in, int n, int lvl) {
                                                  ^
src/external/sdefl.h:169:60: note: Function 'zsdeflate' argument 3 names different: declaration 'i' definition 'in'.
extern int zsdeflate(struct sdefl *s, void *o, const void *i, int n, int lvl);
                                                           ^
src/external/sdefl.h:671:51: note: Function 'zsdeflate' argument 3 names different: declaration 'i' definition 'in'.
zsdeflate(struct sdefl *s, void *out, const void *in, int n, int lvl) {
                                                  ^
src/external/sdefl.h:690:17: style:inconclusive: Function 'sdefl_bound' argument 1 names different: declaration 'in_len' definition 'len'. [funcArgNamesDifferent]
sdefl_bound(int len) {
                ^
src/external/sdefl.h:167:28: note: Function 'sdefl_bound' argument 1 names different: declaration 'in_len' definition 'len'.
extern int sdefl_bound(int in_len);
                           ^
src/external/sdefl.h:690:17: note: Function 'sdefl_bound' argument 1 names different: declaration 'in_len' definition 'len'.
sdefl_bound(int len) {
                ^
src/rcore.c:2673:25: style:inconclusive: Function 'GetMouseRay' argument 1 names different: declaration 'mousePosition' definition 'mouse'. [funcArgNamesDifferent]
Ray GetMouseRay(Vector2 mouse, Camera camera)
                        ^
src/raylib.h:1026:31: note: Function 'GetMouseRay' argument 1 names different: declaration 'mousePosition' definition 'mouse'.
RLAPI Ray GetMouseRay(Vector2 mousePosition, Camera camera);      // Get a ray trace from mouse position
                              ^
src/rcore.c:2673:25: note: Function 'GetMouseRay' argument 1 names different: declaration 'mousePosition' definition 'mouse'.
Ray GetMouseRay(Vector2 mouse, Camera camera)
                        ^
src/rcore.c:5261:68: style:inconclusive: Function 'ScanDirectoryFiles' argument 2 names different: declaration 'list' definition 'files'. [funcArgNamesDifferent]
static void ScanDirectoryFiles(const char *basePath, FilePathList *files, const char *filter)
                                                                   ^
src/rcore.c:630:68: note: Function 'ScanDirectoryFiles' argument 2 names different: declaration 'list' definition 'files'.
static void ScanDirectoryFiles(const char *basePath, FilePathList *list, const char *filter);   // Scan all files and directories in a base path
                                                                   ^
src/rcore.c:5261:68: note: Function 'ScanDirectoryFiles' argument 2 names different: declaration 'list' definition 'files'.
static void ScanDirectoryFiles(const char *basePath, FilePathList *files, const char *filter)
                                                                   ^
src/rcore.c:5300:79: style:inconclusive: Function 'ScanDirectoryFilesRecursively' argument 2 names different: declaration 'list' definition 'files'. [funcArgNamesDifferent]
static void ScanDirectoryFilesRecursively(const char *basePath, FilePathList *files, const char *filter)
                                                                              ^
src/rcore.c:631:79: note: Function 'ScanDirectoryFilesRecursively' argument 2 names different: declaration 'list' definition 'files'.
static void ScanDirectoryFilesRecursively(const char *basePath, FilePathList *list, const char *filter);  // Scan all files and directories recursively from a base path
                                                                              ^
src/rcore.c:5300:79: note: Function 'ScanDirectoryFilesRecursively' argument 2 names different: declaration 'list' definition 'files'.
static void ScanDirectoryFilesRecursively(const char *basePath, FilePathList *files, const char *filter)
                                                                              ^
src/rcore.c:403:14: style: struct member 'Anonymous7::shouldClose' is never used. [unusedStructMember]
        bool shouldClose;                   // Check if window set for closing
             ^
src/rcore.c:404:14: style: struct member 'Anonymous7::resizedLastFrame' is never used. [unusedStructMember]
        bool resizedLastFrame;              // Check if window has been resized last frame
             ^
src/rcore.c:485:18: style: struct member 'Anonymous13::name' is never used. [unusedStructMember]
            char name[MAX_GAMEPADS][64];    // Gamepad name holder
                 ^
src/external/sinfl.h:281:16: style: Variable 'sub_bits' is assigned a value that is never used. [unreadVariable]
  int sub_bits = 0;
               ^
src/rcore.c:4924:29: style: Variable 'sleepSeconds' is assigned a value that is never used. [unreadVariable]
        double sleepSeconds = seconds - seconds*0.05;  // NOTE: We reserve a percentage of the time for busy waiting
                            ^
src/external/glad.h:2405:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
^
src/external/glad.h:2406:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
^
src/external/glad.h:2407:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *GLDEBUGPROCKHR)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
^
src/external/glad.h:2408:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar *message,void *userParam);
^
src/external/glad.h:2411:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *GLVULKANPROCNV)(void);
^
src/external/glad.h:2680:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLACCUMXOESPROC)(GLenum op, GLfixed value);
^
src/external/glad.h:2681:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLACTIVESHADERPROGRAMPROC)(GLuint pipeline, GLuint program);
^
src/external/glad.h:2682:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLACTIVETEXTUREPROC)(GLenum texture);
^
src/external/glad.h:2683:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLACTIVETEXTUREARBPROC)(GLenum texture);
^
src/external/glad.h:2684:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLALPHAFUNCXOESPROC)(GLenum func, GLfixed ref);
^
src/external/glad.h:2685:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLATTACHOBJECTARBPROC)(GLhandleARB containerObj, GLhandleARB obj);
^
src/external/glad.h:2686:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLATTACHSHADERPROC)(GLuint program, GLuint shader);
^
src/external/glad.h:2687:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBEGINCONDITIONALRENDERPROC)(GLuint id, GLenum mode);
^
src/external/glad.h:2688:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBEGINQUERYPROC)(GLenum target, GLuint id);
^
src/external/glad.h:2689:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBEGINQUERYARBPROC)(GLenum target, GLuint id);
^
src/external/glad.h:2690:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBEGINQUERYINDEXEDPROC)(GLenum target, GLuint index, GLuint id);
^
src/external/glad.h:2691:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBEGINTRANSFORMFEEDBACKPROC)(GLenum primitiveMode);
^
src/external/glad.h:2692:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBINDATTRIBLOCATIONPROC)(GLuint program, GLuint index, const GLchar * name);
^
src/external/glad.h:2693:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBINDATTRIBLOCATIONARBPROC)(GLhandleARB programObj, GLuint index, const GLcharARB * name);
^
src/external/glad.h:2694:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBINDBUFFERPROC)(GLenum target, GLuint buffer);
^
src/external/glad.h:2695:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBINDBUFFERARBPROC)(GLenum target, GLuint buffer);
^
src/external/glad.h:2696:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBINDBUFFERBASEPROC)(GLenum target, GLuint index, GLuint buffer);
^
src/external/glad.h:2697:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBINDBUFFERRANGEPROC)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
^
src/external/glad.h:2698:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBINDBUFFERSBASEPROC)(GLenum target, GLuint first, GLsizei count, const GLuint * buffers);
^
src/external/glad.h:2699:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBINDBUFFERSRANGEPROC)(GLenum target, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizeiptr * sizes);
^
src/external/glad.h:2700:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBINDFRAGDATALOCATIONPROC)(GLuint program, GLuint color, const GLchar * name);
^
src/external/glad.h:2701:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)(GLuint program, GLuint colorNumber, GLuint index, const GLchar * name);
^
src/external/glad.h:2702:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBINDFRAMEBUFFERPROC)(GLenum target, GLuint framebuffer);
^
src/external/glad.h:2703:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBINDFRAMEBUFFEREXTPROC)(GLenum target, GLuint framebuffer);
^
src/external/glad.h:2704:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBINDIMAGETEXTUREPROC)(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
^
src/external/glad.h:2705:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBINDIMAGETEXTURESPROC)(GLuint first, GLsizei count, const GLuint * textures);
^
src/external/glad.h:2706:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBINDPROGRAMARBPROC)(GLenum target, GLuint program);
^
src/external/glad.h:2707:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBINDPROGRAMPIPELINEPROC)(GLuint pipeline);
^
src/external/glad.h:2708:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBINDRENDERBUFFERPROC)(GLenum target, GLuint renderbuffer);
^
src/external/glad.h:2709:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBINDRENDERBUFFEREXTPROC)(GLenum target, GLuint renderbuffer);
^
src/external/glad.h:2710:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBINDSAMPLERPROC)(GLuint unit, GLuint sampler);
^
src/external/glad.h:2711:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBINDSAMPLERSPROC)(GLuint first, GLsizei count, const GLuint * samplers);
^
src/external/glad.h:2712:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBINDTEXTUREPROC)(GLenum target, GLuint texture);
^
src/external/glad.h:2713:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBINDTEXTUREUNITPROC)(GLuint unit, GLuint texture);
^
src/external/glad.h:2714:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBINDTEXTURESPROC)(GLuint first, GLsizei count, const GLuint * textures);
^
src/external/glad.h:2715:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBINDTRANSFORMFEEDBACKPROC)(GLenum target, GLuint id);
^
src/external/glad.h:2716:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBINDVERTEXARRAYPROC)(GLuint array);
^
src/external/glad.h:2717:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBINDVERTEXBUFFERPROC)(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
^
src/external/glad.h:2718:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBINDVERTEXBUFFERSPROC)(GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides);
^
src/external/glad.h:2719:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBITMAPXOESPROC)(GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte * bitmap);
^
src/external/glad.h:2720:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBLENDCOLORPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
^
src/external/glad.h:2721:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBLENDCOLORXOESPROC)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
^
src/external/glad.h:2722:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONPROC)(GLenum mode);
^
src/external/glad.h:2723:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONSEPARATEPROC)(GLenum modeRGB, GLenum modeAlpha);
^
src/external/glad.h:2724:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONSEPARATEIPROC)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
^
src/external/glad.h:2725:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONSEPARATEIARBPROC)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
^
src/external/glad.h:2726:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONIPROC)(GLuint buf, GLenum mode);
^
src/external/glad.h:2727:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBLENDEQUATIONIARBPROC)(GLuint buf, GLenum mode);
^
src/external/glad.h:2728:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCPROC)(GLenum sfactor, GLenum dfactor);
^
src/external/glad.h:2729:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCSEPARATEPROC)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
^
src/external/glad.h:2730:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCSEPARATEIPROC)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
^
src/external/glad.h:2731:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCSEPARATEIARBPROC)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
^
src/external/glad.h:2732:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCIPROC)(GLuint buf, GLenum src, GLenum dst);
^
src/external/glad.h:2733:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBLENDFUNCIARBPROC)(GLuint buf, GLenum src, GLenum dst);
^
src/external/glad.h:2734:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBLITFRAMEBUFFERPROC)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
^
src/external/glad.h:2735:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBLITFRAMEBUFFEREXTPROC)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
^
src/external/glad.h:2736:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBLITNAMEDFRAMEBUFFERPROC)(GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
^
src/external/glad.h:2737:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBUFFERDATAPROC)(GLenum target, GLsizeiptr size, const void * data, GLenum usage);
^
src/external/glad.h:2738:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBUFFERDATAARBPROC)(GLenum target, GLsizeiptrARB size, const void * data, GLenum usage);
^
src/external/glad.h:2739:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBUFFERSTORAGEPROC)(GLenum target, GLsizeiptr size, const void * data, GLbitfield flags);
^
src/external/glad.h:2740:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBUFFERSUBDATAPROC)(GLenum target, GLintptr offset, GLsizeiptr size, const void * data);
^
src/external/glad.h:2741:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLBUFFERSUBDATAARBPROC)(GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void * data);
^
src/external/glad.h:2742:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLenum (GLAD_API_PTR *PFNGLCHECKFRAMEBUFFERSTATUSPROC)(GLenum target);
^
src/external/glad.h:2743:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLenum (GLAD_API_PTR *PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC)(GLenum target);
^
src/external/glad.h:2744:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLenum (GLAD_API_PTR *PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC)(GLuint framebuffer, GLenum target);
^
src/external/glad.h:2745:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCLAMPCOLORPROC)(GLenum target, GLenum clamp);
^
src/external/glad.h:2746:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCLAMPCOLORARBPROC)(GLenum target, GLenum clamp);
^
src/external/glad.h:2747:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCLEARPROC)(GLbitfield mask);
^
src/external/glad.h:2748:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCLEARACCUMXOESPROC)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
^
src/external/glad.h:2749:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCLEARBUFFERDATAPROC)(GLenum target, GLenum internalformat, GLenum format, GLenum type, const void * data);
^
src/external/glad.h:2750:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCLEARBUFFERSUBDATAPROC)(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
^
src/external/glad.h:2751:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCLEARBUFFERFIPROC)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
^
src/external/glad.h:2752:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCLEARBUFFERFVPROC)(GLenum buffer, GLint drawbuffer, const GLfloat * value);
^
src/external/glad.h:2753:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCLEARBUFFERIVPROC)(GLenum buffer, GLint drawbuffer, const GLint * value);
^
src/external/glad.h:2754:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCLEARBUFFERUIVPROC)(GLenum buffer, GLint drawbuffer, const GLuint * value);
^
src/external/glad.h:2755:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCLEARCOLORPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
^
src/external/glad.h:2756:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCLEARCOLORXOESPROC)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
^
src/external/glad.h:2757:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCLEARDEPTHPROC)(GLdouble depth);
^
src/external/glad.h:2758:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCLEARDEPTHFPROC)(GLfloat d);
^
src/external/glad.h:2759:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCLEARDEPTHXOESPROC)(GLfixed depth);
^
src/external/glad.h:2760:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCLEARNAMEDBUFFERDATAPROC)(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void * data);
^
src/external/glad.h:2761:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCLEARNAMEDBUFFERSUBDATAPROC)(GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
^
src/external/glad.h:2762:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCLEARNAMEDFRAMEBUFFERFIPROC)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
^
src/external/glad.h:2763:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCLEARNAMEDFRAMEBUFFERFVPROC)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat * value);
^
src/external/glad.h:2764:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCLEARNAMEDFRAMEBUFFERIVPROC)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint * value);
^
src/external/glad.h:2765:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint * value);
^
src/external/glad.h:2766:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCLEARSTENCILPROC)(GLint s);
^
src/external/glad.h:2767:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCLEARTEXIMAGEPROC)(GLuint texture, GLint level, GLenum format, GLenum type, const void * data);
^
src/external/glad.h:2768:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCLEARTEXSUBIMAGEPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * data);
^
src/external/glad.h:2769:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCLIENTACTIVETEXTUREARBPROC)(GLenum texture);
^
src/external/glad.h:2770:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLenum (GLAD_API_PTR *PFNGLCLIENTWAITSYNCPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);
^
src/external/glad.h:2771:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCLIPPLANEXOESPROC)(GLenum plane, const GLfixed * equation);
^
src/external/glad.h:2772:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOLOR3XOESPROC)(GLfixed red, GLfixed green, GLfixed blue);
^
src/external/glad.h:2773:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOLOR3XVOESPROC)(const GLfixed * components);
^
src/external/glad.h:2774:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOLOR4XOESPROC)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
^
src/external/glad.h:2775:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOLOR4XVOESPROC)(const GLfixed * components);
^
src/external/glad.h:2776:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOLORMASKPROC)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
^
src/external/glad.h:2777:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOLORMASKIPROC)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
^
src/external/glad.h:2778:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOMPILESHADERPROC)(GLuint shader);
^
src/external/glad.h:2779:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOMPILESHADERARBPROC)(GLhandleARB shaderObj);
^
src/external/glad.h:2780:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOMPILESHADERINCLUDEARBPROC)(GLuint shader, GLsizei count, const GLchar *const* path, const GLint * length);
^
src/external/glad.h:2781:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE1DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data);
^
src/external/glad.h:2782:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE1DARBPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data);
^
src/external/glad.h:2783:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE2DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
^
src/external/glad.h:2784:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE2DARBPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
^
src/external/glad.h:2785:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE3DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
^
src/external/glad.h:2786:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXIMAGE3DARBPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
^
src/external/glad.h:2787:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
^
src/external/glad.h:2788:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
^
src/external/glad.h:2789:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
^
src/external/glad.h:2790:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
^
src/external/glad.h:2791:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
^
src/external/glad.h:2792:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
^
src/external/glad.h:2793:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
^
src/external/glad.h:2794:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
^
src/external/glad.h:2795:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
^
src/external/glad.h:2796:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCONVOLUTIONPARAMETERXOESPROC)(GLenum target, GLenum pname, GLfixed param);
^
src/external/glad.h:2797:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCONVOLUTIONPARAMETERXVOESPROC)(GLenum target, GLenum pname, const GLfixed * params);
^
src/external/glad.h:2798:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOPYBUFFERSUBDATAPROC)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
^
src/external/glad.h:2799:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOPYIMAGESUBDATAPROC)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
^
src/external/glad.h:2800:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOPYNAMEDBUFFERSUBDATAPROC)(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
^
src/external/glad.h:2801:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOPYTEXIMAGE1DPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
^
src/external/glad.h:2802:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOPYTEXIMAGE2DPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
^
src/external/glad.h:2803:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
^
src/external/glad.h:2804:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
^
src/external/glad.h:2805:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOPYTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
^
src/external/glad.h:2806:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOPYTEXTURESUBIMAGE1DPROC)(GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
^
src/external/glad.h:2807:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOPYTEXTURESUBIMAGE2DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
^
src/external/glad.h:2808:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCOPYTEXTURESUBIMAGE3DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
^
src/external/glad.h:2809:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCREATEBUFFERSPROC)(GLsizei n, GLuint * buffers);
^
src/external/glad.h:2810:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCREATEFRAMEBUFFERSPROC)(GLsizei n, GLuint * framebuffers);
^
src/external/glad.h:2811:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLuint (GLAD_API_PTR *PFNGLCREATEPROGRAMPROC)(void);
^
src/external/glad.h:2812:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLhandleARB (GLAD_API_PTR *PFNGLCREATEPROGRAMOBJECTARBPROC)(void);
^
src/external/glad.h:2813:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCREATEPROGRAMPIPELINESPROC)(GLsizei n, GLuint * pipelines);
^
src/external/glad.h:2814:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCREATEQUERIESPROC)(GLenum target, GLsizei n, GLuint * ids);
^
src/external/glad.h:2815:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCREATERENDERBUFFERSPROC)(GLsizei n, GLuint * renderbuffers);
^
src/external/glad.h:2816:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCREATESAMPLERSPROC)(GLsizei n, GLuint * samplers);
^
src/external/glad.h:2817:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLuint (GLAD_API_PTR *PFNGLCREATESHADERPROC)(GLenum type);
^
src/external/glad.h:2818:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLhandleARB (GLAD_API_PTR *PFNGLCREATESHADEROBJECTARBPROC)(GLenum shaderType);
^
src/external/glad.h:2819:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLuint (GLAD_API_PTR *PFNGLCREATESHADERPROGRAMVPROC)(GLenum type, GLsizei count, const GLchar *const* strings);
^
src/external/glad.h:2820:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCREATETEXTURESPROC)(GLenum target, GLsizei n, GLuint * textures);
^
src/external/glad.h:2821:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCREATETRANSFORMFEEDBACKSPROC)(GLsizei n, GLuint * ids);
^
src/external/glad.h:2822:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCREATEVERTEXARRAYSPROC)(GLsizei n, GLuint * arrays);
^
src/external/glad.h:2823:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLCULLFACEPROC)(GLenum mode);
^
src/external/glad.h:2824:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGECALLBACKPROC)(GLDEBUGPROC callback, const void * userParam);
^
src/external/glad.h:2825:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGECALLBACKARBPROC)(GLDEBUGPROCARB callback, const void * userParam);
^
src/external/glad.h:2826:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGECONTROLPROC)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
^
src/external/glad.h:2827:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGECONTROLARBPROC)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
^
src/external/glad.h:2828:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGEINSERTPROC)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
^
src/external/glad.h:2829:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDEBUGMESSAGEINSERTARBPROC)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
^
src/external/glad.h:2830:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDELETEBUFFERSPROC)(GLsizei n, const GLuint * buffers);
^
src/external/glad.h:2831:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDELETEBUFFERSARBPROC)(GLsizei n, const GLuint * buffers);
^
src/external/glad.h:2832:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDELETEFRAMEBUFFERSPROC)(GLsizei n, const GLuint * framebuffers);
^
src/external/glad.h:2833:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDELETEFRAMEBUFFERSEXTPROC)(GLsizei n, const GLuint * framebuffers);
^
src/external/glad.h:2834:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDELETENAMEDSTRINGARBPROC)(GLint namelen, const GLchar * name);
^
src/external/glad.h:2835:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDELETEOBJECTARBPROC)(GLhandleARB obj);
^
src/external/glad.h:2836:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDELETEPROGRAMPROC)(GLuint program);
^
src/external/glad.h:2837:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDELETEPROGRAMPIPELINESPROC)(GLsizei n, const GLuint * pipelines);
^
src/external/glad.h:2838:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDELETEPROGRAMSARBPROC)(GLsizei n, const GLuint * programs);
^
src/external/glad.h:2839:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDELETEQUERIESPROC)(GLsizei n, const GLuint * ids);
^
src/external/glad.h:2840:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDELETEQUERIESARBPROC)(GLsizei n, const GLuint * ids);
^
src/external/glad.h:2841:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDELETERENDERBUFFERSPROC)(GLsizei n, const GLuint * renderbuffers);
^
src/external/glad.h:2842:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDELETERENDERBUFFERSEXTPROC)(GLsizei n, const GLuint * renderbuffers);
^
src/external/glad.h:2843:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDELETESAMPLERSPROC)(GLsizei count, const GLuint * samplers);
^
src/external/glad.h:2844:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDELETESHADERPROC)(GLuint shader);
^
src/external/glad.h:2845:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDELETESYNCPROC)(GLsync sync);
^
src/external/glad.h:2846:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDELETETEXTURESPROC)(GLsizei n, const GLuint * textures);
^
src/external/glad.h:2847:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDELETETRANSFORMFEEDBACKSPROC)(GLsizei n, const GLuint * ids);
^
src/external/glad.h:2848:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDELETEVERTEXARRAYSPROC)(GLsizei n, const GLuint * arrays);
^
src/external/glad.h:2849:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDEPTHFUNCPROC)(GLenum func);
^
src/external/glad.h:2850:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDEPTHMASKPROC)(GLboolean flag);
^
src/external/glad.h:2851:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEPROC)(GLdouble n, GLdouble f);
^
src/external/glad.h:2852:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEARRAYVPROC)(GLuint first, GLsizei count, const GLdouble * v);
^
src/external/glad.h:2853:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEINDEXEDPROC)(GLuint index, GLdouble n, GLdouble f);
^
src/external/glad.h:2854:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEFPROC)(GLfloat n, GLfloat f);
^
src/external/glad.h:2855:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDEPTHRANGEXOESPROC)(GLfixed n, GLfixed f);
^
src/external/glad.h:2856:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDETACHOBJECTARBPROC)(GLhandleARB containerObj, GLhandleARB attachedObj);
^
src/external/glad.h:2857:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDETACHSHADERPROC)(GLuint program, GLuint shader);
^
src/external/glad.h:2858:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDISABLEPROC)(GLenum cap);
^
src/external/glad.h:2859:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDISABLEVERTEXARRAYATTRIBPROC)(GLuint vaobj, GLuint index);
^
src/external/glad.h:2860:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDISABLEVERTEXATTRIBARRAYPROC)(GLuint index);
^
src/external/glad.h:2861:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDISABLEVERTEXATTRIBARRAYARBPROC)(GLuint index);
^
src/external/glad.h:2862:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDISABLEIPROC)(GLenum target, GLuint index);
^
src/external/glad.h:2863:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDISPATCHCOMPUTEPROC)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
^
src/external/glad.h:2864:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);
^
src/external/glad.h:2865:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDISPATCHCOMPUTEINDIRECTPROC)(GLintptr indirect);
^
src/external/glad.h:2866:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSPROC)(GLenum mode, GLint first, GLsizei count);
^
src/external/glad.h:2867:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSINDIRECTPROC)(GLenum mode, const void * indirect);
^
src/external/glad.h:2868:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSINSTANCEDPROC)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
^
src/external/glad.h:2869:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSINSTANCEDARBPROC)(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
^
src/external/glad.h:2870:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
^
src/external/glad.h:2871:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDRAWARRAYSINSTANCEDEXTPROC)(GLenum mode, GLint start, GLsizei count, GLsizei primcount);
^
src/external/glad.h:2872:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDRAWBUFFERPROC)(GLenum buf);
^
src/external/glad.h:2873:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDRAWBUFFERSPROC)(GLsizei n, const GLenum * bufs);
^
src/external/glad.h:2874:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDRAWBUFFERSARBPROC)(GLsizei n, const GLenum * bufs);
^
src/external/glad.h:2875:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices);
^
src/external/glad.h:2876:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSBASEVERTEXPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
^
src/external/glad.h:2877:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINDIRECTPROC)(GLenum mode, GLenum type, const void * indirect);
^
src/external/glad.h:2878:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount);
^
src/external/glad.h:2879:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDARBPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
^
src/external/glad.h:2880:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLuint baseinstance);
^
src/external/glad.h:2881:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
^
src/external/glad.h:2882:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
^
src/external/glad.h:2883:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDRAWELEMENTSINSTANCEDEXTPROC)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
^
src/external/glad.h:2884:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDRAWRANGEELEMENTSPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
^
src/external/glad.h:2885:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
^
src/external/glad.h:2886:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDRAWTRANSFORMFEEDBACKPROC)(GLenum mode, GLuint id);
^
src/external/glad.h:2887:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC)(GLenum mode, GLuint id, GLsizei instancecount);
^
src/external/glad.h:2888:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC)(GLenum mode, GLuint id, GLuint stream);
^
src/external/glad.h:2889:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC)(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
^
src/external/glad.h:2890:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLENABLEPROC)(GLenum cap);
^
src/external/glad.h:2891:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLENABLEVERTEXARRAYATTRIBPROC)(GLuint vaobj, GLuint index);
^
src/external/glad.h:2892:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLENABLEVERTEXATTRIBARRAYPROC)(GLuint index);
^
src/external/glad.h:2893:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLENABLEVERTEXATTRIBARRAYARBPROC)(GLuint index);
^
src/external/glad.h:2894:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLENABLEIPROC)(GLenum target, GLuint index);
^
src/external/glad.h:2895:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLENDCONDITIONALRENDERPROC)(void);
^
src/external/glad.h:2896:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLENDQUERYPROC)(GLenum target);
^
src/external/glad.h:2897:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLENDQUERYARBPROC)(GLenum target);
^
src/external/glad.h:2898:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLENDQUERYINDEXEDPROC)(GLenum target, GLuint index);
^
src/external/glad.h:2899:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLENDTRANSFORMFEEDBACKPROC)(void);
^
src/external/glad.h:2900:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLEVALCOORD1XOESPROC)(GLfixed u);
^
src/external/glad.h:2901:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLEVALCOORD1XVOESPROC)(const GLfixed * coords);
^
src/external/glad.h:2902:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLEVALCOORD2XOESPROC)(GLfixed u, GLfixed v);
^
src/external/glad.h:2903:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLEVALCOORD2XVOESPROC)(const GLfixed * coords);
^
src/external/glad.h:2904:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLEVALUATEDEPTHVALUESARBPROC)(void);
^
src/external/glad.h:2905:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLFEEDBACKBUFFERXOESPROC)(GLsizei n, GLenum type, const GLfixed * buffer);
^
src/external/glad.h:2906:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLsync (GLAD_API_PTR *PFNGLFENCESYNCPROC)(GLenum condition, GLbitfield flags);
^
src/external/glad.h:2907:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLFINISHPROC)(void);
^
src/external/glad.h:2908:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLFLUSHPROC)(void);
^
src/external/glad.h:2909:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLFLUSHMAPPEDBUFFERRANGEPROC)(GLenum target, GLintptr offset, GLsizeiptr length);
^
src/external/glad.h:2910:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC)(GLuint buffer, GLintptr offset, GLsizeiptr length);
^
src/external/glad.h:2911:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLFOGCOORDPOINTEREXTPROC)(GLenum type, GLsizei stride, const void * pointer);
^
src/external/glad.h:2912:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLFOGCOORDDEXTPROC)(GLdouble coord);
^
src/external/glad.h:2913:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLFOGCOORDDVEXTPROC)(const GLdouble * coord);
^
src/external/glad.h:2914:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLFOGCOORDFEXTPROC)(GLfloat coord);
^
src/external/glad.h:2915:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLFOGCOORDFVEXTPROC)(const GLfloat * coord);
^
src/external/glad.h:2916:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLFOGXOESPROC)(GLenum pname, GLfixed param);
^
src/external/glad.h:2917:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLFOGXVOESPROC)(GLenum pname, const GLfixed * param);
^
src/external/glad.h:2918:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERPARAMETERIPROC)(GLenum target, GLenum pname, GLint param);
^
src/external/glad.h:2919:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERRENDERBUFFERPROC)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
^
src/external/glad.h:2920:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
^
src/external/glad.h:2921:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC)(GLenum target, GLuint start, GLsizei count, const GLfloat * v);
^
src/external/glad.h:2922:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTUREPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level);
^
src/external/glad.h:2923:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE1DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
^
src/external/glad.h:2924:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE1DEXTPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
^
src/external/glad.h:2925:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE2DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
^
src/external/glad.h:2926:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE2DEXTPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
^
src/external/glad.h:2927:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE3DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
^
src/external/glad.h:2928:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURE3DEXTPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
^
src/external/glad.h:2929:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTUREARBPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level);
^
src/external/glad.h:2930:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTUREFACEARBPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
^
src/external/glad.h:2931:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURELAYERPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
^
src/external/glad.h:2932:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLFRAMEBUFFERTEXTURELAYERARBPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
^
src/external/glad.h:2933:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLFRONTFACEPROC)(GLenum mode);
^
src/external/glad.h:2934:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLFRUSTUMXOESPROC)(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
^
src/external/glad.h:2935:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGENBUFFERSPROC)(GLsizei n, GLuint * buffers);
^
src/external/glad.h:2936:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGENBUFFERSARBPROC)(GLsizei n, GLuint * buffers);
^
src/external/glad.h:2937:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGENFRAMEBUFFERSPROC)(GLsizei n, GLuint * framebuffers);
^
src/external/glad.h:2938:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGENFRAMEBUFFERSEXTPROC)(GLsizei n, GLuint * framebuffers);
^
src/external/glad.h:2939:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGENPROGRAMPIPELINESPROC)(GLsizei n, GLuint * pipelines);
^
src/external/glad.h:2940:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGENPROGRAMSARBPROC)(GLsizei n, GLuint * programs);
^
src/external/glad.h:2941:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGENQUERIESPROC)(GLsizei n, GLuint * ids);
^
src/external/glad.h:2942:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGENQUERIESARBPROC)(GLsizei n, GLuint * ids);
^
src/external/glad.h:2943:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGENRENDERBUFFERSPROC)(GLsizei n, GLuint * renderbuffers);
^
src/external/glad.h:2944:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGENRENDERBUFFERSEXTPROC)(GLsizei n, GLuint * renderbuffers);
^
src/external/glad.h:2945:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGENSAMPLERSPROC)(GLsizei count, GLuint * samplers);
^
src/external/glad.h:2946:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGENTEXTURESPROC)(GLsizei n, GLuint * textures);
^
src/external/glad.h:2947:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGENTRANSFORMFEEDBACKSPROC)(GLsizei n, GLuint * ids);
^
src/external/glad.h:2948:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGENVERTEXARRAYSPROC)(GLsizei n, GLuint * arrays);
^
src/external/glad.h:2949:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGENERATEMIPMAPPROC)(GLenum target);
^
src/external/glad.h:2950:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGENERATEMIPMAPEXTPROC)(GLenum target);
^
src/external/glad.h:2951:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGENERATETEXTUREMIPMAPPROC)(GLuint texture);
^
src/external/glad.h:2952:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC)(GLuint program, GLuint bufferIndex, GLenum pname, GLint * params);
^
src/external/glad.h:2953:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETACTIVEATTRIBPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
^
src/external/glad.h:2954:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETACTIVEATTRIBARBPROC)(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name);
^
src/external/glad.h:2955:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETACTIVESUBROUTINENAMEPROC)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
^
src/external/glad.h:2956:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
^
src/external/glad.h:2957:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC)(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint * values);
^
src/external/glad.h:2958:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
^
src/external/glad.h:2959:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMARBPROC)(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name);
^
src/external/glad.h:2960:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformBlockName);
^
src/external/glad.h:2961:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMBLOCKIVPROC)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint * params);
^
src/external/glad.h:2962:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMNAMEPROC)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformName);
^
src/external/glad.h:2963:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETACTIVEUNIFORMSIVPROC)(GLuint program, GLsizei uniformCount, const GLuint * uniformIndices, GLenum pname, GLint * params);
^
src/external/glad.h:2964:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETATTACHEDOBJECTSARBPROC)(GLhandleARB containerObj, GLsizei maxCount, GLsizei * count, GLhandleARB * obj);
^
src/external/glad.h:2965:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETATTACHEDSHADERSPROC)(GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders);
^
src/external/glad.h:2966:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLint (GLAD_API_PTR *PFNGLGETATTRIBLOCATIONPROC)(GLuint program, const GLchar * name);
^
src/external/glad.h:2967:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLint (GLAD_API_PTR *PFNGLGETATTRIBLOCATIONARBPROC)(GLhandleARB programObj, const GLcharARB * name);
^
src/external/glad.h:2968:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETBOOLEANI_VPROC)(GLenum target, GLuint index, GLboolean * data);
^
src/external/glad.h:2969:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETBOOLEANVPROC)(GLenum pname, GLboolean * data);
^
src/external/glad.h:2970:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETBUFFERPARAMETERI64VPROC)(GLenum target, GLenum pname, GLint64 * params);
^
src/external/glad.h:2971:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint * params);
^
src/external/glad.h:2972:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETBUFFERPARAMETERIVARBPROC)(GLenum target, GLenum pname, GLint * params);
^
src/external/glad.h:2973:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETBUFFERPOINTERVPROC)(GLenum target, GLenum pname, void ** params);
^
src/external/glad.h:2974:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETBUFFERPOINTERVARBPROC)(GLenum target, GLenum pname, void ** params);
^
src/external/glad.h:2975:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETBUFFERSUBDATAPROC)(GLenum target, GLintptr offset, GLsizeiptr size, void * data);
^
src/external/glad.h:2976:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETBUFFERSUBDATAARBPROC)(GLenum target, GLintptrARB offset, GLsizeiptrARB size, void * data);
^
src/external/glad.h:2977:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETCLIPPLANEXOESPROC)(GLenum plane, GLfixed * equation);
^
src/external/glad.h:2978:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETCOMPRESSEDTEXIMAGEPROC)(GLenum target, GLint level, void * img);
^
src/external/glad.h:2979:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETCOMPRESSEDTEXIMAGEARBPROC)(GLenum target, GLint level, void * img);
^
src/external/glad.h:2980:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC)(GLuint texture, GLint level, GLsizei bufSize, void * pixels);
^
src/external/glad.h:2981:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void * pixels);
^
src/external/glad.h:2982:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETCONVOLUTIONPARAMETERXVOESPROC)(GLenum target, GLenum pname, GLfixed * params);
^
src/external/glad.h:2983:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLuint (GLAD_API_PTR *PFNGLGETDEBUGMESSAGELOGPROC)(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
^
src/external/glad.h:2984:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLuint (GLAD_API_PTR *PFNGLGETDEBUGMESSAGELOGARBPROC)(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
^
src/external/glad.h:2985:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETDOUBLEI_VPROC)(GLenum target, GLuint index, GLdouble * data);
^
src/external/glad.h:2986:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETDOUBLEVPROC)(GLenum pname, GLdouble * data);
^
src/external/glad.h:2987:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLenum (GLAD_API_PTR *PFNGLGETERRORPROC)(void);
^
src/external/glad.h:2988:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETFIXEDVOESPROC)(GLenum pname, GLfixed * params);
^
src/external/glad.h:2989:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETFLOATI_VPROC)(GLenum target, GLuint index, GLfloat * data);
^
src/external/glad.h:2990:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETFLOATVPROC)(GLenum pname, GLfloat * data);
^
src/external/glad.h:2991:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLint (GLAD_API_PTR *PFNGLGETFRAGDATAINDEXPROC)(GLuint program, const GLchar * name);
^
src/external/glad.h:2992:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLint (GLAD_API_PTR *PFNGLGETFRAGDATALOCATIONPROC)(GLuint program, const GLchar * name);
^
src/external/glad.h:2993:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(GLenum target, GLenum attachment, GLenum pname, GLint * params);
^
src/external/glad.h:2994:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC)(GLenum target, GLenum attachment, GLenum pname, GLint * params);
^
src/external/glad.h:2995:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETFRAMEBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint * params);
^
src/external/glad.h:2996:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLhandleARB (GLAD_API_PTR *PFNGLGETHANDLEARBPROC)(GLenum pname);
^
src/external/glad.h:2997:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETHISTOGRAMPARAMETERXVOESPROC)(GLenum target, GLenum pname, GLfixed * params);
^
src/external/glad.h:2998:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETINFOLOGARBPROC)(GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * infoLog);
^
src/external/glad.h:2999:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETINTEGER64I_VPROC)(GLenum target, GLuint index, GLint64 * data);
^
src/external/glad.h:3000:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETINTEGER64VPROC)(GLenum pname, GLint64 * data);
^
src/external/glad.h:3001:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETINTEGERI_VPROC)(GLenum target, GLuint index, GLint * data);
^
src/external/glad.h:3002:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETINTEGERVPROC)(GLenum pname, GLint * data);
^
src/external/glad.h:3003:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETINTERNALFORMATI64VPROC)(GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint64 * params);
^
src/external/glad.h:3004:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETINTERNALFORMATIVPROC)(GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint * params);
^
src/external/glad.h:3005:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETLIGHTXOESPROC)(GLenum light, GLenum pname, GLfixed * params);
^
src/external/glad.h:3006:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETMAPXVOESPROC)(GLenum target, GLenum query, GLfixed * v);
^
src/external/glad.h:3007:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETMATERIALXOESPROC)(GLenum face, GLenum pname, GLfixed param);
^
src/external/glad.h:3008:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETMULTISAMPLEFVPROC)(GLenum pname, GLuint index, GLfloat * val);
^
src/external/glad.h:3009:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETNAMEDBUFFERPARAMETERI64VPROC)(GLuint buffer, GLenum pname, GLint64 * params);
^
src/external/glad.h:3010:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETNAMEDBUFFERPARAMETERIVPROC)(GLuint buffer, GLenum pname, GLint * params);
^
src/external/glad.h:3011:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETNAMEDBUFFERPOINTERVPROC)(GLuint buffer, GLenum pname, void ** params);
^
src/external/glad.h:3012:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETNAMEDBUFFERSUBDATAPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, void * data);
^
src/external/glad.h:3013:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(GLuint framebuffer, GLenum attachment, GLenum pname, GLint * params);
^
src/external/glad.h:3014:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC)(GLuint framebuffer, GLenum pname, GLint * param);
^
src/external/glad.h:3015:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC)(GLuint renderbuffer, GLenum pname, GLint * params);
^
src/external/glad.h:3016:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETNAMEDSTRINGARBPROC)(GLint namelen, const GLchar * name, GLsizei bufSize, GLint * stringlen, GLchar * string);
^
src/external/glad.h:3017:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETNAMEDSTRINGIVARBPROC)(GLint namelen, const GLchar * name, GLenum pname, GLint * params);
^
src/external/glad.h:3018:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETOBJECTLABELPROC)(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
^
src/external/glad.h:3019:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETOBJECTPARAMETERFVARBPROC)(GLhandleARB obj, GLenum pname, GLfloat * params);
^
src/external/glad.h:3020:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETOBJECTPARAMETERIVARBPROC)(GLhandleARB obj, GLenum pname, GLint * params);
^
src/external/glad.h:3021:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETOBJECTPTRLABELPROC)(const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
^
src/external/glad.h:3022:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETPIXELMAPXVPROC)(GLenum map, GLint size, GLfixed * values);
^
src/external/glad.h:3023:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETPOINTERVPROC)(GLenum pname, void ** params);
^
src/external/glad.h:3024:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMBINARYPROC)(GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
^
src/external/glad.h:3025:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMENVPARAMETERDVARBPROC)(GLenum target, GLuint index, GLdouble * params);
^
src/external/glad.h:3026:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMENVPARAMETERFVARBPROC)(GLenum target, GLuint index, GLfloat * params);
^
src/external/glad.h:3027:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMINFOLOGPROC)(GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
^
src/external/glad.h:3028:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMINTERFACEIVPROC)(GLuint program, GLenum programInterface, GLenum pname, GLint * params);
^
src/external/glad.h:3029:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC)(GLenum target, GLuint index, GLdouble * params);
^
src/external/glad.h:3030:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC)(GLenum target, GLuint index, GLfloat * params);
^
src/external/glad.h:3031:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMPIPELINEINFOLOGPROC)(GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
^
src/external/glad.h:3032:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMPIPELINEIVPROC)(GLuint pipeline, GLenum pname, GLint * params);
^
src/external/glad.h:3033:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLuint (GLAD_API_PTR *PFNGLGETPROGRAMRESOURCEINDEXPROC)(GLuint program, GLenum programInterface, const GLchar * name);
^
src/external/glad.h:3034:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLint (GLAD_API_PTR *PFNGLGETPROGRAMRESOURCELOCATIONPROC)(GLuint program, GLenum programInterface, const GLchar * name);
^
src/external/glad.h:3035:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLint (GLAD_API_PTR *PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC)(GLuint program, GLenum programInterface, const GLchar * name);
^
src/external/glad.h:3036:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMRESOURCENAMEPROC)(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
^
src/external/glad.h:3037:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMRESOURCEIVPROC)(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei count, GLsizei * length, GLint * params);
^
src/external/glad.h:3038:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMSTAGEIVPROC)(GLuint program, GLenum shadertype, GLenum pname, GLint * values);
^
src/external/glad.h:3039:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMSTRINGARBPROC)(GLenum target, GLenum pname, void * string);
^
src/external/glad.h:3040:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMIVPROC)(GLuint program, GLenum pname, GLint * params);
^
src/external/glad.h:3041:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETPROGRAMIVARBPROC)(GLenum target, GLenum pname, GLint * params);
^
src/external/glad.h:3042:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETQUERYBUFFEROBJECTI64VPROC)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
^
src/external/glad.h:3043:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETQUERYBUFFEROBJECTIVPROC)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
^
src/external/glad.h:3044:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETQUERYBUFFEROBJECTUI64VPROC)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
^
src/external/glad.h:3045:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETQUERYBUFFEROBJECTUIVPROC)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
^
src/external/glad.h:3046:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETQUERYINDEXEDIVPROC)(GLenum target, GLuint index, GLenum pname, GLint * params);
^
src/external/glad.h:3047:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTI64VPROC)(GLuint id, GLenum pname, GLint64 * params);
^
src/external/glad.h:3048:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTIVPROC)(GLuint id, GLenum pname, GLint * params);
^
src/external/glad.h:3049:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTIVARBPROC)(GLuint id, GLenum pname, GLint * params);
^
src/external/glad.h:3050:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTUI64VPROC)(GLuint id, GLenum pname, GLuint64 * params);
^
src/external/glad.h:3051:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTUIVPROC)(GLuint id, GLenum pname, GLuint * params);
^
src/external/glad.h:3052:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETQUERYOBJECTUIVARBPROC)(GLuint id, GLenum pname, GLuint * params);
^
src/external/glad.h:3053:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETQUERYIVPROC)(GLenum target, GLenum pname, GLint * params);
^
src/external/glad.h:3054:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETQUERYIVARBPROC)(GLenum target, GLenum pname, GLint * params);
^
src/external/glad.h:3055:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETRENDERBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint * params);
^
src/external/glad.h:3056:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC)(GLenum target, GLenum pname, GLint * params);
^
src/external/glad.h:3057:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIIVPROC)(GLuint sampler, GLenum pname, GLint * params);
^
src/external/glad.h:3058:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIUIVPROC)(GLuint sampler, GLenum pname, GLuint * params);
^
src/external/glad.h:3059:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERFVPROC)(GLuint sampler, GLenum pname, GLfloat * params);
^
src/external/glad.h:3060:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETSAMPLERPARAMETERIVPROC)(GLuint sampler, GLenum pname, GLint * params);
^
src/external/glad.h:3061:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETSHADERINFOLOGPROC)(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
^
src/external/glad.h:3062:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETSHADERPRECISIONFORMATPROC)(GLenum shadertype, GLenum precisiontype, GLint * range, GLint * precision);
^
src/external/glad.h:3063:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETSHADERSOURCEPROC)(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source);
^
src/external/glad.h:3064:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETSHADERSOURCEARBPROC)(GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * source);
^
src/external/glad.h:3065:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETSHADERIVPROC)(GLuint shader, GLenum pname, GLint * params);
^
src/external/glad.h:3066:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef const GLubyte * (GLAD_API_PTR *PFNGLGETSTRINGPROC)(GLenum name);
^
src/external/glad.h:3067:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef const GLubyte * (GLAD_API_PTR *PFNGLGETSTRINGIPROC)(GLenum name, GLuint index);
^
src/external/glad.h:3068:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLuint (GLAD_API_PTR *PFNGLGETSUBROUTINEINDEXPROC)(GLuint program, GLenum shadertype, const GLchar * name);
^
src/external/glad.h:3069:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLint (GLAD_API_PTR *PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC)(GLuint program, GLenum shadertype, const GLchar * name);
^
src/external/glad.h:3070:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETSYNCIVPROC)(GLsync sync, GLenum pname, GLsizei count, GLsizei * length, GLint * values);
^
src/external/glad.h:3071:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETTEXENVXVOESPROC)(GLenum target, GLenum pname, GLfixed * params);
^
src/external/glad.h:3072:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETTEXGENXVOESPROC)(GLenum coord, GLenum pname, GLfixed * params);
^
src/external/glad.h:3073:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETTEXIMAGEPROC)(GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
^
src/external/glad.h:3074:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETTEXLEVELPARAMETERFVPROC)(GLenum target, GLint level, GLenum pname, GLfloat * params);
^
src/external/glad.h:3075:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETTEXLEVELPARAMETERIVPROC)(GLenum target, GLint level, GLenum pname, GLint * params);
^
src/external/glad.h:3076:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETTEXLEVELPARAMETERXVOESPROC)(GLenum target, GLint level, GLenum pname, GLfixed * params);
^
src/external/glad.h:3077:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERIIVPROC)(GLenum target, GLenum pname, GLint * params);
^
src/external/glad.h:3078:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERIUIVPROC)(GLenum target, GLenum pname, GLuint * params);
^
src/external/glad.h:3079:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERFVPROC)(GLenum target, GLenum pname, GLfloat * params);
^
src/external/glad.h:3080:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERIVPROC)(GLenum target, GLenum pname, GLint * params);
^
src/external/glad.h:3081:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETTEXPARAMETERXVOESPROC)(GLenum target, GLenum pname, GLfixed * params);
^
src/external/glad.h:3082:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETTEXTUREIMAGEPROC)(GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
^
src/external/glad.h:3083:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETTEXTURELEVELPARAMETERFVPROC)(GLuint texture, GLint level, GLenum pname, GLfloat * params);
^
src/external/glad.h:3084:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETTEXTURELEVELPARAMETERIVPROC)(GLuint texture, GLint level, GLenum pname, GLint * params);
^
src/external/glad.h:3085:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETTEXTUREPARAMETERIIVPROC)(GLuint texture, GLenum pname, GLint * params);
^
src/external/glad.h:3086:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETTEXTUREPARAMETERIUIVPROC)(GLuint texture, GLenum pname, GLuint * params);
^
src/external/glad.h:3087:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETTEXTUREPARAMETERFVPROC)(GLuint texture, GLenum pname, GLfloat * params);
^
src/external/glad.h:3088:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETTEXTUREPARAMETERIVPROC)(GLuint texture, GLenum pname, GLint * params);
^
src/external/glad.h:3089:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETTEXTURESUBIMAGEPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
^
src/external/glad.h:3090:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
^
src/external/glad.h:3091:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETTRANSFORMFEEDBACKI64_VPROC)(GLuint xfb, GLenum pname, GLuint index, GLint64 * param);
^
src/external/glad.h:3092:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETTRANSFORMFEEDBACKI_VPROC)(GLuint xfb, GLenum pname, GLuint index, GLint * param);
^
src/external/glad.h:3093:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETTRANSFORMFEEDBACKIVPROC)(GLuint xfb, GLenum pname, GLint * param);
^
src/external/glad.h:3094:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLuint (GLAD_API_PTR *PFNGLGETUNIFORMBLOCKINDEXPROC)(GLuint program, const GLchar * uniformBlockName);
^
src/external/glad.h:3095:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMINDICESPROC)(GLuint program, GLsizei uniformCount, const GLchar *const* uniformNames, GLuint * uniformIndices);
^
src/external/glad.h:3096:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLint (GLAD_API_PTR *PFNGLGETUNIFORMLOCATIONPROC)(GLuint program, const GLchar * name);
^
src/external/glad.h:3097:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLint (GLAD_API_PTR *PFNGLGETUNIFORMLOCATIONARBPROC)(GLhandleARB programObj, const GLcharARB * name);
^
src/external/glad.h:3098:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMSUBROUTINEUIVPROC)(GLenum shadertype, GLint location, GLuint * params);
^
src/external/glad.h:3099:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMDVPROC)(GLuint program, GLint location, GLdouble * params);
^
src/external/glad.h:3100:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMFVPROC)(GLuint program, GLint location, GLfloat * params);
^
src/external/glad.h:3101:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMFVARBPROC)(GLhandleARB programObj, GLint location, GLfloat * params);
^
src/external/glad.h:3102:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMI64VARBPROC)(GLuint program, GLint location, GLint64 * params);
^
src/external/glad.h:3103:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMIVPROC)(GLuint program, GLint location, GLint * params);
^
src/external/glad.h:3104:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMIVARBPROC)(GLhandleARB programObj, GLint location, GLint * params);
^
src/external/glad.h:3105:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMUI64VARBPROC)(GLuint program, GLint location, GLuint64 * params);
^
src/external/glad.h:3106:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETUNIFORMUIVPROC)(GLuint program, GLint location, GLuint * params);
^
src/external/glad.h:3107:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETVERTEXARRAYINDEXED64IVPROC)(GLuint vaobj, GLuint index, GLenum pname, GLint64 * param);
^
src/external/glad.h:3108:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETVERTEXARRAYINDEXEDIVPROC)(GLuint vaobj, GLuint index, GLenum pname, GLint * param);
^
src/external/glad.h:3109:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETVERTEXARRAYIVPROC)(GLuint vaobj, GLenum pname, GLint * param);
^
src/external/glad.h:3110:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBIIVPROC)(GLuint index, GLenum pname, GLint * params);
^
src/external/glad.h:3111:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBIUIVPROC)(GLuint index, GLenum pname, GLuint * params);
^
src/external/glad.h:3112:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBLDVPROC)(GLuint index, GLenum pname, GLdouble * params);
^
src/external/glad.h:3113:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBPOINTERVPROC)(GLuint index, GLenum pname, void ** pointer);
^
src/external/glad.h:3114:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBPOINTERVARBPROC)(GLuint index, GLenum pname, void ** pointer);
^
src/external/glad.h:3115:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBDVPROC)(GLuint index, GLenum pname, GLdouble * params);
^
src/external/glad.h:3116:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBDVARBPROC)(GLuint index, GLenum pname, GLdouble * params);
^
src/external/glad.h:3117:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBFVPROC)(GLuint index, GLenum pname, GLfloat * params);
^
src/external/glad.h:3118:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBFVARBPROC)(GLuint index, GLenum pname, GLfloat * params);
^
src/external/glad.h:3119:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBIVPROC)(GLuint index, GLenum pname, GLint * params);
^
src/external/glad.h:3120:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETVERTEXATTRIBIVARBPROC)(GLuint index, GLenum pname, GLint * params);
^
src/external/glad.h:3121:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMI64VARBPROC)(GLuint program, GLint location, GLsizei bufSize, GLint64 * params);
^
src/external/glad.h:3122:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLGETNUNIFORMUI64VARBPROC)(GLuint program, GLint location, GLsizei bufSize, GLuint64 * params);
^
src/external/glad.h:3123:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLHINTPROC)(GLenum target, GLenum mode);
^
src/external/glad.h:3124:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLINDEXXOESPROC)(GLfixed component);
^
src/external/glad.h:3125:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLINDEXXVOESPROC)(const GLfixed * component);
^
src/external/glad.h:3126:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLINVALIDATEBUFFERDATAPROC)(GLuint buffer);
^
src/external/glad.h:3127:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLINVALIDATEBUFFERSUBDATAPROC)(GLuint buffer, GLintptr offset, GLsizeiptr length);
^
src/external/glad.h:3128:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLINVALIDATEFRAMEBUFFERPROC)(GLenum target, GLsizei numAttachments, const GLenum * attachments);
^
src/external/glad.h:3129:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC)(GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments);
^
src/external/glad.h:3130:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC)(GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
^
src/external/glad.h:3131:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLINVALIDATESUBFRAMEBUFFERPROC)(GLenum target, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
^
src/external/glad.h:3132:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLINVALIDATETEXIMAGEPROC)(GLuint texture, GLint level);
^
src/external/glad.h:3133:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLINVALIDATETEXSUBIMAGEPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
^
src/external/glad.h:3134:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLboolean (GLAD_API_PTR *PFNGLISBUFFERPROC)(GLuint buffer);
^
src/external/glad.h:3135:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLboolean (GLAD_API_PTR *PFNGLISBUFFERARBPROC)(GLuint buffer);
^
src/external/glad.h:3136:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLboolean (GLAD_API_PTR *PFNGLISENABLEDPROC)(GLenum cap);
^
src/external/glad.h:3137:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLboolean (GLAD_API_PTR *PFNGLISENABLEDIPROC)(GLenum target, GLuint index);
^
src/external/glad.h:3138:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLboolean (GLAD_API_PTR *PFNGLISFRAMEBUFFERPROC)(GLuint framebuffer);
^
src/external/glad.h:3139:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLboolean (GLAD_API_PTR *PFNGLISFRAMEBUFFEREXTPROC)(GLuint framebuffer);
^
src/external/glad.h:3140:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLboolean (GLAD_API_PTR *PFNGLISNAMEDSTRINGARBPROC)(GLint namelen, const GLchar * name);
^
src/external/glad.h:3141:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLboolean (GLAD_API_PTR *PFNGLISPROGRAMPROC)(GLuint program);
^
src/external/glad.h:3142:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLboolean (GLAD_API_PTR *PFNGLISPROGRAMARBPROC)(GLuint program);
^
src/external/glad.h:3143:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLboolean (GLAD_API_PTR *PFNGLISPROGRAMPIPELINEPROC)(GLuint pipeline);
^
src/external/glad.h:3144:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLboolean (GLAD_API_PTR *PFNGLISQUERYPROC)(GLuint id);
^
src/external/glad.h:3145:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLboolean (GLAD_API_PTR *PFNGLISQUERYARBPROC)(GLuint id);
^
src/external/glad.h:3146:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLboolean (GLAD_API_PTR *PFNGLISRENDERBUFFERPROC)(GLuint renderbuffer);
^
src/external/glad.h:3147:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLboolean (GLAD_API_PTR *PFNGLISRENDERBUFFEREXTPROC)(GLuint renderbuffer);
^
src/external/glad.h:3148:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLboolean (GLAD_API_PTR *PFNGLISSAMPLERPROC)(GLuint sampler);
^
src/external/glad.h:3149:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLboolean (GLAD_API_PTR *PFNGLISSHADERPROC)(GLuint shader);
^
src/external/glad.h:3150:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLboolean (GLAD_API_PTR *PFNGLISSYNCPROC)(GLsync sync);
^
src/external/glad.h:3151:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLboolean (GLAD_API_PTR *PFNGLISTEXTUREPROC)(GLuint texture);
^
src/external/glad.h:3152:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLboolean (GLAD_API_PTR *PFNGLISTRANSFORMFEEDBACKPROC)(GLuint id);
^
src/external/glad.h:3153:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLboolean (GLAD_API_PTR *PFNGLISVERTEXARRAYPROC)(GLuint array);
^
src/external/glad.h:3154:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLLIGHTMODELXOESPROC)(GLenum pname, GLfixed param);
^
src/external/glad.h:3155:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLLIGHTMODELXVOESPROC)(GLenum pname, const GLfixed * param);
^
src/external/glad.h:3156:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLLIGHTXOESPROC)(GLenum light, GLenum pname, GLfixed param);
^
src/external/glad.h:3157:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLLIGHTXVOESPROC)(GLenum light, GLenum pname, const GLfixed * params);
^
src/external/glad.h:3158:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLLINEWIDTHPROC)(GLfloat width);
^
src/external/glad.h:3159:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLLINEWIDTHXOESPROC)(GLfixed width);
^
src/external/glad.h:3160:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLLINKPROGRAMPROC)(GLuint program);
^
src/external/glad.h:3161:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLLINKPROGRAMARBPROC)(GLhandleARB programObj);
^
src/external/glad.h:3162:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLLOADMATRIXXOESPROC)(const GLfixed * m);
^
src/external/glad.h:3163:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLLOADTRANSPOSEMATRIXDARBPROC)(const GLdouble * m);
^
src/external/glad.h:3164:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLLOADTRANSPOSEMATRIXFARBPROC)(const GLfloat * m);
^
src/external/glad.h:3165:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLLOADTRANSPOSEMATRIXXOESPROC)(const GLfixed * m);
^
src/external/glad.h:3166:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLLOGICOPPROC)(GLenum opcode);
^
src/external/glad.h:3167:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMAP1XOESPROC)(GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points);
^
src/external/glad.h:3168:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMAP2XOESPROC)(GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points);
^
src/external/glad.h:3169:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void * (GLAD_API_PTR *PFNGLMAPBUFFERPROC)(GLenum target, GLenum access);
^
src/external/glad.h:3170:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void * (GLAD_API_PTR *PFNGLMAPBUFFERARBPROC)(GLenum target, GLenum access);
^
src/external/glad.h:3171:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void * (GLAD_API_PTR *PFNGLMAPBUFFERRANGEPROC)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
^
src/external/glad.h:3172:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMAPGRID1XOESPROC)(GLint n, GLfixed u1, GLfixed u2);
^
src/external/glad.h:3173:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMAPGRID2XOESPROC)(GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2);
^
src/external/glad.h:3174:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void * (GLAD_API_PTR *PFNGLMAPNAMEDBUFFERPROC)(GLuint buffer, GLenum access);
^
src/external/glad.h:3175:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void * (GLAD_API_PTR *PFNGLMAPNAMEDBUFFERRANGEPROC)(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
^
src/external/glad.h:3176:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMATERIALXOESPROC)(GLenum face, GLenum pname, GLfixed param);
^
src/external/glad.h:3177:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMATERIALXVOESPROC)(GLenum face, GLenum pname, const GLfixed * param);
^
src/external/glad.h:3178:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMEMORYBARRIERPROC)(GLbitfield barriers);
^
src/external/glad.h:3179:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMEMORYBARRIERBYREGIONPROC)(GLbitfield barriers);
^
src/external/glad.h:3180:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMINSAMPLESHADINGPROC)(GLfloat value);
^
src/external/glad.h:3181:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMINSAMPLESHADINGARBPROC)(GLfloat value);
^
src/external/glad.h:3182:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTMATRIXXOESPROC)(const GLfixed * m);
^
src/external/glad.h:3183:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTTRANSPOSEMATRIXDARBPROC)(const GLdouble * m);
^
src/external/glad.h:3184:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTTRANSPOSEMATRIXFARBPROC)(const GLfloat * m);
^
src/external/glad.h:3185:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTTRANSPOSEMATRIXXOESPROC)(const GLfixed * m);
^
src/external/glad.h:3186:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWARRAYSPROC)(GLenum mode, const GLint * first, const GLsizei * count, GLsizei drawcount);
^
src/external/glad.h:3187:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWARRAYSINDIRECTPROC)(GLenum mode, const void * indirect, GLsizei drawcount, GLsizei stride);
^
src/external/glad.h:3188:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSPROC)(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount);
^
src/external/glad.h:3189:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount, const GLint * basevertex);
^
src/external/glad.h:3190:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTIDRAWELEMENTSINDIRECTPROC)(GLenum mode, GLenum type, const void * indirect, GLsizei drawcount, GLsizei stride);
^
src/external/glad.h:3191:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1DARBPROC)(GLenum target, GLdouble s);
^
src/external/glad.h:3192:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1DVARBPROC)(GLenum target, const GLdouble * v);
^
src/external/glad.h:3193:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1FARBPROC)(GLenum target, GLfloat s);
^
src/external/glad.h:3194:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1FVARBPROC)(GLenum target, const GLfloat * v);
^
src/external/glad.h:3195:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1IARBPROC)(GLenum target, GLint s);
^
src/external/glad.h:3196:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1IVARBPROC)(GLenum target, const GLint * v);
^
src/external/glad.h:3197:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1SARBPROC)(GLenum target, GLshort s);
^
src/external/glad.h:3198:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1SVARBPROC)(GLenum target, const GLshort * v);
^
src/external/glad.h:3199:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1XOESPROC)(GLenum texture, GLfixed s);
^
src/external/glad.h:3200:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD1XVOESPROC)(GLenum texture, const GLfixed * coords);
^
src/external/glad.h:3201:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2DARBPROC)(GLenum target, GLdouble s, GLdouble t);
^
src/external/glad.h:3202:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2DVARBPROC)(GLenum target, const GLdouble * v);
^
src/external/glad.h:3203:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2FARBPROC)(GLenum target, GLfloat s, GLfloat t);
^
src/external/glad.h:3204:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2FVARBPROC)(GLenum target, const GLfloat * v);
^
src/external/glad.h:3205:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2IARBPROC)(GLenum target, GLint s, GLint t);
^
src/external/glad.h:3206:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2IVARBPROC)(GLenum target, const GLint * v);
^
src/external/glad.h:3207:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2SARBPROC)(GLenum target, GLshort s, GLshort t);
^
src/external/glad.h:3208:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2SVARBPROC)(GLenum target, const GLshort * v);
^
src/external/glad.h:3209:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2XOESPROC)(GLenum texture, GLfixed s, GLfixed t);
^
src/external/glad.h:3210:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD2XVOESPROC)(GLenum texture, const GLfixed * coords);
^
src/external/glad.h:3211:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3DARBPROC)(GLenum target, GLdouble s, GLdouble t, GLdouble r);
^
src/external/glad.h:3212:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3DVARBPROC)(GLenum target, const GLdouble * v);
^
src/external/glad.h:3213:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3FARBPROC)(GLenum target, GLfloat s, GLfloat t, GLfloat r);
^
src/external/glad.h:3214:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3FVARBPROC)(GLenum target, const GLfloat * v);
^
src/external/glad.h:3215:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3IARBPROC)(GLenum target, GLint s, GLint t, GLint r);
^
src/external/glad.h:3216:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3IVARBPROC)(GLenum target, const GLint * v);
^
src/external/glad.h:3217:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3SARBPROC)(GLenum target, GLshort s, GLshort t, GLshort r);
^
src/external/glad.h:3218:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3SVARBPROC)(GLenum target, const GLshort * v);
^
src/external/glad.h:3219:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3XOESPROC)(GLenum texture, GLfixed s, GLfixed t, GLfixed r);
^
src/external/glad.h:3220:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD3XVOESPROC)(GLenum texture, const GLfixed * coords);
^
src/external/glad.h:3221:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4DARBPROC)(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
^
src/external/glad.h:3222:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4DVARBPROC)(GLenum target, const GLdouble * v);
^
src/external/glad.h:3223:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4FARBPROC)(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
^
src/external/glad.h:3224:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4FVARBPROC)(GLenum target, const GLfloat * v);
^
src/external/glad.h:3225:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4IARBPROC)(GLenum target, GLint s, GLint t, GLint r, GLint q);
^
src/external/glad.h:3226:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4IVARBPROC)(GLenum target, const GLint * v);
^
src/external/glad.h:3227:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4SARBPROC)(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
^
src/external/glad.h:3228:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4SVARBPROC)(GLenum target, const GLshort * v);
^
src/external/glad.h:3229:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4XOESPROC)(GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
^
src/external/glad.h:3230:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLMULTITEXCOORD4XVOESPROC)(GLenum texture, const GLfixed * coords);
^
src/external/glad.h:3231:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLNAMEDBUFFERDATAPROC)(GLuint buffer, GLsizeiptr size, const void * data, GLenum usage);
^
src/external/glad.h:3232:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLNAMEDBUFFERSTORAGEPROC)(GLuint buffer, GLsizeiptr size, const void * data, GLbitfield flags);
^
src/external/glad.h:3233:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLNAMEDBUFFERSUBDATAPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
^
src/external/glad.h:3234:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC)(GLuint framebuffer, GLenum buf);
^
src/external/glad.h:3235:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC)(GLuint framebuffer, GLsizei n, const GLenum * bufs);
^
src/external/glad.h:3236:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC)(GLuint framebuffer, GLenum pname, GLint param);
^
src/external/glad.h:3237:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC)(GLuint framebuffer, GLenum src);
^
src/external/glad.h:3238:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC)(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
^
src/external/glad.h:3239:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC)(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat * v);
^
src/external/glad.h:3240:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERTEXTUREPROC)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
^
src/external/glad.h:3241:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
^
src/external/glad.h:3242:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLNAMEDRENDERBUFFERSTORAGEPROC)(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
^
src/external/glad.h:3243:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC)(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
^
src/external/glad.h:3244:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLNAMEDSTRINGARBPROC)(GLenum type, GLint namelen, const GLchar * name, GLint stringlen, const GLchar * string);
^
src/external/glad.h:3245:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLNORMAL3XOESPROC)(GLfixed nx, GLfixed ny, GLfixed nz);
^
src/external/glad.h:3246:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLNORMAL3XVOESPROC)(const GLfixed * coords);
^
src/external/glad.h:3247:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLOBJECTLABELPROC)(GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
^
src/external/glad.h:3248:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLOBJECTPTRLABELPROC)(const void * ptr, GLsizei length, const GLchar * label);
^
src/external/glad.h:3249:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLORTHOXOESPROC)(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
^
src/external/glad.h:3250:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPASSTHROUGHXOESPROC)(GLfixed token);
^
src/external/glad.h:3251:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPATCHPARAMETERFVPROC)(GLenum pname, const GLfloat * values);
^
src/external/glad.h:3252:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPATCHPARAMETERIPROC)(GLenum pname, GLint value);
^
src/external/glad.h:3253:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPAUSETRANSFORMFEEDBACKPROC)(void);
^
src/external/glad.h:3254:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPIXELMAPXPROC)(GLenum map, GLint size, const GLfixed * values);
^
src/external/glad.h:3255:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPIXELSTOREFPROC)(GLenum pname, GLfloat param);
^
src/external/glad.h:3256:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPIXELSTOREIPROC)(GLenum pname, GLint param);
^
src/external/glad.h:3257:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPIXELSTOREXPROC)(GLenum pname, GLfixed param);
^
src/external/glad.h:3258:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPIXELTRANSFERXOESPROC)(GLenum pname, GLfixed param);
^
src/external/glad.h:3259:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPIXELZOOMXOESPROC)(GLfixed xfactor, GLfixed yfactor);
^
src/external/glad.h:3260:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERFPROC)(GLenum pname, GLfloat param);
^
src/external/glad.h:3261:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERFVPROC)(GLenum pname, const GLfloat * params);
^
src/external/glad.h:3262:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERIPROC)(GLenum pname, GLint param);
^
src/external/glad.h:3263:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERIVPROC)(GLenum pname, const GLint * params);
^
src/external/glad.h:3264:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPOINTPARAMETERXVOESPROC)(GLenum pname, const GLfixed * params);
^
src/external/glad.h:3265:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPOINTSIZEPROC)(GLfloat size);
^
src/external/glad.h:3266:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPOINTSIZEXOESPROC)(GLfixed size);
^
src/external/glad.h:3267:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPOLYGONMODEPROC)(GLenum face, GLenum mode);
^
src/external/glad.h:3268:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPOLYGONOFFSETPROC)(GLfloat factor, GLfloat units);
^
src/external/glad.h:3269:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPOLYGONOFFSETXOESPROC)(GLfixed factor, GLfixed units);
^
src/external/glad.h:3270:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPOPDEBUGGROUPPROC)(void);
^
src/external/glad.h:3271:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPRIMITIVEBOUNDINGBOXARBPROC)(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
^
src/external/glad.h:3272:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPRIMITIVERESTARTINDEXPROC)(GLuint index);
^
src/external/glad.h:3273:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPRIORITIZETEXTURESXOESPROC)(GLsizei n, const GLuint * textures, const GLfixed * priorities);
^
src/external/glad.h:3274:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMBINARYPROC)(GLuint program, GLenum binaryFormat, const void * binary, GLsizei length);
^
src/external/glad.h:3275:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMENVPARAMETER4DARBPROC)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
^
src/external/glad.h:3276:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMENVPARAMETER4DVARBPROC)(GLenum target, GLuint index, const GLdouble * params);
^
src/external/glad.h:3277:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMENVPARAMETER4FARBPROC)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
^
src/external/glad.h:3278:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMENVPARAMETER4FVARBPROC)(GLenum target, GLuint index, const GLfloat * params);
^
src/external/glad.h:3279:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMLOCALPARAMETER4DARBPROC)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
^
src/external/glad.h:3280:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMLOCALPARAMETER4DVARBPROC)(GLenum target, GLuint index, const GLdouble * params);
^
src/external/glad.h:3281:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMLOCALPARAMETER4FARBPROC)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
^
src/external/glad.h:3282:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMLOCALPARAMETER4FVARBPROC)(GLenum target, GLuint index, const GLfloat * params);
^
src/external/glad.h:3283:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMPARAMETERIPROC)(GLuint program, GLenum pname, GLint value);
^
src/external/glad.h:3284:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMPARAMETERIARBPROC)(GLuint program, GLenum pname, GLint value);
^
src/external/glad.h:3285:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMSTRINGARBPROC)(GLenum target, GLenum format, GLsizei len, const void * string);
^
src/external/glad.h:3286:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1DPROC)(GLuint program, GLint location, GLdouble v0);
^
src/external/glad.h:3287:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble * value);
^
src/external/glad.h:3288:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1FPROC)(GLuint program, GLint location, GLfloat v0);
^
src/external/glad.h:3289:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
^
src/external/glad.h:3290:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1IPROC)(GLuint program, GLint location, GLint v0);
^
src/external/glad.h:3291:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1I64ARBPROC)(GLuint program, GLint location, GLint64 x);
^
src/external/glad.h:3292:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1I64VARBPROC)(GLuint program, GLint location, GLsizei count, const GLint64 * value);
^
src/external/glad.h:3293:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1IVPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
^
src/external/glad.h:3294:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1UIPROC)(GLuint program, GLint location, GLuint v0);
^
src/external/glad.h:3295:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1UI64ARBPROC)(GLuint program, GLint location, GLuint64 x);
^
src/external/glad.h:3296:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1UI64VARBPROC)(GLuint program, GLint location, GLsizei count, const GLuint64 * value);
^
src/external/glad.h:3297:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM1UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
^
src/external/glad.h:3298:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2DPROC)(GLuint program, GLint location, GLdouble v0, GLdouble v1);
^
src/external/glad.h:3299:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble * value);
^
src/external/glad.h:3300:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1);
^
src/external/glad.h:3301:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
^
src/external/glad.h:3302:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2IPROC)(GLuint program, GLint location, GLint v0, GLint v1);
^
src/external/glad.h:3303:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2I64ARBPROC)(GLuint program, GLint location, GLint64 x, GLint64 y);
^
src/external/glad.h:3304:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2I64VARBPROC)(GLuint program, GLint location, GLsizei count, const GLint64 * value);
^
src/external/glad.h:3305:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2IVPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
^
src/external/glad.h:3306:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1);
^
src/external/glad.h:3307:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2UI64ARBPROC)(GLuint program, GLint location, GLuint64 x, GLuint64 y);
^
src/external/glad.h:3308:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2UI64VARBPROC)(GLuint program, GLint location, GLsizei count, const GLuint64 * value);
^
src/external/glad.h:3309:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM2UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
^
src/external/glad.h:3310:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3DPROC)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
^
src/external/glad.h:3311:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble * value);
^
src/external/glad.h:3312:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
^
src/external/glad.h:3313:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
^
src/external/glad.h:3314:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3IPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
^
src/external/glad.h:3315:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3I64ARBPROC)(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z);
^
src/external/glad.h:3316:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3I64VARBPROC)(GLuint program, GLint location, GLsizei count, const GLint64 * value);
^
src/external/glad.h:3317:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3IVPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
^
src/external/glad.h:3318:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
^
src/external/glad.h:3319:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3UI64ARBPROC)(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
^
src/external/glad.h:3320:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3UI64VARBPROC)(GLuint program, GLint location, GLsizei count, const GLuint64 * value);
^
src/external/glad.h:3321:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM3UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
^
src/external/glad.h:3322:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4DPROC)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
^
src/external/glad.h:3323:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble * value);
^
src/external/glad.h:3324:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
^
src/external/glad.h:3325:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat * value);
^
src/external/glad.h:3326:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4IPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
^
src/external/glad.h:3327:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4I64ARBPROC)(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
^
src/external/glad.h:3328:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4I64VARBPROC)(GLuint program, GLint location, GLsizei count, const GLint64 * value);
^
src/external/glad.h:3329:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4IVPROC)(GLuint program, GLint location, GLsizei count, const GLint * value);
^
src/external/glad.h:3330:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
^
src/external/glad.h:3331:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4UI64ARBPROC)(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
^
src/external/glad.h:3332:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4UI64VARBPROC)(GLuint program, GLint location, GLsizei count, const GLuint64 * value);
^
src/external/glad.h:3333:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORM4UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint * value);
^
src/external/glad.h:3334:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
^
src/external/glad.h:3335:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
^
src/external/glad.h:3336:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
^
src/external/glad.h:3337:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
^
src/external/glad.h:3338:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
^
src/external/glad.h:3339:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
^
src/external/glad.h:3340:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
^
src/external/glad.h:3341:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
^
src/external/glad.h:3342:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
^
src/external/glad.h:3343:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
^
src/external/glad.h:3344:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
^
src/external/glad.h:3345:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
^
src/external/glad.h:3346:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
^
src/external/glad.h:3347:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
^
src/external/glad.h:3348:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
^
src/external/glad.h:3349:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
^
src/external/glad.h:3350:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
^
src/external/glad.h:3351:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
^
src/external/glad.h:3352:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPROVOKINGVERTEXPROC)(GLenum mode);
^
src/external/glad.h:3353:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLPUSHDEBUGGROUPPROC)(GLenum source, GLuint id, GLsizei length, const GLchar * message);
^
src/external/glad.h:3354:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLQUERYCOUNTERPROC)(GLuint id, GLenum target);
^
src/external/glad.h:3355:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLRASTERPOS2XOESPROC)(GLfixed x, GLfixed y);
^
src/external/glad.h:3356:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLRASTERPOS2XVOESPROC)(const GLfixed * coords);
^
src/external/glad.h:3357:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLRASTERPOS3XOESPROC)(GLfixed x, GLfixed y, GLfixed z);
^
src/external/glad.h:3358:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLRASTERPOS3XVOESPROC)(const GLfixed * coords);
^
src/external/glad.h:3359:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLRASTERPOS4XOESPROC)(GLfixed x, GLfixed y, GLfixed z, GLfixed w);
^
src/external/glad.h:3360:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLRASTERPOS4XVOESPROC)(const GLfixed * coords);
^
src/external/glad.h:3361:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLREADBUFFERPROC)(GLenum src);
^
src/external/glad.h:3362:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLREADPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void * pixels);
^
src/external/glad.h:3363:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLRECTXOESPROC)(GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);
^
src/external/glad.h:3364:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLRECTXVOESPROC)(const GLfixed * v1, const GLfixed * v2);
^
src/external/glad.h:3365:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLRELEASESHADERCOMPILERPROC)(void);
^
src/external/glad.h:3366:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEPROC)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
^
src/external/glad.h:3367:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEEXTPROC)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
^
src/external/glad.h:3368:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
^
src/external/glad.h:3369:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
^
src/external/glad.h:3370:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLRESUMETRANSFORMFEEDBACKPROC)(void);
^
src/external/glad.h:3371:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLROTATEXOESPROC)(GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
^
src/external/glad.h:3372:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLSAMPLECOVERAGEPROC)(GLfloat value, GLboolean invert);
^
src/external/glad.h:3373:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLSAMPLECOVERAGEARBPROC)(GLfloat value, GLboolean invert);
^
src/external/glad.h:3374:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLSAMPLEMASKIPROC)(GLuint maskNumber, GLbitfield mask);
^
src/external/glad.h:3375:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIIVPROC)(GLuint sampler, GLenum pname, const GLint * param);
^
src/external/glad.h:3376:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIUIVPROC)(GLuint sampler, GLenum pname, const GLuint * param);
^
src/external/glad.h:3377:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERFPROC)(GLuint sampler, GLenum pname, GLfloat param);
^
src/external/glad.h:3378:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERFVPROC)(GLuint sampler, GLenum pname, const GLfloat * param);
^
src/external/glad.h:3379:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIPROC)(GLuint sampler, GLenum pname, GLint param);
^
src/external/glad.h:3380:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLSAMPLERPARAMETERIVPROC)(GLuint sampler, GLenum pname, const GLint * param);
^
src/external/glad.h:3381:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLSCALEXOESPROC)(GLfixed x, GLfixed y, GLfixed z);
^
src/external/glad.h:3382:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLSCISSORPROC)(GLint x, GLint y, GLsizei width, GLsizei height);
^
src/external/glad.h:3383:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLSCISSORARRAYVPROC)(GLuint first, GLsizei count, const GLint * v);
^
src/external/glad.h:3384:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLSCISSORINDEXEDPROC)(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
^
src/external/glad.h:3385:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLSCISSORINDEXEDVPROC)(GLuint index, const GLint * v);
^
src/external/glad.h:3386:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLSHADERBINARYPROC)(GLsizei count, const GLuint * shaders, GLenum binaryFormat, const void * binary, GLsizei length);
^
src/external/glad.h:3387:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLSHADERSOURCEPROC)(GLuint shader, GLsizei count, const GLchar *const* string, const GLint * length);
^
src/external/glad.h:3388:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLSHADERSOURCEARBPROC)(GLhandleARB shaderObj, GLsizei count, const GLcharARB ** string, const GLint * length);
^
src/external/glad.h:3389:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLSHADERSTORAGEBLOCKBINDINGPROC)(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
^
src/external/glad.h:3390:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLSPECIALIZESHADERARBPROC)(GLuint shader, const GLchar * pEntryPoint, GLuint numSpecializationConstants, const GLuint * pConstantIndex, const GLuint * pConstantValue);
^
src/external/glad.h:3391:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLSTENCILFUNCPROC)(GLenum func, GLint ref, GLuint mask);
^
src/external/glad.h:3392:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLSTENCILFUNCSEPARATEPROC)(GLenum face, GLenum func, GLint ref, GLuint mask);
^
src/external/glad.h:3393:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLSTENCILMASKPROC)(GLuint mask);
^
src/external/glad.h:3394:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLSTENCILMASKSEPARATEPROC)(GLenum face, GLuint mask);
^
src/external/glad.h:3395:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLSTENCILOPPROC)(GLenum fail, GLenum zfail, GLenum zpass);
^
src/external/glad.h:3396:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLSTENCILOPSEPARATEPROC)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
^
src/external/glad.h:3397:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXBUFFERPROC)(GLenum target, GLenum internalformat, GLuint buffer);
^
src/external/glad.h:3398:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXBUFFERRANGEPROC)(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
^
src/external/glad.h:3399:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1XOESPROC)(GLfixed s);
^
src/external/glad.h:3400:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXCOORD1XVOESPROC)(const GLfixed * coords);
^
src/external/glad.h:3401:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2XOESPROC)(GLfixed s, GLfixed t);
^
src/external/glad.h:3402:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXCOORD2XVOESPROC)(const GLfixed * coords);
^
src/external/glad.h:3403:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3XOESPROC)(GLfixed s, GLfixed t, GLfixed r);
^
src/external/glad.h:3404:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXCOORD3XVOESPROC)(const GLfixed * coords);
^
src/external/glad.h:3405:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4XOESPROC)(GLfixed s, GLfixed t, GLfixed r, GLfixed q);
^
src/external/glad.h:3406:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXCOORD4XVOESPROC)(const GLfixed * coords);
^
src/external/glad.h:3407:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXENVXOESPROC)(GLenum target, GLenum pname, GLfixed param);
^
src/external/glad.h:3408:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXENVXVOESPROC)(GLenum target, GLenum pname, const GLfixed * params);
^
src/external/glad.h:3409:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXGENXOESPROC)(GLenum coord, GLenum pname, GLfixed param);
^
src/external/glad.h:3410:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXGENXVOESPROC)(GLenum coord, GLenum pname, const GLfixed * params);
^
src/external/glad.h:3411:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE1DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
^
src/external/glad.h:3412:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE2DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
^
src/external/glad.h:3413:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE2DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
^
src/external/glad.h:3414:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE3DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
^
src/external/glad.h:3415:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXIMAGE3DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
^
src/external/glad.h:3416:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIIVPROC)(GLenum target, GLenum pname, const GLint * params);
^
src/external/glad.h:3417:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIUIVPROC)(GLenum target, GLenum pname, const GLuint * params);
^
src/external/glad.h:3418:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERFPROC)(GLenum target, GLenum pname, GLfloat param);
^
src/external/glad.h:3419:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERFVPROC)(GLenum target, GLenum pname, const GLfloat * params);
^
src/external/glad.h:3420:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIPROC)(GLenum target, GLenum pname, GLint param);
^
src/external/glad.h:3421:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERIVPROC)(GLenum target, GLenum pname, const GLint * params);
^
src/external/glad.h:3422:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERXOESPROC)(GLenum target, GLenum pname, GLfixed param);
^
src/external/glad.h:3423:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXPARAMETERXVOESPROC)(GLenum target, GLenum pname, const GLfixed * params);
^
src/external/glad.h:3424:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE1DPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
^
src/external/glad.h:3425:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE2DPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
^
src/external/glad.h:3426:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE2DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
^
src/external/glad.h:3427:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE3DPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
^
src/external/glad.h:3428:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXSTORAGE3DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
^
src/external/glad.h:3429:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
^
src/external/glad.h:3430:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
^
src/external/glad.h:3431:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
^
src/external/glad.h:3432:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXTUREBUFFERPROC)(GLuint texture, GLenum internalformat, GLuint buffer);
^
src/external/glad.h:3433:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXTUREBUFFERRANGEPROC)(GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
^
src/external/glad.h:3434:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXTUREPARAMETERIIVPROC)(GLuint texture, GLenum pname, const GLint * params);
^
src/external/glad.h:3435:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXTUREPARAMETERIUIVPROC)(GLuint texture, GLenum pname, const GLuint * params);
^
src/external/glad.h:3436:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXTUREPARAMETERFPROC)(GLuint texture, GLenum pname, GLfloat param);
^
src/external/glad.h:3437:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXTUREPARAMETERFVPROC)(GLuint texture, GLenum pname, const GLfloat * param);
^
src/external/glad.h:3438:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXTUREPARAMETERIPROC)(GLuint texture, GLenum pname, GLint param);
^
src/external/glad.h:3439:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXTUREPARAMETERIVPROC)(GLuint texture, GLenum pname, const GLint * param);
^
src/external/glad.h:3440:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXTURESTORAGE1DPROC)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
^
src/external/glad.h:3441:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXTURESTORAGE2DPROC)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
^
src/external/glad.h:3442:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
^
src/external/glad.h:3443:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXTURESTORAGE3DPROC)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
^
src/external/glad.h:3444:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
^
src/external/glad.h:3445:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXTURESUBIMAGE1DPROC)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
^
src/external/glad.h:3446:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXTURESUBIMAGE2DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
^
src/external/glad.h:3447:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXTURESUBIMAGE3DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
^
src/external/glad.h:3448:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTEXTUREVIEWPROC)(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
^
src/external/glad.h:3449:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC)(GLuint xfb, GLuint index, GLuint buffer);
^
src/external/glad.h:3450:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC)(GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
^
src/external/glad.h:3451:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTRANSFORMFEEDBACKVARYINGSPROC)(GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
^
src/external/glad.h:3452:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLTRANSLATEXOESPROC)(GLfixed x, GLfixed y, GLfixed z);
^
src/external/glad.h:3453:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM1DPROC)(GLint location, GLdouble x);
^
src/external/glad.h:3454:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM1DVPROC)(GLint location, GLsizei count, const GLdouble * value);
^
src/external/glad.h:3455:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM1FPROC)(GLint location, GLfloat v0);
^
src/external/glad.h:3456:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM1FARBPROC)(GLint location, GLfloat v0);
^
src/external/glad.h:3457:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM1FVPROC)(GLint location, GLsizei count, const GLfloat * value);
^
src/external/glad.h:3458:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM1FVARBPROC)(GLint location, GLsizei count, const GLfloat * value);
^
src/external/glad.h:3459:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM1IPROC)(GLint location, GLint v0);
^
src/external/glad.h:3460:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM1I64ARBPROC)(GLint location, GLint64 x);
^
src/external/glad.h:3461:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM1I64VARBPROC)(GLint location, GLsizei count, const GLint64 * value);
^
src/external/glad.h:3462:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM1IARBPROC)(GLint location, GLint v0);
^
src/external/glad.h:3463:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM1IVPROC)(GLint location, GLsizei count, const GLint * value);
^
src/external/glad.h:3464:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM1IVARBPROC)(GLint location, GLsizei count, const GLint * value);
^
src/external/glad.h:3465:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM1UIPROC)(GLint location, GLuint v0);
^
src/external/glad.h:3466:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM1UI64ARBPROC)(GLint location, GLuint64 x);
^
src/external/glad.h:3467:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM1UI64VARBPROC)(GLint location, GLsizei count, const GLuint64 * value);
^
src/external/glad.h:3468:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM1UIVPROC)(GLint location, GLsizei count, const GLuint * value);
^
src/external/glad.h:3469:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM2DPROC)(GLint location, GLdouble x, GLdouble y);
^
src/external/glad.h:3470:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM2DVPROC)(GLint location, GLsizei count, const GLdouble * value);
^
src/external/glad.h:3471:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM2FPROC)(GLint location, GLfloat v0, GLfloat v1);
^
src/external/glad.h:3472:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM2FARBPROC)(GLint location, GLfloat v0, GLfloat v1);
^
src/external/glad.h:3473:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM2FVPROC)(GLint location, GLsizei count, const GLfloat * value);
^
src/external/glad.h:3474:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM2FVARBPROC)(GLint location, GLsizei count, const GLfloat * value);
^
src/external/glad.h:3475:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM2IPROC)(GLint location, GLint v0, GLint v1);
^
src/external/glad.h:3476:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM2I64ARBPROC)(GLint location, GLint64 x, GLint64 y);
^
src/external/glad.h:3477:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM2I64VARBPROC)(GLint location, GLsizei count, const GLint64 * value);
^
src/external/glad.h:3478:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM2IARBPROC)(GLint location, GLint v0, GLint v1);
^
src/external/glad.h:3479:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM2IVPROC)(GLint location, GLsizei count, const GLint * value);
^
src/external/glad.h:3480:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM2IVARBPROC)(GLint location, GLsizei count, const GLint * value);
^
src/external/glad.h:3481:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM2UIPROC)(GLint location, GLuint v0, GLuint v1);
^
src/external/glad.h:3482:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM2UI64ARBPROC)(GLint location, GLuint64 x, GLuint64 y);
^
src/external/glad.h:3483:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM2UI64VARBPROC)(GLint location, GLsizei count, const GLuint64 * value);
^
src/external/glad.h:3484:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM2UIVPROC)(GLint location, GLsizei count, const GLuint * value);
^
src/external/glad.h:3485:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM3DPROC)(GLint location, GLdouble x, GLdouble y, GLdouble z);
^
src/external/glad.h:3486:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM3DVPROC)(GLint location, GLsizei count, const GLdouble * value);
^
src/external/glad.h:3487:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM3FPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
^
src/external/glad.h:3488:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM3FARBPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
^
src/external/glad.h:3489:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM3FVPROC)(GLint location, GLsizei count, const GLfloat * value);
^
src/external/glad.h:3490:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM3FVARBPROC)(GLint location, GLsizei count, const GLfloat * value);
^
src/external/glad.h:3491:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM3IPROC)(GLint location, GLint v0, GLint v1, GLint v2);
^
src/external/glad.h:3492:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM3I64ARBPROC)(GLint location, GLint64 x, GLint64 y, GLint64 z);
^
src/external/glad.h:3493:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM3I64VARBPROC)(GLint location, GLsizei count, const GLint64 * value);
^
src/external/glad.h:3494:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM3IARBPROC)(GLint location, GLint v0, GLint v1, GLint v2);
^
src/external/glad.h:3495:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM3IVPROC)(GLint location, GLsizei count, const GLint * value);
^
src/external/glad.h:3496:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM3IVARBPROC)(GLint location, GLsizei count, const GLint * value);
^
src/external/glad.h:3497:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM3UIPROC)(GLint location, GLuint v0, GLuint v1, GLuint v2);
^
src/external/glad.h:3498:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM3UI64ARBPROC)(GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
^
src/external/glad.h:3499:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM3UI64VARBPROC)(GLint location, GLsizei count, const GLuint64 * value);
^
src/external/glad.h:3500:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM3UIVPROC)(GLint location, GLsizei count, const GLuint * value);
^
src/external/glad.h:3501:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM4DPROC)(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
^
src/external/glad.h:3502:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM4DVPROC)(GLint location, GLsizei count, const GLdouble * value);
^
src/external/glad.h:3503:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM4FPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
^
src/external/glad.h:3504:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM4FARBPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
^
src/external/glad.h:3505:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM4FVPROC)(GLint location, GLsizei count, const GLfloat * value);
^
src/external/glad.h:3506:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM4FVARBPROC)(GLint location, GLsizei count, const GLfloat * value);
^
src/external/glad.h:3507:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM4IPROC)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
^
src/external/glad.h:3508:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM4I64ARBPROC)(GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
^
src/external/glad.h:3509:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM4I64VARBPROC)(GLint location, GLsizei count, const GLint64 * value);
^
src/external/glad.h:3510:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM4IARBPROC)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
^
src/external/glad.h:3511:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM4IVPROC)(GLint location, GLsizei count, const GLint * value);
^
src/external/glad.h:3512:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM4IVARBPROC)(GLint location, GLsizei count, const GLint * value);
^
src/external/glad.h:3513:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM4UIPROC)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
^
src/external/glad.h:3514:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM4UI64ARBPROC)(GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
^
src/external/glad.h:3515:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM4UI64VARBPROC)(GLint location, GLsizei count, const GLuint64 * value);
^
src/external/glad.h:3516:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORM4UIVPROC)(GLint location, GLsizei count, const GLuint * value);
^
src/external/glad.h:3517:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORMBLOCKBINDINGPROC)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
^
src/external/glad.h:3518:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
^
src/external/glad.h:3519:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
^
src/external/glad.h:3520:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2FVARBPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
^
src/external/glad.h:3521:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2X3DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
^
src/external/glad.h:3522:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2X3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
^
src/external/glad.h:3523:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2X4DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
^
src/external/glad.h:3524:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX2X4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
^
src/external/glad.h:3525:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
^
src/external/glad.h:3526:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
^
src/external/glad.h:3527:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3FVARBPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
^
src/external/glad.h:3528:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3X2DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
^
src/external/glad.h:3529:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3X2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
^
src/external/glad.h:3530:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3X4DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
^
src/external/glad.h:3531:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX3X4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
^
src/external/glad.h:3532:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
^
src/external/glad.h:3533:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
^
src/external/glad.h:3534:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4FVARBPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
^
src/external/glad.h:3535:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4X2DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
^
src/external/glad.h:3536:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4X2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
^
src/external/glad.h:3537:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4X3DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
^
src/external/glad.h:3538:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORMMATRIX4X3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
^
src/external/glad.h:3539:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUNIFORMSUBROUTINESUIVPROC)(GLenum shadertype, GLsizei count, const GLuint * indices);
^
src/external/glad.h:3540:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLboolean (GLAD_API_PTR *PFNGLUNMAPBUFFERPROC)(GLenum target);
^
src/external/glad.h:3541:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLboolean (GLAD_API_PTR *PFNGLUNMAPBUFFERARBPROC)(GLenum target);
^
src/external/glad.h:3542:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef GLboolean (GLAD_API_PTR *PFNGLUNMAPNAMEDBUFFERPROC)(GLuint buffer);
^
src/external/glad.h:3543:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUSEPROGRAMPROC)(GLuint program);
^
src/external/glad.h:3544:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUSEPROGRAMOBJECTARBPROC)(GLhandleARB programObj);
^
src/external/glad.h:3545:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLUSEPROGRAMSTAGESPROC)(GLuint pipeline, GLbitfield stages, GLuint program);
^
src/external/glad.h:3546:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVALIDATEPROGRAMPROC)(GLuint program);
^
src/external/glad.h:3547:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVALIDATEPROGRAMARBPROC)(GLhandleARB programObj);
^
src/external/glad.h:3548:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVALIDATEPROGRAMPIPELINEPROC)(GLuint pipeline);
^
src/external/glad.h:3549:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEX2XOESPROC)(GLfixed x);
^
src/external/glad.h:3550:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEX2XVOESPROC)(const GLfixed * coords);
^
src/external/glad.h:3551:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEX3XOESPROC)(GLfixed x, GLfixed y);
^
src/external/glad.h:3552:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEX3XVOESPROC)(const GLfixed * coords);
^
src/external/glad.h:3553:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEX4XOESPROC)(GLfixed x, GLfixed y, GLfixed z);
^
src/external/glad.h:3554:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEX4XVOESPROC)(const GLfixed * coords);
^
src/external/glad.h:3555:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYATTRIBBINDINGPROC)(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
^
src/external/glad.h:3556:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYATTRIBFORMATPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
^
src/external/glad.h:3557:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYATTRIBIFORMATPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
^
src/external/glad.h:3558:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYATTRIBLFORMATPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
^
src/external/glad.h:3559:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYBINDINGDIVISORPROC)(GLuint vaobj, GLuint bindingindex, GLuint divisor);
^
src/external/glad.h:3560:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYELEMENTBUFFERPROC)(GLuint vaobj, GLuint buffer);
^
src/external/glad.h:3561:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXBUFFERPROC)(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
^
src/external/glad.h:3562:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXARRAYVERTEXBUFFERSPROC)(GLuint vaobj, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides);
^
src/external/glad.h:3563:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1DPROC)(GLuint index, GLdouble x);
^
src/external/glad.h:3564:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1DARBPROC)(GLuint index, GLdouble x);
^
src/external/glad.h:3565:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1DVPROC)(GLuint index, const GLdouble * v);
^
src/external/glad.h:3566:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1DVARBPROC)(GLuint index, const GLdouble * v);
^
src/external/glad.h:3567:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1FPROC)(GLuint index, GLfloat x);
^
src/external/glad.h:3568:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1FARBPROC)(GLuint index, GLfloat x);
^
src/external/glad.h:3569:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1FVPROC)(GLuint index, const GLfloat * v);
^
src/external/glad.h:3570:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1FVARBPROC)(GLuint index, const GLfloat * v);
^
src/external/glad.h:3571:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1SPROC)(GLuint index, GLshort x);
^
src/external/glad.h:3572:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1SARBPROC)(GLuint index, GLshort x);
^
src/external/glad.h:3573:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1SVPROC)(GLuint index, const GLshort * v);
^
src/external/glad.h:3574:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB1SVARBPROC)(GLuint index, const GLshort * v);
^
src/external/glad.h:3575:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2DPROC)(GLuint index, GLdouble x, GLdouble y);
^
src/external/glad.h:3576:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2DARBPROC)(GLuint index, GLdouble x, GLdouble y);
^
src/external/glad.h:3577:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2DVPROC)(GLuint index, const GLdouble * v);
^
src/external/glad.h:3578:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2DVARBPROC)(GLuint index, const GLdouble * v);
^
src/external/glad.h:3579:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2FPROC)(GLuint index, GLfloat x, GLfloat y);
^
src/external/glad.h:3580:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2FARBPROC)(GLuint index, GLfloat x, GLfloat y);
^
src/external/glad.h:3581:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2FVPROC)(GLuint index, const GLfloat * v);
^
src/external/glad.h:3582:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2FVARBPROC)(GLuint index, const GLfloat * v);
^
src/external/glad.h:3583:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2SPROC)(GLuint index, GLshort x, GLshort y);
^
src/external/glad.h:3584:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2SARBPROC)(GLuint index, GLshort x, GLshort y);
^
src/external/glad.h:3585:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2SVPROC)(GLuint index, const GLshort * v);
^
src/external/glad.h:3586:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB2SVARBPROC)(GLuint index, const GLshort * v);
^
src/external/glad.h:3587:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
^
src/external/glad.h:3588:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3DARBPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
^
src/external/glad.h:3589:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3DVPROC)(GLuint index, const GLdouble * v);
^
src/external/glad.h:3590:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3DVARBPROC)(GLuint index, const GLdouble * v);
^
src/external/glad.h:3591:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3FPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
^
src/external/glad.h:3592:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3FARBPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
^
src/external/glad.h:3593:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3FVPROC)(GLuint index, const GLfloat * v);
^
src/external/glad.h:3594:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3FVARBPROC)(GLuint index, const GLfloat * v);
^
src/external/glad.h:3595:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3SPROC)(GLuint index, GLshort x, GLshort y, GLshort z);
^
src/external/glad.h:3596:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3SARBPROC)(GLuint index, GLshort x, GLshort y, GLshort z);
^
src/external/glad.h:3597:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3SVPROC)(GLuint index, const GLshort * v);
^
src/external/glad.h:3598:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB3SVARBPROC)(GLuint index, const GLshort * v);
^
src/external/glad.h:3599:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NBVPROC)(GLuint index, const GLbyte * v);
^
src/external/glad.h:3600:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NBVARBPROC)(GLuint index, const GLbyte * v);
^
src/external/glad.h:3601:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NIVPROC)(GLuint index, const GLint * v);
^
src/external/glad.h:3602:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NIVARBPROC)(GLuint index, const GLint * v);
^
src/external/glad.h:3603:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NSVPROC)(GLuint index, const GLshort * v);
^
src/external/glad.h:3604:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NSVARBPROC)(GLuint index, const GLshort * v);
^
src/external/glad.h:3605:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NUBPROC)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
^
src/external/glad.h:3606:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NUBARBPROC)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
^
src/external/glad.h:3607:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NUBVPROC)(GLuint index, const GLubyte * v);
^
src/external/glad.h:3608:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NUBVARBPROC)(GLuint index, const GLubyte * v);
^
src/external/glad.h:3609:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NUIVPROC)(GLuint index, const GLuint * v);
^
src/external/glad.h:3610:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NUIVARBPROC)(GLuint index, const GLuint * v);
^
src/external/glad.h:3611:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NUSVPROC)(GLuint index, const GLushort * v);
^
src/external/glad.h:3612:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4NUSVARBPROC)(GLuint index, const GLushort * v);
^
src/external/glad.h:3613:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4BVPROC)(GLuint index, const GLbyte * v);
^
src/external/glad.h:3614:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4BVARBPROC)(GLuint index, const GLbyte * v);
^
src/external/glad.h:3615:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
^
src/external/glad.h:3616:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4DARBPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
^
src/external/glad.h:3617:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4DVPROC)(GLuint index, const GLdouble * v);
^
src/external/glad.h:3618:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4DVARBPROC)(GLuint index, const GLdouble * v);
^
src/external/glad.h:3619:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4FPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
^
src/external/glad.h:3620:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4FARBPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
^
src/external/glad.h:3621:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4FVPROC)(GLuint index, const GLfloat * v);
^
src/external/glad.h:3622:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4FVARBPROC)(GLuint index, const GLfloat * v);
^
src/external/glad.h:3623:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4IVPROC)(GLuint index, const GLint * v);
^
src/external/glad.h:3624:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4IVARBPROC)(GLuint index, const GLint * v);
^
src/external/glad.h:3625:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4SPROC)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
^
src/external/glad.h:3626:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4SARBPROC)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
^
src/external/glad.h:3627:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4SVPROC)(GLuint index, const GLshort * v);
^
src/external/glad.h:3628:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4SVARBPROC)(GLuint index, const GLshort * v);
^
src/external/glad.h:3629:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4UBVPROC)(GLuint index, const GLubyte * v);
^
src/external/glad.h:3630:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4UBVARBPROC)(GLuint index, const GLubyte * v);
^
src/external/glad.h:3631:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4UIVPROC)(GLuint index, const GLuint * v);
^
src/external/glad.h:3632:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4UIVARBPROC)(GLuint index, const GLuint * v);
^
src/external/glad.h:3633:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4USVPROC)(GLuint index, const GLushort * v);
^
src/external/glad.h:3634:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIB4USVARBPROC)(GLuint index, const GLushort * v);
^
src/external/glad.h:3635:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBBINDINGPROC)(GLuint attribindex, GLuint bindingindex);
^
src/external/glad.h:3636:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBDIVISORPROC)(GLuint index, GLuint divisor);
^
src/external/glad.h:3637:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBDIVISORARBPROC)(GLuint index, GLuint divisor);
^
src/external/glad.h:3638:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBFORMATPROC)(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
^
src/external/glad.h:3639:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI1IPROC)(GLuint index, GLint x);
^
src/external/glad.h:3640:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI1IVPROC)(GLuint index, const GLint * v);
^
src/external/glad.h:3641:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI1UIPROC)(GLuint index, GLuint x);
^
src/external/glad.h:3642:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI1UIVPROC)(GLuint index, const GLuint * v);
^
src/external/glad.h:3643:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI2IPROC)(GLuint index, GLint x, GLint y);
^
src/external/glad.h:3644:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI2IVPROC)(GLuint index, const GLint * v);
^
src/external/glad.h:3645:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI2UIPROC)(GLuint index, GLuint x, GLuint y);
^
src/external/glad.h:3646:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI2UIVPROC)(GLuint index, const GLuint * v);
^
src/external/glad.h:3647:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI3IPROC)(GLuint index, GLint x, GLint y, GLint z);
^
src/external/glad.h:3648:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI3IVPROC)(GLuint index, const GLint * v);
^
src/external/glad.h:3649:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI3UIPROC)(GLuint index, GLuint x, GLuint y, GLuint z);
^
src/external/glad.h:3650:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI3UIVPROC)(GLuint index, const GLuint * v);
^
src/external/glad.h:3651:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4BVPROC)(GLuint index, const GLbyte * v);
^
src/external/glad.h:3652:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4IPROC)(GLuint index, GLint x, GLint y, GLint z, GLint w);
^
src/external/glad.h:3653:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4IVPROC)(GLuint index, const GLint * v);
^
src/external/glad.h:3654:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4SVPROC)(GLuint index, const GLshort * v);
^
src/external/glad.h:3655:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4UBVPROC)(GLuint index, const GLubyte * v);
^
src/external/glad.h:3656:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4UIPROC)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
^
src/external/glad.h:3657:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4UIVPROC)(GLuint index, const GLuint * v);
^
src/external/glad.h:3658:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBI4USVPROC)(GLuint index, const GLushort * v);
^
src/external/glad.h:3659:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBIFORMATPROC)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
^
src/external/glad.h:3660:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBIPOINTERPROC)(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
^
src/external/glad.h:3661:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL1DPROC)(GLuint index, GLdouble x);
^
src/external/glad.h:3662:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL1DVPROC)(GLuint index, const GLdouble * v);
^
src/external/glad.h:3663:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL2DPROC)(GLuint index, GLdouble x, GLdouble y);
^
src/external/glad.h:3664:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL2DVPROC)(GLuint index, const GLdouble * v);
^
src/external/glad.h:3665:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL3DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
^
src/external/glad.h:3666:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL3DVPROC)(GLuint index, const GLdouble * v);
^
src/external/glad.h:3667:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL4DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
^
src/external/glad.h:3668:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBL4DVPROC)(GLuint index, const GLdouble * v);
^
src/external/glad.h:3669:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBLFORMATPROC)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
^
src/external/glad.h:3670:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBLPOINTERPROC)(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
^
src/external/glad.h:3671:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP1UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
^
src/external/glad.h:3672:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP1UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
^
src/external/glad.h:3673:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP2UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
^
src/external/glad.h:3674:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP2UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
^
src/external/glad.h:3675:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP3UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
^
src/external/glad.h:3676:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP3UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
^
src/external/glad.h:3677:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP4UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
^
src/external/glad.h:3678:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBP4UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
^
src/external/glad.h:3679:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBPOINTERPROC)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
^
src/external/glad.h:3680:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXATTRIBPOINTERARBPROC)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
^
src/external/glad.h:3681:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVERTEXBINDINGDIVISORPROC)(GLuint bindingindex, GLuint divisor);
^
src/external/glad.h:3682:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVIEWPORTPROC)(GLint x, GLint y, GLsizei width, GLsizei height);
^
src/external/glad.h:3683:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVIEWPORTARRAYVPROC)(GLuint first, GLsizei count, const GLfloat * v);
^
src/external/glad.h:3684:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVIEWPORTINDEXEDFPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
^
src/external/glad.h:3685:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLVIEWPORTINDEXEDFVPROC)(GLuint index, const GLfloat * v);
^
src/external/glad.h:3686:0: information: Skipping configuration 'APIENTRY' since the value of 'APIENTRY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef void (GLAD_API_PTR *PFNGLWAITSYNCPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);
^
src/rlgl.h:2960:24: style: Condition 'format<RL_PIXELFORMAT_COMPRESSED_DXT1_RGB' is always true [knownConditionTrueFalse]
            if (format < RL_PIXELFORMAT_COMPRESSED_DXT1_RGB) glTexImage2D(GL_TEXTURE_2D, i, glInternalFormat, mipWidth, mipHeight, 0, glFormat, glType, (unsigned char *)data + mipOffset);
                       ^
src/rlgl.h:2899:16: note: Assuming that condition 'format>=RL_PIXELFORMAT_COMPRESSED_DXT1_RGB' is not redundant
    if (format >= RL_PIXELFORMAT_COMPRESSED_DXT1_RGB)
               ^
src/rlgl.h:2960:24: note: Condition 'format<RL_PIXELFORMAT_COMPRESSED_DXT1_RGB' is always true
            if (format < RL_PIXELFORMAT_COMPRESSED_DXT1_RGB) glTexImage2D(GL_TEXTURE_2D, i, glInternalFormat, mipWidth, mipHeight, 0, glFormat, glType, (unsigned char *)data + mipOffset);
                       ^
src/rlgl.h:3168:12: style: The comparison 'id > 0' is always false. [knownConditionTrueFalse]
    if (id > 0) TRACELOG(RL_LOG_INFO, "TEXTURE: [ID %i] Cubemap texture loaded successfully (%ix%i)", id, size, size);
           ^
src/rlgl.h:3100:23: note: 'id' is assigned value '0' here.
    unsigned int id = 0;
                      ^
src/rlgl.h:3168:12: note: The comparison 'id > 0' is always false.
    if (id > 0) TRACELOG(RL_LOG_INFO, "TEXTURE: [ID %i] Cubemap texture loaded successfully (%ix%i)", id, size, size);
           ^
src/rcore.c:403:14: style: struct member 'Anonymous5::shouldClose' is never used. [unusedStructMember]
        bool shouldClose;                   // Check if window set for closing
             ^
src/rcore.c:404:14: style: struct member 'Anonymous5::resizedLastFrame' is never used. [unusedStructMember]
        bool resizedLastFrame;              // Check if window has been resized last frame
             ^
src/rcore.c:485:18: style: struct member 'Anonymous11::name' is never used. [unusedStructMember]
            char name[MAX_GAMEPADS][64];    // Gamepad name holder
                 ^
src/rcore.c:4363:0: information: Skipping configuration 'DEFAULT_GRAPHIC_DEVICE_DRM;PLATFORM_ANDROID;PLATFORM_DRM;PLATFORM_RPI;PLATFORM_DRM' since the value of 'DEFAULT_GRAPHIC_DEVICE_DRM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    CORE.Window.fd = open(DEFAULT_GRAPHIC_DEVICE_DRM, O_RDWR);
^
src/rcore.c:403:14: style: struct member 'Anonymous2::shouldClose' is never used. [unusedStructMember]
        bool shouldClose;                   // Check if window set for closing
             ^
src/rcore.c:404:14: style: struct member 'Anonymous2::resizedLastFrame' is never used. [unusedStructMember]
        bool resizedLastFrame;              // Check if window has been resized last frame
             ^
src/rcore.c:428:21: style: struct member 'Anonymous3::basePath' is never used. [unusedStructMember]
        const char *basePath;               // Base path for data storage
                    ^
src/rcore.c:485:18: style: struct member 'Anonymous8::name' is never used. [unusedStructMember]
            char name[MAX_GAMEPADS][64];    // Gamepad name holder
                 ^
src/rcore.c:4926:29: style: Variable 'sleepSeconds' is assigned a value that is never used. [unreadVariable]
        double sleepSeconds = seconds;
                            ^
src/rcore.c:1729:5: style:inconclusive: Consecutive return, break, continue, goto or throw statements are unnecessary. [duplicateBreak]
    return NULL;
    ^
src/rglfw.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 66 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/rmodels.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 137 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/tinyobj_loader_c.h:792:7: warning: sscanf() without field width limits can crash with huge input data. [invalidscanf]
      sscanf(token, "%s", namebuf);
      ^
src/external/m3d.h:3210:9: error: Common realloc mistake: 'buff' nulled but not freed upon failure [memleakOnRealloc]
        buff = (unsigned char*)M3D_REALLOC(buff, len);
        ^
src/external/m3d.h:4204:13: warning: Either the condition '!model' is redundant or there is possible null pointer dereference: model. [nullPointerRedundantCheck]
            model->errcode = M3D_ERR_UNKFRAME;
            ^
src/external/m3d.h:4202:8: note: Assuming that condition '!model' is not redundant
    if(!model || !model->numbone || !model->bone || (actionid != M3D_UNDEF && (!model->action ||
       ^
src/external/m3d.h:4204:13: note: Null pointer dereference
            model->errcode = M3D_ERR_UNKFRAME;
            ^
src/external/m3d.h:4250:9: warning: Either the condition '!model' is redundant or there is possible null pointer dereference: model. [nullPointerRedundantCheck]
        model->errcode = M3D_ERR_UNKFRAME;
        ^
src/external/m3d.h:4249:8: note: Assuming that condition '!model' is not redundant
    if(!model || !model->numbone || !model->bone) {
       ^
src/external/m3d.h:4250:9: note: Null pointer dereference
        model->errcode = M3D_ERR_UNKFRAME;
        ^
src/external/m3d.h:2370:19: portability: Casting from float * to unsigned int * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    uint32_t *i = (uint32_t*)&x;
                  ^
src/external/m3d.h:3356:58: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                        model->tmap[i].u = (M3D_FLOAT)(*((float*)(data+0)));
                                                         ^
src/external/m3d.h:3357:58: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                        model->tmap[i].v = (M3D_FLOAT)(*((float*)(data+4)));
                                                         ^
src/external/m3d.h:3360:58: portability: Casting between unsigned char * and double * which have an incompatible binary data representation. [invalidPointerCast]
                        model->tmap[i].u = (M3D_FLOAT)(*((double*)(data+0)));
                                                         ^
src/external/m3d.h:3361:58: portability: Casting between unsigned char * and double * which have an incompatible binary data representation. [invalidPointerCast]
                        model->tmap[i].v = (M3D_FLOAT)(*((double*)(data+8)));
                                                         ^
src/external/m3d.h:3394:60: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                        model->vertex[i].x = (M3D_FLOAT)(*((float*)(data+0)));
                                                           ^
src/external/m3d.h:3395:60: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                        model->vertex[i].y = (M3D_FLOAT)(*((float*)(data+4)));
                                                           ^
src/external/m3d.h:3396:60: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                        model->vertex[i].z = (M3D_FLOAT)(*((float*)(data+8)));
                                                           ^
src/external/m3d.h:3397:60: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                        model->vertex[i].w = (M3D_FLOAT)(*((float*)(data+12)));
                                                           ^
src/external/m3d.h:3401:60: portability: Casting between unsigned char * and double * which have an incompatible binary data representation. [invalidPointerCast]
                        model->vertex[i].x = (M3D_FLOAT)(*((double*)(data+0)));
                                                           ^
src/external/m3d.h:3402:60: portability: Casting between unsigned char * and double * which have an incompatible binary data representation. [invalidPointerCast]
                        model->vertex[i].y = (M3D_FLOAT)(*((double*)(data+8)));
                                                           ^
src/external/m3d.h:3403:60: portability: Casting between unsigned char * and double * which have an incompatible binary data representation. [invalidPointerCast]
                        model->vertex[i].z = (M3D_FLOAT)(*((double*)(data+16)));
                                                           ^
src/external/m3d.h:3404:60: portability: Casting between unsigned char * and double * which have an incompatible binary data representation. [invalidPointerCast]
                        model->vertex[i].w = (M3D_FLOAT)(*((double*)(data+24)));
                                                           ^
src/external/m3d.h:3536:69: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                        case m3dpf_float: m->prop[i].value.fnum = *((float*)data); data += 4; break;
                                                                    ^
src/external/m3d.h:3828:55: portability: Casting between unsigned char * and float * which have an incompatible binary data representation. [invalidPointerCast]
                                case 4: f = (float)(*((float*)(data+0))); break;
                                                      ^
src/external/m3d.h:3829:55: portability: Casting between unsigned char * and double * which have an incompatible binary data representation. [invalidPointerCast]
                                case 8: f = (float)(*((double*)(data+0))); break;
                                                      ^
src/external/tinyobj_loader_c.h:219:12: style: Variable 'vi.v_idx' is reassigned a value before the old one has been used. [redundantAssignment]
  vi.v_idx = my_atoi((*token));
           ^
src/external/tinyobj_loader_c.h:215:12: note: vi.v_idx is assigned
  vi.v_idx = (int)(0x80000000);
           ^
src/external/tinyobj_loader_c.h:219:12: note: vi.v_idx is overwritten
  vi.v_idx = my_atoi((*token));
           ^
src/external/m3d.h:1398:13: style: Redundant initialization for 'prior'. The initialized value is overwritten before it is read. [redundantInitialization]
      prior = cur - stride;
            ^
src/external/m3d.h:1386:28: note: prior is initialized
      unsigned char *prior = cur - stride;
                           ^
src/external/m3d.h:1398:13: note: prior is overwritten
      prior = cur - stride;
            ^
src/external/m3d.h:4048:39: style: Variable 'l' is reassigned a value before the old one has been used. [redundantAssignment]
                                    l = model->numface; model->numface += n;
                                      ^
src/external/m3d.h:4045:42: note: l is assigned
                                        l++;
                                         ^
src/external/m3d.h:4048:39: note: l is overwritten
                                    l = model->numface; model->numface += n;
                                      ^
src/rmodels.c:1390:14: style: Redundant initialization for 'matModel'. The initialized value is overwritten before it is read. [redundantInitialization]
    matModel = MatrixMultiply(transform, rlGetMatrixTransform());
             ^
src/rmodels.c:1375:21: note: matModel is initialized
    Matrix matModel = MatrixIdentity();
                    ^
src/rmodels.c:1390:14: note: matModel is overwritten
    matModel = MatrixMultiply(transform, rlGetMatrixTransform());
             ^
src/rmodels.c:1393:18: style: Redundant initialization for 'matModelView'. The initialized value is overwritten before it is read. [redundantInitialization]
    matModelView = MatrixMultiply(matModel, matView);
                 ^
src/rmodels.c:1377:25: note: matModelView is initialized
    Matrix matModelView = MatrixIdentity();
                        ^
src/rmodels.c:1393:18: note: matModelView is overwritten
    matModelView = MatrixMultiply(matModel, matView);
                 ^
src/rmodels.c:1489:51: style: Redundant initialization for 'matModelViewProjection'. The initialized value is overwritten before it is read. [redundantInitialization]
        if (eyeCount == 1) matModelViewProjection = MatrixMultiply(matModelView, matProjection);
                                                  ^
src/rmodels.c:1488:39: note: matModelViewProjection is initialized
        Matrix matModelViewProjection = MatrixIdentity();
                                      ^
src/rmodels.c:1489:51: note: matModelViewProjection is overwritten
        if (eyeCount == 1) matModelViewProjection = MatrixMultiply(matModelView, matProjection);
                                                  ^
src/rmodels.c:1616:18: style: Redundant initialization for 'matModelView'. The initialized value is overwritten before it is read. [redundantInitialization]
    matModelView = MatrixMultiply(rlGetMatrixTransform(), matView);
                 ^
src/rmodels.c:1581:25: note: matModelView is initialized
    Matrix matModelView = MatrixIdentity();
                        ^
src/rmodels.c:1616:18: note: matModelView is overwritten
    matModelView = MatrixMultiply(rlGetMatrixTransform(), matView);
                 ^
src/rmodels.c:1710:51: style: Redundant initialization for 'matModelViewProjection'. The initialized value is overwritten before it is read. [redundantInitialization]
        if (eyeCount == 1) matModelViewProjection = MatrixMultiply(matModelView, matProjection);
                                                  ^
src/rmodels.c:1709:39: note: matModelViewProjection is initialized
        Matrix matModelViewProjection = MatrixIdentity();
                                      ^
src/rmodels.c:1710:51: note: matModelViewProjection is overwritten
        if (eyeCount == 1) matModelViewProjection = MatrixMultiply(matModelView, matProjection);
                                                  ^
src/external/tinyobj_loader_c.h:498:9: style: The scope of the variable 'offset' can be reduced. [variableScope]
  char *offset;
        ^
src/external/tinyobj_loader_c.h:500:16: style: The scope of the variable 'old_size' can be reduced. [variableScope]
  unsigned int old_size;
               ^
src/external/vox_loader.h:609:18: style: The scope of the variable 'vx' can be reduced. [variableScope]
   unsigned char vx, vy, vz, vi;
                 ^
src/external/vox_loader.h:609:22: style: The scope of the variable 'vy' can be reduced. [variableScope]
   unsigned char vx, vy, vz, vi;
                     ^
src/external/vox_loader.h:609:26: style: The scope of the variable 'vz' can be reduced. [variableScope]
   unsigned char vx, vy, vz, vi;
                         ^
src/external/vox_loader.h:609:30: style: The scope of the variable 'vi' can be reduced. [variableScope]
   unsigned char vx, vy, vz, vi;
                             ^
src/external/m3d.h:1055:10: style: The scope of the variable 's' can be reduced. [variableScope]
   int b,s;
         ^
src/external/m3d.h:1244:15: style: The scope of the variable 'type' can be reduced. [variableScope]
   int final, type;
              ^
src/external/m3d.h:1563:11: style: The scope of the variable 'i' can be reduced. [variableScope]
      int i,j,x,y;
          ^
src/external/m3d.h:1563:13: style: The scope of the variable 'j' can be reduced. [variableScope]
      int i,j,x,y;
            ^
src/external/m3d.h:2131:9: style: The scope of the variable 'l' can be reduced. [variableScope]
    int l;
        ^
src/rmodels.c:5449:9: style: The scope of the variable 'nbvertices' can be reduced. [variableScope]
    int nbvertices = 0;
        ^
src/rmodels.c:5505:9: style: The scope of the variable 'size' can be reduced. [variableScope]
    int size = 0;
        ^
src/rmodels.c:5562:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i, j, k, l, n, mi = -2;
        ^
src/rmodels.c:5562:12: style: The scope of the variable 'j' can be reduced. [variableScope]
    int i, j, k, l, n, mi = -2;
           ^
src/rmodels.c:5562:15: style: The scope of the variable 'k' can be reduced. [variableScope]
    int i, j, k, l, n, mi = -2;
              ^
src/rmodels.c:5562:18: style: The scope of the variable 'l' can be reduced. [variableScope]
    int i, j, k, l, n, mi = -2;
                 ^
src/rmodels.c:5562:21: style: The scope of the variable 'n' can be reduced. [variableScope]
    int i, j, k, l, n, mi = -2;
                    ^
src/rmodels.c:5562:24: style: The scope of the variable 'mi' can be reduced. [variableScope]
    int i, j, k, l, n, mi = -2;
                       ^
src/rmodels.c:5860:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i = 0, j = 0;
        ^
src/rmodels.c:5860:16: style: The scope of the variable 'j' can be reduced. [variableScope]
    int i = 0, j = 0;
               ^
src/external/tinyobj_loader_c.h:1211:70: style:inconclusive: Function 'tinyobj_parse_obj' argument 4 names different: declaration 'materials' definition 'materials_out'. [funcArgNamesDifferent]
                      unsigned int *num_shapes, tinyobj_material_t **materials_out,
                                                                     ^
src/external/tinyobj_loader_c.h:96:77: note: Function 'tinyobj_parse_obj' argument 4 names different: declaration 'materials' definition 'materials_out'.
                             unsigned int *num_shapes, tinyobj_material_t **materials,
                                                                            ^
src/external/tinyobj_loader_c.h:1211:70: note: Function 'tinyobj_parse_obj' argument 4 names different: declaration 'materials' definition 'materials_out'.
                      unsigned int *num_shapes, tinyobj_material_t **materials_out,
                                                                     ^
src/external/tinyobj_loader_c.h:1212:37: style:inconclusive: Function 'tinyobj_parse_obj' argument 5 names different: declaration 'num_materials' definition 'num_materials_out'. [funcArgNamesDifferent]
                      unsigned int *num_materials_out, const char *buf, unsigned int len,
                                    ^
src/external/tinyobj_loader_c.h:97:44: note: Function 'tinyobj_parse_obj' argument 5 names different: declaration 'num_materials' definition 'num_materials_out'.
                             unsigned int *num_materials, const char *buf, unsigned int len,
                                           ^
src/external/tinyobj_loader_c.h:1212:37: note: Function 'tinyobj_parse_obj' argument 5 names different: declaration 'num_materials' definition 'num_materials_out'.
                      unsigned int *num_materials_out, const char *buf, unsigned int len,
                                    ^
src/external/cgltf.h:6272:45: style:inconclusive: Function 'cgltf_fixup_pointers' argument 1 names different: declaration 'out_data' definition 'data'. [funcArgNamesDifferent]
static int cgltf_fixup_pointers(cgltf_data* data)
                                            ^
src/external/cgltf.h:6000:45: note: Function 'cgltf_fixup_pointers' argument 1 names different: declaration 'out_data' definition 'data'.
static int cgltf_fixup_pointers(cgltf_data* out_data);
                                            ^
src/external/cgltf.h:6272:45: note: Function 'cgltf_fixup_pointers' argument 1 names different: declaration 'out_data' definition 'data'.
static int cgltf_fixup_pointers(cgltf_data* data)
                                            ^
src/external/par_shapes.h:508:65: style:inconclusive: Function 'par_shapes_export' argument 2 names different: declaration 'objfile' definition 'filename'. [funcArgNamesDifferent]
void par_shapes_export(par_shapes_mesh const* mesh, char const* filename)
                                                                ^
src/external/par_shapes.h:140:60: note: Function 'par_shapes_export' argument 2 names different: declaration 'objfile' definition 'filename'.
void par_shapes_export(par_shapes_mesh const*, char const* objfile);
                                                           ^
src/external/par_shapes.h:508:65: note: Function 'par_shapes_export' argument 2 names different: declaration 'objfile' definition 'filename'.
void par_shapes_export(par_shapes_mesh const* mesh, char const* filename)
                                                                ^
src/external/par_shapes.h:854:53: style:inconclusive: Function 'par_shapes_compute_aabb' argument 1 names different: declaration 'mesh' definition 'm'. [funcArgNamesDifferent]
void par_shapes_compute_aabb(par_shapes_mesh const* m, float* aabb)
                                                    ^
src/external/par_shapes.h:143:53: note: Function 'par_shapes_compute_aabb' argument 1 names different: declaration 'mesh' definition 'm'.
void par_shapes_compute_aabb(par_shapes_mesh const* mesh, float* aabb);
                                                    ^
src/external/par_shapes.h:854:53: note: Function 'par_shapes_compute_aabb' argument 1 names different: declaration 'mesh' definition 'm'.
void par_shapes_compute_aabb(par_shapes_mesh const* m, float* aabb)
                                                    ^
src/external/par_shapes.h:871:48: style:inconclusive: Function 'par_shapes_invert' argument 2 names different: declaration 'startface' definition 'face'. [funcArgNamesDifferent]
void par_shapes_invert(par_shapes_mesh* m, int face, int nfaces)
                                               ^
src/external/par_shapes.h:160:46: note: Function 'par_shapes_invert' argument 2 names different: declaration 'startface' definition 'face'.
void par_shapes_invert(par_shapes_mesh*, int startface, int nfaces);
                                             ^
src/external/par_shapes.h:871:48: note: Function 'par_shapes_invert' argument 2 names different: declaration 'startface' definition 'face'.
void par_shapes_invert(par_shapes_mesh* m, int face, int nfaces)
                                               ^
src/external/par_shapes.h:1222:56: style:inconclusive: Function 'par_shapes_create_lsystem' argument 1 names different: declaration 'program' definition 'text'. [funcArgNamesDifferent]
par_shapes_mesh* par_shapes_create_lsystem(char const* text, int slices,
                                                       ^
src/external/par_shapes.h:134:56: note: Function 'par_shapes_create_lsystem' argument 1 names different: declaration 'program' definition 'text'.
par_shapes_mesh* par_shapes_create_lsystem(char const* program, int slices,
                                                       ^
src/external/par_shapes.h:1222:56: note: Function 'par_shapes_create_lsystem' argument 1 names different: declaration 'program' definition 'text'.
par_shapes_mesh* par_shapes_create_lsystem(char const* text, int slices,
                                                       ^
src/external/par_shapes.h:1508:58: style:inconclusive: Function 'par_shapes_create_subdivided_sphere' argument 1 names different: declaration 'nsubdivisions' definition 'nsubd'. [funcArgNamesDifferent]
par_shapes_mesh* par_shapes_create_subdivided_sphere(int nsubd)
                                                         ^
src/external/par_shapes.h:90:58: note: Function 'par_shapes_create_subdivided_sphere' argument 1 names different: declaration 'nsubdivisions' definition 'nsubd'.
par_shapes_mesh* par_shapes_create_subdivided_sphere(int nsubdivisions);
                                                         ^
src/external/par_shapes.h:1508:58: note: Function 'par_shapes_create_subdivided_sphere' argument 1 names different: declaration 'nsubdivisions' definition 'nsubd'.
par_shapes_mesh* par_shapes_create_subdivided_sphere(int nsubd)
                                                         ^
src/external/par_shapes.h:1531:55: style:inconclusive: Function 'par_shapes_create_rock' argument 2 names different: declaration 'nsubdivisions' definition 'subd'. [funcArgNamesDifferent]
par_shapes_mesh* par_shapes_create_rock(int seed, int subd)
                                                      ^
src/external/par_shapes.h:129:55: note: Function 'par_shapes_create_rock' argument 2 names different: declaration 'nsubdivisions' definition 'subd'.
par_shapes_mesh* par_shapes_create_rock(int seed, int nsubdivisions);
                                                      ^
src/external/par_shapes.h:1531:55: note: Function 'par_shapes_create_rock' argument 2 names different: declaration 'nsubdivisions' definition 'subd'.
par_shapes_mesh* par_shapes_create_rock(int seed, int subd)
                                                      ^
src/external/par_shapes.h:1555:22: style:inconclusive: Function 'par_shapes_clone' argument 2 names different: declaration 'target' definition 'clone'. [funcArgNamesDifferent]
    par_shapes_mesh* clone)
                     ^
src/external/par_shapes.h:148:22: note: Function 'par_shapes_clone' argument 2 names different: declaration 'target' definition 'clone'.
    par_shapes_mesh* target);
                     ^
src/external/par_shapes.h:1555:22: note: Function 'par_shapes_clone' argument 2 names different: declaration 'target' definition 'clone'.
    par_shapes_mesh* clone)
                     ^
src/external/par_shapes.h:1794:19: style:inconclusive: Function 'par_shapes_weld' argument 3 names different: declaration 'mapping' definition 'weldmap'. [funcArgNamesDifferent]
    PAR_SHAPES_T* weldmap)
                  ^
src/external/par_shapes.h:176:19: note: Function 'par_shapes_weld' argument 3 names different: declaration 'mapping' definition 'weldmap'.
    PAR_SHAPES_T* mapping);
                  ^
src/external/par_shapes.h:1794:19: note: Function 'par_shapes_weld' argument 3 names different: declaration 'mapping' definition 'weldmap'.
    PAR_SHAPES_T* weldmap)
                  ^
src/external/par_shapes.h:2102:64: style:inconclusive: Function 'par_shapes_remove_degenerate' argument 2 names different: declaration 'minarea' definition 'mintriarea'. [funcArgNamesDifferent]
void par_shapes_remove_degenerate(par_shapes_mesh* mesh, float mintriarea)
                                                               ^
src/external/par_shapes.h:163:59: note: Function 'par_shapes_remove_degenerate' argument 2 names different: declaration 'minarea' definition 'mintriarea'.
void par_shapes_remove_degenerate(par_shapes_mesh*, float minarea);
                                                          ^
src/external/par_shapes.h:2102:64: note: Function 'par_shapes_remove_degenerate' argument 2 names different: declaration 'minarea' definition 'mintriarea'.
void par_shapes_remove_degenerate(par_shapes_mesh* mesh, float mintriarea)
                                                               ^
src/rmodels.c:503:92: style:inconclusive: Function 'DrawCylinder' argument 5 names different: declaration 'slices' definition 'sides'. [funcArgNamesDifferent]
void DrawCylinder(Vector3 position, float radiusTop, float radiusBottom, float height, int sides, Color color)
                                                                                           ^
src/raylib.h:1425:98: note: Function 'DrawCylinder' argument 5 names different: declaration 'slices' definition 'sides'.
RLAPI void DrawCylinder(Vector3 position, float radiusTop, float radiusBottom, float height, int slices, Color color); // Draw a cylinder/cone
                                                                                                 ^
src/rmodels.c:503:92: note: Function 'DrawCylinder' argument 5 names different: declaration 'slices' definition 'sides'.
void DrawCylinder(Vector3 position, float radiusTop, float radiusBottom, float height, int sides, Color color)
                                                                                           ^
src/rmodels.c:615:97: style:inconclusive: Function 'DrawCylinderWires' argument 5 names different: declaration 'slices' definition 'sides'. [funcArgNamesDifferent]
void DrawCylinderWires(Vector3 position, float radiusTop, float radiusBottom, float height, int sides, Color color)
                                                                                                ^
src/raylib.h:1427:103: note: Function 'DrawCylinderWires' argument 5 names different: declaration 'slices' definition 'sides'.
RLAPI void DrawCylinderWires(Vector3 position, float radiusTop, float radiusBottom, float height, int slices, Color color); // Draw a cylinder/cone wires
                                                                                                      ^
src/rmodels.c:615:97: note: Function 'DrawCylinderWires' argument 5 names different: declaration 'slices' definition 'sides'.
void DrawCylinderWires(Vector3 position, float radiusTop, float radiusBottom, float height, int sides, Color color)
                                                                                                ^
src/rmodels.c:5445:34: style:inconclusive: Function 'LoadVOX' argument 1 names different: declaration 'filename' definition 'fileName'. [funcArgNamesDifferent]
static Model LoadVOX(const char *fileName)
                                 ^
src/rmodels.c:163:34: note: Function 'LoadVOX' argument 1 names different: declaration 'filename' definition 'fileName'.
static Model LoadVOX(const char *filename);     // Load VOX mesh data
                                 ^
src/rmodels.c:5445:34: note: Function 'LoadVOX' argument 1 names different: declaration 'filename' definition 'fileName'.
static Model LoadVOX(const char *fileName)
                                 ^
src/rmodels.c:5554:34: style:inconclusive: Function 'LoadM3D' argument 1 names different: declaration 'filename' definition 'fileName'. [funcArgNamesDifferent]
static Model LoadM3D(const char *fileName)
                                 ^
src/rmodels.c:166:34: note: Function 'LoadM3D' argument 1 names different: declaration 'filename' definition 'fileName'.
static Model LoadM3D(const char *filename);     // Load M3D mesh data
                                 ^
src/rmodels.c:5554:34: note: Function 'LoadM3D' argument 1 names different: declaration 'filename' definition 'fileName'.
static Model LoadM3D(const char *fileName)
                                 ^
src/external/par_shapes.h:797:15: style: Local variable 'x' shadows outer variable [shadowVariable]
        float x = col0[0] * p[0] + col1[0] * p[1] + col2[0] * p[2];
              ^
src/external/par_shapes.h:776:11: note: Shadowed declaration
    float x = axis[0];
          ^
src/external/par_shapes.h:797:15: note: Shadow variable
        float x = col0[0] * p[0] + col1[0] * p[1] + col2[0] * p[2];
              ^
src/external/par_shapes.h:798:15: style: Local variable 'y' shadows outer variable [shadowVariable]
        float y = col0[1] * p[0] + col1[1] * p[1] + col2[1] * p[2];
              ^
src/external/par_shapes.h:777:11: note: Shadowed declaration
    float y = axis[1];
          ^
src/external/par_shapes.h:798:15: note: Shadow variable
        float y = col0[1] * p[0] + col1[1] * p[1] + col2[1] * p[2];
              ^
src/external/par_shapes.h:799:15: style: Local variable 'z' shadows outer variable [shadowVariable]
        float z = col0[2] * p[0] + col1[2] * p[1] + col2[2] * p[2];
              ^
src/external/par_shapes.h:778:11: note: Shadowed declaration
    float z = axis[2];
          ^
src/external/par_shapes.h:799:15: note: Shadow variable
        float z = col0[2] * p[0] + col1[2] * p[1] + col2[2] * p[2];
              ^
src/external/par_shapes.h:807:19: style: Local variable 'x' shadows outer variable [shadowVariable]
            float x = col0[0] * n[0] + col1[0] * n[1] + col2[0] * n[2];
                  ^
src/external/par_shapes.h:776:11: note: Shadowed declaration
    float x = axis[0];
          ^
src/external/par_shapes.h:807:19: note: Shadow variable
            float x = col0[0] * n[0] + col1[0] * n[1] + col2[0] * n[2];
                  ^
src/external/par_shapes.h:808:19: style: Local variable 'y' shadows outer variable [shadowVariable]
            float y = col0[1] * n[0] + col1[1] * n[1] + col2[1] * n[2];
                  ^
src/external/par_shapes.h:777:11: note: Shadowed declaration
    float y = axis[1];
          ^
src/external/par_shapes.h:808:19: note: Shadow variable
            float y = col0[1] * n[0] + col1[1] * n[1] + col2[1] * n[2];
                  ^
src/external/par_shapes.h:809:19: style: Local variable 'z' shadows outer variable [shadowVariable]
            float z = col0[2] * n[0] + col1[2] * n[1] + col2[2] * n[2];
                  ^
src/external/par_shapes.h:778:11: note: Shadowed declaration
    float z = axis[2];
          ^
src/external/par_shapes.h:809:19: note: Shadow variable
            float z = col0[2] * n[0] + col1[2] * n[1] + col2[2] * n[2];
                  ^
src/external/par_shapes.h:1327:26: style: Local variable 'turtle' shadows outer variable [shadowVariable]
        par_shapes_mesh* turtle = frame->orientation;
                         ^
src/external/par_shapes.h:1303:22: note: Shadowed declaration
    par_shapes_mesh* turtle = par_shapes__create_turtle();
                     ^
src/external/par_shapes.h:1327:26: note: Shadow variable
        par_shapes_mesh* turtle = frame->orientation;
                         ^
src/external/par_shapes.h:1336:30: style: Local variable 'cmd' shadows outer variable [shadowVariable]
        par_shapes__command* cmd = rule->commands + (frame->pc++);
                             ^
src/external/par_shapes.h:1230:11: note: Shadowed declaration
    char *cmd = strtok(program, " ");
          ^
src/external/par_shapes.h:1336:30: note: Shadow variable
        par_shapes__command* cmd = rule->commands + (frame->pc++);
                             ^
src/external/par_shapes.h:1430:23: style: Local variable 'index' shadows outer variable [shadowVariable]
        PAR_SHAPES_T* index = tris;
                      ^
src/external/par_shapes.h:1418:25: note: Shadowed declaration
    PAR_SHAPES_T const* index = mesh->triangles;
                        ^
src/external/par_shapes.h:1430:23: note: Shadow variable
        PAR_SHAPES_T* index = tris;
                      ^
src/rmodels.c:4282:39: style: Local variable 'i' shadows outer variable [shadowVariable]
                    for (unsigned int i = imesh[m].first_vertex*3; i < (imesh[m].first_vertex + imesh[m].num_vertexes)*3; i++)
                                      ^
src/rmodels.c:4268:23: note: Shadowed declaration
    for (unsigned int i = 0; i < iqmHeader->num_vertexarrays; i++)
                      ^
src/rmodels.c:4282:39: note: Shadow variable
                    for (unsigned int i = imesh[m].first_vertex*3; i < (imesh[m].first_vertex + imesh[m].num_vertexes)*3; i++)
                                      ^
src/rmodels.c:4300:39: style: Local variable 'i' shadows outer variable [shadowVariable]
                    for (unsigned int i = imesh[m].first_vertex*3; i < (imesh[m].first_vertex + imesh[m].num_vertexes)*3; i++)
                                      ^
src/rmodels.c:4268:23: note: Shadowed declaration
    for (unsigned int i = 0; i < iqmHeader->num_vertexarrays; i++)
                      ^
src/rmodels.c:4300:39: note: Shadow variable
                    for (unsigned int i = imesh[m].first_vertex*3; i < (imesh[m].first_vertex + imesh[m].num_vertexes)*3; i++)
                                      ^
src/rmodels.c:4318:39: style: Local variable 'i' shadows outer variable [shadowVariable]
                    for (unsigned int i = imesh[m].first_vertex*2; i < (imesh[m].first_vertex + imesh[m].num_vertexes)*2; i++)
                                      ^
src/rmodels.c:4268:23: note: Shadowed declaration
    for (unsigned int i = 0; i < iqmHeader->num_vertexarrays; i++)
                      ^
src/rmodels.c:4318:39: note: Shadow variable
                    for (unsigned int i = imesh[m].first_vertex*2; i < (imesh[m].first_vertex + imesh[m].num_vertexes)*2; i++)
                                      ^
src/rmodels.c:4335:39: style: Local variable 'i' shadows outer variable [shadowVariable]
                    for (unsigned int i = imesh[m].first_vertex*4; i < (imesh[m].first_vertex + imesh[m].num_vertexes)*4; i++)
                                      ^
src/rmodels.c:4268:23: note: Shadowed declaration
    for (unsigned int i = 0; i < iqmHeader->num_vertexarrays; i++)
                      ^
src/rmodels.c:4335:39: note: Shadow variable
                    for (unsigned int i = imesh[m].first_vertex*4; i < (imesh[m].first_vertex + imesh[m].num_vertexes)*4; i++)
                                      ^
src/rmodels.c:4352:39: style: Local variable 'i' shadows outer variable [shadowVariable]
                    for (unsigned int i = imesh[m].first_vertex*4; i < (imesh[m].first_vertex + imesh[m].num_vertexes)*4; i++)
                                      ^
src/rmodels.c:4268:23: note: Shadowed declaration
    for (unsigned int i = 0; i < iqmHeader->num_vertexarrays; i++)
                      ^
src/rmodels.c:4352:39: note: Shadow variable
                    for (unsigned int i = imesh[m].first_vertex*4; i < (imesh[m].first_vertex + imesh[m].num_vertexes)*4; i++)
                                      ^
src/rmodels.c:4371:39: style: Local variable 'i' shadows outer variable [shadowVariable]
                    for (unsigned int i = imesh[m].first_vertex*4; i < (imesh[m].first_vertex + imesh[m].num_vertexes)*4; i++)
                                      ^
src/rmodels.c:4268:23: note: Shadowed declaration
    for (unsigned int i = 0; i < iqmHeader->num_vertexarrays; i++)
                      ^
src/rmodels.c:4371:39: note: Shadow variable
                    for (unsigned int i = imesh[m].first_vertex*4; i < (imesh[m].first_vertex + imesh[m].num_vertexes)*4; i++)
                                      ^
src/external/tinyobj_loader_c.h:1436:33: style: Variable 'shape_name_len' is assigned a value that is never used. [unreadVariable]
    unsigned int shape_name_len = 0;
                                ^
src/external/vox_loader.h:576:8: style: Variable 'sizeX' is assigned a value that is never used. [unreadVariable]
 sizeX = sizeY = sizeZ = 0;
       ^
src/external/vox_loader.h:576:16: style: Variable 'sizeY' is assigned a value that is never used. [unreadVariable]
 sizeX = sizeY = sizeZ = 0;
               ^
src/external/vox_loader.h:576:24: style: Variable 'sizeZ' is assigned a value that is never used. [unreadVariable]
 sizeX = sizeY = sizeZ = 0;
                       ^
src/external/vox_loader.h:577:25: style: Variable 'numVoxels' is assigned a value that is never used. [unreadVariable]
 unsigned int numVoxels = 0;
                        ^
src/external/m3d.h:4267:8: style: Variable 'fr' is assigned a value that is never used. [unreadVariable]
    fr = &model->action[actionid].frame[0];
       ^
src/rmodels.c:1844:19: style: Variable 'byteCount' is assigned a value that is never used. [unreadVariable]
        byteCount += sprintf(txtData + byteCount, "\n");
                  ^
src/rmodels.c:2833:16: style: Variable 'vN' is assigned a value that is never used. [unreadVariable]
    Vector3 vN = { 0 };
               ^
src/rmodels.c:3748:23: style: Variable 'ray.direction' is assigned a value that is never used. [unreadVariable]
        ray.direction = Vector3Negate(ray.direction);
                      ^
src/rmodels.c:3984:26: style: Variable 'faceCount' is allocated memory that is never used. [unusedAllocatedMemory]
        int *faceCount = RL_CALLOC(model.meshCount, sizeof(int));
                         ^
src/rmodels.c:5449:20: style: Variable 'nbvertices' is assigned a value that is never used. [unreadVariable]
    int nbvertices = 0;
                   ^
src/rmodels.c:5505:14: style: Variable 'size' is assigned a value that is never used. [unreadVariable]
    int size = 0;
             ^
src/rmodels.c:5860:11: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
    int i = 0, j = 0;
          ^
src/rmodels.c:5860:18: style: Variable 'j' is assigned a value that is never used. [unreadVariable]
    int i = 0, j = 0;
                 ^
src/external/cgltf.h:2539:0: information: Skipping configuration 'CGLTF_ATOF;CGLTF_ATOI;CGLTF_ATOLL' since the value of 'CGLTF_ATOF' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return (cgltf_float)CGLTF_ATOF(tmp);
^
src/external/cgltf.h:5938:0: information: Skipping configuration 'CGLTF_ATOF;CGLTF_ATOI;CGLTF_ATOLL' since the value of 'CGLTF_ATOF' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (out_asset->version && CGLTF_ATOF(out_asset->version) < 2)
^
src/external/cgltf.h:2519:0: information: Skipping configuration 'CGLTF_ATOF;CGLTF_ATOI;CGLTF_ATOLL' since the value of 'CGLTF_ATOI' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return CGLTF_ATOI(tmp);
^
src/external/cgltf.h:2710:0: information: Skipping configuration 'CGLTF_ATOF;CGLTF_ATOI;CGLTF_ATOLL' since the value of 'CGLTF_ATOI' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  *out_index = CGLTF_ATOI(us + 1);
^
src/external/cgltf.h:2529:0: information: Skipping configuration 'CGLTF_ATOF;CGLTF_ATOI;CGLTF_ATOLL' since the value of 'CGLTF_ATOLL' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return (cgltf_size)CGLTF_ATOLL(tmp);
^
src/rshapes.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 83 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/rshapes.c:240:11: style: The scope of the variable 't' can be reduced. [variableScope]
    float t = 0.0f;
          ^
src/rshapes.c:285:11: style: The scope of the variable 't' can be reduced. [variableScope]
    float t = 0.0f;
          ^
src/rshapes.c:240:13: style: Variable 't' is assigned a value that is never used. [unreadVariable]
    float t = 0.0f;
            ^
src/rshapes.c:285:13: style: Variable 't' is assigned a value that is never used. [unreadVariable]
    float t = 0.0f;
            ^
src/rtext.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 92 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/rtext.c:835:18: style: Variable 'atlas.format' is reassigned a value before the old one has been used. [redundantAssignment]
    atlas.format = PIXELFORMAT_UNCOMPRESSED_GRAY_ALPHA;
                 ^
src/rtext.c:720:18: note: atlas.format is assigned
    atlas.format = PIXELFORMAT_UNCOMPRESSED_GRAYSCALE;
                 ^
src/rtext.c:835:18: note: atlas.format is overwritten
    atlas.format = PIXELFORMAT_UNCOMPRESSED_GRAY_ALPHA;
                 ^
src/rtext.c:1832:16: style: Redundant initialization for 'octet2'. The initialized value is overwritten before it is read. [redundantInitialization]
        octet2 = text[2];
               ^
src/rtext.c:1828:30: note: octet2 is initialized
        unsigned char octet2 = '\0';
                             ^
src/rtext.c:1832:16: note: octet2 is overwritten
        octet2 = text[2];
               ^
src/rtext.c:1861:16: style: Redundant initialization for 'octet2'. The initialized value is overwritten before it is read. [redundantInitialization]
        octet2 = text[2];
               ^
src/rtext.c:1856:30: note: octet2 is initialized
        unsigned char octet2 = '\0';
                             ^
src/rtext.c:1861:16: note: octet2 is overwritten
        octet2 = text[2];
               ^
src/rtext.c:1865:16: style: Redundant initialization for 'octet3'. The initialized value is overwritten before it is read. [redundantInitialization]
        octet3 = text[3];
               ^
src/rtext.c:1857:30: note: octet3 is initialized
        unsigned char octet3 = '\0';
                             ^
src/rtext.c:1865:16: note: octet3 is overwritten
        octet3 = text[3];
               ^
src/external/stb_truetype.h:1192:22: style: The scope of the variable 'offsize' can be reduced. [variableScope]
   int count, start, offsize;
                     ^
src/external/stb_truetype.h:1217:8: style: The scope of the variable 'v' can be reduced. [variableScope]
   int v, b0 = stbtt__buf_peek8(b);
       ^
src/external/stb_truetype.h:1370:17: style: The scope of the variable 't' can be reduced. [variableScope]
   stbtt_uint32 t;
                ^
src/external/stb_truetype.h:1677:17: style: The scope of the variable 'endPtsOfContours' can be reduced. [variableScope]
   stbtt_uint8 *endPtsOfContours;
                ^
src/external/stb_truetype.h:1820:34: style: The scope of the variable 'i' can be reduced. [variableScope]
         int comp_num_verts = 0, i;
                                 ^
src/external/stb_truetype.h:2362:25: style: The scope of the variable 'straw' can be reduced. [variableScope]
   stbtt_uint32 needle, straw;
                        ^
src/external/stb_truetype.h:2363:14: style: The scope of the variable 'm' can be reduced. [variableScope]
   int l, r, m;
             ^
src/external/stb_truetype.h:2397:43: style: The scope of the variable 'm' can be reduced. [variableScope]
         stbtt_int32 l=0, r=glyphCount-1, m;
                                          ^
src/external/stb_truetype.h:2398:14: style: The scope of the variable 'straw' can be reduced. [variableScope]
         int straw, needle=glyph;
             ^
src/external/stb_truetype.h:2421:43: style: The scope of the variable 'm' can be reduced. [variableScope]
         stbtt_int32 l=0, r=rangeCount-1, m;
                                          ^
src/external/stb_truetype.h:2422:14: style: The scope of the variable 'strawStart' can be reduced. [variableScope]
         int strawStart, strawEnd, needle=glyph;
             ^
src/external/stb_truetype.h:2422:26: style: The scope of the variable 'strawEnd' can be reduced. [variableScope]
         int strawStart, strawEnd, needle=glyph;
                         ^
src/external/stb_truetype.h:2467:48: style: The scope of the variable 'm' can be reduced. [variableScope]
         stbtt_int32 l=0, r=classRangeCount-1, m;
                                               ^
src/external/stb_truetype.h:2468:14: style: The scope of the variable 'strawStart' can be reduced. [variableScope]
         int strawStart, strawEnd, needle=glyph;
             ^
src/external/stb_truetype.h:2468:26: style: The scope of the variable 'strawEnd' can be reduced. [variableScope]
         int strawStart, strawEnd, needle=glyph;
                         ^
src/external/stb_truetype.h:2535:28: style: The scope of the variable 'l' can be reduced. [variableScope]
               stbtt_int32 l, r, m;
                           ^
src/external/stb_truetype.h:2535:31: style: The scope of the variable 'r' can be reduced. [variableScope]
               stbtt_int32 l, r, m;
                              ^
src/external/stb_truetype.h:2535:34: style: The scope of the variable 'm' can be reduced. [variableScope]
               stbtt_int32 l, r, m;
                                 ^
src/external/stb_truetype.h:2536:20: style: The scope of the variable 'straw' can be reduced. [variableScope]
               int straw, needle;
                   ^
src/external/stb_truetype.h:2536:27: style: The scope of the variable 'needle' can be reduced. [variableScope]
               int straw, needle;
                          ^
src/external/stb_truetype.h:3401:10: style: The scope of the variable 'j' can be reduced. [variableScope]
   int i,j;
         ^
src/external/stb_truetype.h:3422:19: style: The scope of the variable 'c' can be reduced. [variableScope]
      int c01,c12,c,m,i,j;
                  ^
src/external/stb_truetype.h:4503:19: style: The scope of the variable 'hits' can be reduced. [variableScope]
            float hits[2][2];
                  ^
src/external/stb_truetype.h:4893:20: style: The scope of the variable 'hd' can be reduced. [variableScope]
   stbtt_uint32 nm,hd;
                   ^
src/rtext.c:1201:9: style: The scope of the variable 'letter' can be reduced. [variableScope]
    int letter = 0;                 // Current character
        ^
src/rtext.c:1202:9: style: The scope of the variable 'index' can be reduced. [variableScope]
    int index = 0;                  // Index position in sprite font
        ^
src/rtext.c:1428:9: style: The scope of the variable 'lastReplacePos' can be reduced. [variableScope]
    int lastReplacePos = 0;     // Distance between replace and end of last replace
        ^
src/external/stb_truetype.h:2297:95: style:inconclusive: Function 'stbtt_GetGlyphShape' argument 3 names different: declaration 'vertices' definition 'pvertices'. [funcArgNamesDifferent]
STBTT_DEF int stbtt_GetGlyphShape(const stbtt_fontinfo *info, int glyph_index, stbtt_vertex **pvertices)
                                                                                              ^
src/external/stb_truetype.h:846:95: note: Function 'stbtt_GetGlyphShape' argument 3 names different: declaration 'vertices' definition 'pvertices'.
STBTT_DEF int stbtt_GetGlyphShape(const stbtt_fontinfo *info, int glyph_index, stbtt_vertex **vertices);
                                                                                              ^
src/external/stb_truetype.h:2297:95: note: Function 'stbtt_GetGlyphShape' argument 3 names different: declaration 'vertices' definition 'pvertices'.
STBTT_DEF int stbtt_GetGlyphShape(const stbtt_fontinfo *info, int glyph_index, stbtt_vertex **pvertices)
                                                                                              ^
src/external/stb_truetype.h:2610:74: style:inconclusive: Function 'stbtt_GetGlyphKernAdvance' argument 2 names different: declaration 'glyph1' definition 'g1'. [funcArgNamesDifferent]
STBTT_DEF int  stbtt_GetGlyphKernAdvance(const stbtt_fontinfo *info, int g1, int g2)
                                                                         ^
src/external/stb_truetype.h:800:74: note: Function 'stbtt_GetGlyphKernAdvance' argument 2 names different: declaration 'glyph1' definition 'g1'.
STBTT_DEF int  stbtt_GetGlyphKernAdvance(const stbtt_fontinfo *info, int glyph1, int glyph2);
                                                                         ^
src/external/stb_truetype.h:2610:74: note: Function 'stbtt_GetGlyphKernAdvance' argument 2 names different: declaration 'glyph1' definition 'g1'.
STBTT_DEF int  stbtt_GetGlyphKernAdvance(const stbtt_fontinfo *info, int g1, int g2)
                                                                         ^
src/external/stb_truetype.h:2610:82: style:inconclusive: Function 'stbtt_GetGlyphKernAdvance' argument 3 names different: declaration 'glyph2' definition 'g2'. [funcArgNamesDifferent]
STBTT_DEF int  stbtt_GetGlyphKernAdvance(const stbtt_fontinfo *info, int g1, int g2)
                                                                                 ^
src/external/stb_truetype.h:800:86: note: Function 'stbtt_GetGlyphKernAdvance' argument 3 names different: declaration 'glyph2' definition 'g2'.
STBTT_DEF int  stbtt_GetGlyphKernAdvance(const stbtt_fontinfo *info, int glyph1, int glyph2);
                                                                                     ^
src/external/stb_truetype.h:2610:82: note: Function 'stbtt_GetGlyphKernAdvance' argument 3 names different: declaration 'glyph2' definition 'g2'.
STBTT_DEF int  stbtt_GetGlyphKernAdvance(const stbtt_fontinfo *info, int g1, int g2)
                                                                                 ^
src/external/stb_truetype.h:2660:77: style:inconclusive: Function 'stbtt_ScaleForPixelHeight' argument 2 names different: declaration 'pixels' definition 'height'. [funcArgNamesDifferent]
STBTT_DEF float stbtt_ScaleForPixelHeight(const stbtt_fontinfo *info, float height)
                                                                            ^
src/external/stb_truetype.h:758:77: note: Function 'stbtt_ScaleForPixelHeight' argument 2 names different: declaration 'pixels' definition 'height'.
STBTT_DEF float stbtt_ScaleForPixelHeight(const stbtt_fontinfo *info, float pixels);
                                                                            ^
src/external/stb_truetype.h:2660:77: note: Function 'stbtt_ScaleForPixelHeight' argument 2 names different: declaration 'pixels' definition 'height'.
STBTT_DEF float stbtt_ScaleForPixelHeight(const stbtt_fontinfo *info, float height)
                                                                            ^
src/external/stb_truetype.h:2672:74: style:inconclusive: Function 'stbtt_FreeShape' argument 2 names different: declaration 'vertices' definition 'v'. [funcArgNamesDifferent]
STBTT_DEF void stbtt_FreeShape(const stbtt_fontinfo *info, stbtt_vertex *v)
                                                                         ^
src/external/stb_truetype.h:857:74: note: Function 'stbtt_FreeShape' argument 2 names different: declaration 'vertices' definition 'v'.
STBTT_DEF void stbtt_FreeShape(const stbtt_fontinfo *info, stbtt_vertex *vertices);
                                                                         ^
src/external/stb_truetype.h:2672:74: note: Function 'stbtt_FreeShape' argument 2 names different: declaration 'vertices' definition 'v'.
STBTT_DEF void stbtt_FreeShape(const stbtt_fontinfo *info, stbtt_vertex *v)
                                                                         ^
src/external/stb_truetype.h:3957:83: style:inconclusive: Function 'stbtt_PackBegin' argument 3 names different: declaration 'width' definition 'pw'. [funcArgNamesDifferent]
STBTT_DEF int stbtt_PackBegin(stbtt_pack_context *spc, unsigned char *pixels, int pw, int ph, int stride_in_bytes, int padding, void *alloc_context)
                                                                                  ^
src/external/stb_truetype.h:588:84: note: Function 'stbtt_PackBegin' argument 3 names different: declaration 'width' definition 'pw'.
STBTT_DEF int  stbtt_PackBegin(stbtt_pack_context *spc, unsigned char *pixels, int width, int height, int stride_in_bytes, int padding, void *alloc_context);
                                                                                   ^
src/external/stb_truetype.h:3957:83: note: Function 'stbtt_PackBegin' argument 3 names different: declaration 'width' definition 'pw'.
STBTT_DEF int stbtt_PackBegin(stbtt_pack_context *spc, unsigned char *pixels, int pw, int ph, int stride_in_bytes, int padding, void *alloc_context)
                                                                                  ^
src/external/stb_truetype.h:3957:91: style:inconclusive: Function 'stbtt_PackBegin' argument 4 names different: declaration 'height' definition 'ph'. [funcArgNamesDifferent]
STBTT_DEF int stbtt_PackBegin(stbtt_pack_context *spc, unsigned char *pixels, int pw, int ph, int stride_in_bytes, int padding, void *alloc_context)
                                                                                          ^
src/external/stb_truetype.h:588:95: note: Function 'stbtt_PackBegin' argument 4 names different: declaration 'height' definition 'ph'.
STBTT_DEF int  stbtt_PackBegin(stbtt_pack_context *spc, unsigned char *pixels, int width, int height, int stride_in_bytes, int padding, void *alloc_context);
                                                                                              ^
src/external/stb_truetype.h:3957:91: note: Function 'stbtt_PackBegin' argument 4 names different: declaration 'height' definition 'ph'.
STBTT_DEF int stbtt_PackBegin(stbtt_pack_context *spc, unsigned char *pixels, int pw, int ph, int stride_in_bytes, int padding, void *alloc_context)
                                                                                          ^
src/external/stb_truetype.h:4184:208: style:inconclusive: Function 'stbtt_MakeGlyphBitmapSubpixelPrefilter' argument 10 names different: declaration 'oversample_x' definition 'prefilter_x'. [funcArgNamesDifferent]
STBTT_DEF void stbtt_MakeGlyphBitmapSubpixelPrefilter(const stbtt_fontinfo *info, unsigned char *output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, float shift_x, float shift_y, int prefilter_x, int prefilter_y, float *sub_x, float *sub_y, int glyph)
                                                                                                                                                                                                               ^
src/external/stb_truetype.h:918:208: note: Function 'stbtt_MakeGlyphBitmapSubpixelPrefilter' argument 10 names different: declaration 'oversample_x' definition 'prefilter_x'.
STBTT_DEF void stbtt_MakeGlyphBitmapSubpixelPrefilter(const stbtt_fontinfo *info, unsigned char *output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, float shift_x, float shift_y, int oversample_x, int oversample_y, float *sub_x, float *sub_y, int glyph);
                                                                                                                                                                                                               ^
src/external/stb_truetype.h:4184:208: note: Function 'stbtt_MakeGlyphBitmapSubpixelPrefilter' argument 10 names different: declaration 'oversample_x' definition 'prefilter_x'.
STBTT_DEF void stbtt_MakeGlyphBitmapSubpixelPrefilter(const stbtt_fontinfo *info, unsigned char *output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, float shift_x, float shift_y, int prefilter_x, int prefilter_y, float *sub_x, float *sub_y, int glyph)
                                                                                                                                                                                                               ^
src/external/stb_truetype.h:4184:225: style:inconclusive: Function 'stbtt_MakeGlyphBitmapSubpixelPrefilter' argument 11 names different: declaration 'oversample_y' definition 'prefilter_y'. [funcArgNamesDifferent]
STBTT_DEF void stbtt_MakeGlyphBitmapSubpixelPrefilter(const stbtt_fontinfo *info, unsigned char *output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, float shift_x, float shift_y, int prefilter_x, int prefilter_y, float *sub_x, float *sub_y, int glyph)
                                                                                                                                                                                                                                ^
src/external/stb_truetype.h:918:226: note: Function 'stbtt_MakeGlyphBitmapSubpixelPrefilter' argument 11 names different: declaration 'oversample_y' definition 'prefilter_y'.
STBTT_DEF void stbtt_MakeGlyphBitmapSubpixelPrefilter(const stbtt_fontinfo *info, unsigned char *output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, float shift_x, float shift_y, int oversample_x, int oversample_y, float *sub_x, float *sub_y, int glyph);
                                                                                                                                                                                                                                 ^
src/external/stb_truetype.h:4184:225: note: Function 'stbtt_MakeGlyphBitmapSubpixelPrefilter' argument 11 names different: declaration 'oversample_y' definition 'prefilter_y'.
STBTT_DEF void stbtt_MakeGlyphBitmapSubpixelPrefilter(const stbtt_fontinfo *info, unsigned char *output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, float shift_x, float shift_y, int prefilter_x, int prefilter_y, float *sub_x, float *sub_y, int glyph)
                                                                                                                                                                                                                                ^
src/external/stb_truetype.h:4339:17: style:inconclusive: Function 'stbtt_PackFontRange' argument 5 names different: declaration 'first_unicode_char_in_range' definition 'first_unicode_codepoint_in_range'. [funcArgNamesDifferent]
            int first_unicode_codepoint_in_range, int num_chars_in_range, stbtt_packedchar *chardata_for_range)
                ^
src/external/stb_truetype.h:605:37: note: Function 'stbtt_PackFontRange' argument 5 names different: declaration 'first_unicode_char_in_range' definition 'first_unicode_codepoint_in_range'.
                                int first_unicode_char_in_range, int num_chars_in_range, stbtt_packedchar *chardata_for_range);
                                    ^
src/external/stb_truetype.h:4339:17: note: Function 'stbtt_PackFontRange' argument 5 names different: declaration 'first_unicode_char_in_range' definition 'first_unicode_codepoint_in_range'.
            int first_unicode_codepoint_in_range, int num_chars_in_range, stbtt_packedchar *chardata_for_range)
                ^
src/rtext.c:679:61: style:inconclusive: Function 'GenImageFontAtlas' argument 2 names different: declaration 'recs' definition 'charRecs'. [funcArgNamesDifferent]
Image GenImageFontAtlas(const GlyphInfo *chars, Rectangle **charRecs, int glyphCount, int fontSize, int padding, int packMethod)
                                                            ^
src/raylib.h:1359:67: note: Function 'GenImageFontAtlas' argument 2 names different: declaration 'recs' definition 'charRecs'.
RLAPI Image GenImageFontAtlas(const GlyphInfo *chars, Rectangle **recs, int glyphCount, int fontSize, int padding, int packMethod); // Generate image font atlas using chars info
                                                                  ^
src/rtext.c:679:61: note: Function 'GenImageFontAtlas' argument 2 names different: declaration 'recs' definition 'charRecs'.
Image GenImageFontAtlas(const GlyphInfo *chars, Rectangle **charRecs, int glyphCount, int fontSize, int padding, int packMethod)
                                                            ^
src/rtext.c:844:32: style:inconclusive: Function 'UnloadFontData' argument 1 names different: declaration 'chars' definition 'glyphs'. [funcArgNamesDifferent]
void UnloadFontData(GlyphInfo *glyphs, int glyphCount)
                               ^
src/raylib.h:1360:38: note: Function 'UnloadFontData' argument 1 names different: declaration 'chars' definition 'glyphs'.
RLAPI void UnloadFontData(GlyphInfo *chars, int glyphCount);                                // Unload font chars info data (RAM)
                                     ^
src/rtext.c:844:32: note: Function 'UnloadFontData' argument 1 names different: declaration 'chars' definition 'glyphs'.
void UnloadFontData(GlyphInfo *glyphs, int glyphCount)
                               ^
src/rtext.c:1007:15: style: Variable 'byteCount' is assigned a value that is never used. [unreadVariable]
    byteCount += sprintf(txtData + byteCount, "}\n");
              ^
src/rtext.c:1201:16: style: Variable 'letter' is assigned a value that is never used. [unreadVariable]
    int letter = 0;                 // Current character
               ^
src/rtext.c:1202:15: style: Variable 'index' is assigned a value that is never used. [unreadVariable]
    int index = 0;                  // Index position in sprite font
              ^
src/rtext.c:1428:24: style: Variable 'lastReplacePos' is assigned a value that is never used. [unreadVariable]
    int lastReplacePos = 0;     // Distance between replace and end of last replace
                       ^
src/rtextures.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 147 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/external/stb_image_write.h:1378:16: style: Array index 'i' is used before limits check. [arrayIndexThenCheck]
      for (; DU[i]==0 && i<=end0pos; ++i) {
               ^
src/external/stb_image_write.h:1068:42: warning: The address of local variable 'o' might be accessed at non-zero index. [objectIndex]
      crc = (crc >> 8) ^ crc_table[buffer[i] ^ (crc & 0xff)];
                                         ^
src/external/stb_image_write.h:1196:17: note: Address of variable taken here.
   stbiw__wpcrc(&o,13);
                ^
src/external/stb_image_write.h:1196:17: note: Calling function 'stbiw__wpcrc', 1st argument '&o' value is lifetime=o
   stbiw__wpcrc(&o,13);
                ^
src/external/stb_image_write.h:1079:48: note: Calling function 'stbiw__crc32', 1st argument '*data-len-4' value is lifetime=o
   unsigned int crc = stbiw__crc32(*data - len - 4, len+4);
                                               ^
src/external/stb_image_write.h:1068:42: note: The address of local variable 'o' might be accessed at non-zero index.
      crc = (crc >> 8) ^ crc_table[buffer[i] ^ (crc & 0xff)];
                                         ^
src/external/stb_image_write.h:1080:4: error: The address of local variable 'o' is accessed at non-zero index. [objectIndex]
   stbiw__wp32(*data, crc);
   ^
src/external/stb_image_write.h:1196:17: note: Address of variable taken here.
   stbiw__wpcrc(&o,13);
                ^
src/external/stb_image_write.h:1196:17: note: Calling function 'stbiw__wpcrc', 1st argument '&o' value is lifetime=o
   stbiw__wpcrc(&o,13);
                ^
src/external/stb_image_write.h:1080:4: note: The address of local variable 'o' is accessed at non-zero index.
   stbiw__wp32(*data, crc);
   ^
src/external/stb_image_write.h:1080:4: error: The address of local variable 'o' is accessed at non-zero index. [objectIndex]
   stbiw__wp32(*data, crc);
   ^
src/external/stb_image_write.h:1203:17: note: Address of variable taken here.
   stbiw__wpcrc(&o, zlen);
                ^
src/external/stb_image_write.h:1203:17: note: Calling function 'stbiw__wpcrc', 1st argument '&o' value is lifetime=o
   stbiw__wpcrc(&o, zlen);
                ^
src/external/stb_image_write.h:1080:4: note: The address of local variable 'o' is accessed at non-zero index.
   stbiw__wp32(*data, crc);
   ^
src/external/stb_image_write.h:1080:4: error: The address of local variable 'o' is accessed at non-zero index. [objectIndex]
   stbiw__wp32(*data, crc);
   ^
src/external/stb_image_write.h:1207:17: note: Address of variable taken here.
   stbiw__wpcrc(&o,0);
                ^
src/external/stb_image_write.h:1207:17: note: Calling function 'stbiw__wpcrc', 1st argument '&o' value is lifetime=o
   stbiw__wpcrc(&o,0);
                ^
src/external/stb_image_write.h:1080:4: note: The address of local variable 'o' is accessed at non-zero index.
   stbiw__wp32(*data, crc);
   ^
src/external/stb_image.h:7267:30: style: Condition 'count==0' is always false [knownConditionTrueFalse]
                  if ((count == 0) || (count > nleft)) { STBI_FREE(hdr_data); STBI_FREE(scanline); return stbi__errpf("corrupt", "bad RLE data in HDR"); }
                             ^
src/external/stb_image.h:7263:26: note: Assuming that condition 'count>128' is not redundant
               if (count > 128) {
                         ^
src/external/stb_image.h:7266:19: note: Compound assignment '-=', assigned value is 0
                  count -= 128;
                  ^
src/external/stb_image.h:7267:30: note: Condition 'count==0' is always false
                  if ((count == 0) || (count > nleft)) { STBI_FREE(hdr_data); STBI_FREE(scanline); return stbi__errpf("corrupt", "bad RLE data in HDR"); }
                             ^
src/external/stb_image_write.h:836:4: error: Memory leak: p [memleak]
   return *arr;
   ^
src/external/stb_image_write.h:913:4: warning: Either the condition '(out)==0' is redundant or there is possible null pointer dereference: out. [nullPointerRedundantCheck]
   stbiw__sbpush(out, 0x78);   // DEFLATE 32K window
   ^
src/external/stb_image_write.h:914:4: note: Assuming that condition '(out)==0' is not redundant
   stbiw__sbpush(out, 0x5e);   // FLEVEL = 1
   ^
src/external/stb_image_write.h:913:4: note: Null pointer dereference
   stbiw__sbpush(out, 0x78);   // DEFLATE 32K window
   ^
src/external/stb_image_write.h:926:23: warning: Either the condition 'hash_table[h]' is redundant or there is possible null pointer dereference: hlist. [nullPointerRedundantCheck]
      unsigned char **hlist = hash_table[h];
                      ^
src/external/stb_image_write.h:935:21: note: Assuming that condition 'hash_table[h]' is not redundant
      if (hash_table[h] && stbiw__sbn(hash_table[h]) == 2*quality) {
                    ^
src/external/stb_image_write.h:926:23: note: Null pointer dereference
      unsigned char **hlist = hash_table[h];
                      ^
src/external/stb_image_write.h:990:10: warning: Either the condition '(out)==0' is redundant or there is possible null pointer dereference: out. [nullPointerRedundantCheck]
         stbiw__sbpush(out, data_len - j == blocklen); // BFINAL = ?, BTYPE = 0 -- no compression
         ^
src/external/stb_image_write.h:991:10: note: Assuming that condition '(out)==0' is not redundant
         stbiw__sbpush(out, STBIW_UCHAR(blocklen)); // LEN
         ^
src/external/stb_image_write.h:990:10: note: Null pointer dereference
         stbiw__sbpush(out, data_len - j == blocklen); // BFINAL = ?, BTYPE = 0 -- no compression
         ^
src/external/stb_image_write.h:991:10: warning: Either the condition '(out)==0' is redundant or there is possible null pointer dereference: out. [nullPointerRedundantCheck]
         stbiw__sbpush(out, STBIW_UCHAR(blocklen)); // LEN
         ^
src/external/stb_image_write.h:992:10: note: Assuming that condition '(out)==0' is not redundant
         stbiw__sbpush(out, STBIW_UCHAR(blocklen >> 8));
         ^
src/external/stb_image_write.h:991:10: note: Null pointer dereference
         stbiw__sbpush(out, STBIW_UCHAR(blocklen)); // LEN
         ^
src/external/stb_image_write.h:992:10: warning: Either the condition '(out)==0' is redundant or there is possible null pointer dereference: out. [nullPointerRedundantCheck]
         stbiw__sbpush(out, STBIW_UCHAR(blocklen >> 8));
         ^
src/external/stb_image_write.h:993:10: note: Assuming that condition '(out)==0' is not redundant
         stbiw__sbpush(out, STBIW_UCHAR(~blocklen)); // NLEN
         ^
src/external/stb_image_write.h:992:10: note: Null pointer dereference
         stbiw__sbpush(out, STBIW_UCHAR(blocklen >> 8));
         ^
src/external/stb_image_write.h:993:10: warning: Either the condition '(out)==0' is redundant or there is possible null pointer dereference: out. [nullPointerRedundantCheck]
         stbiw__sbpush(out, STBIW_UCHAR(~blocklen)); // NLEN
         ^
src/external/stb_image_write.h:994:10: note: Assuming that condition '(out)==0' is not redundant
         stbiw__sbpush(out, STBIW_UCHAR(~blocklen >> 8));
         ^
src/external/stb_image_write.h:993:10: note: Null pointer dereference
         stbiw__sbpush(out, STBIW_UCHAR(~blocklen)); // NLEN
         ^
src/external/stb_image_write.h:1012:7: warning: Either the condition '(out)==0' is redundant or there is possible null pointer dereference: out. [nullPointerRedundantCheck]
      stbiw__sbpush(out, STBIW_UCHAR(s2 >> 8));
      ^
src/external/stb_image_write.h:1013:7: note: Assuming that condition '(out)==0' is not redundant
      stbiw__sbpush(out, STBIW_UCHAR(s2));
      ^
src/external/stb_image_write.h:1012:7: note: Null pointer dereference
      stbiw__sbpush(out, STBIW_UCHAR(s2 >> 8));
      ^
src/external/stb_image_write.h:1013:7: warning: Either the condition '(out)==0' is redundant or there is possible null pointer dereference: out. [nullPointerRedundantCheck]
      stbiw__sbpush(out, STBIW_UCHAR(s2));
      ^
src/external/stb_image_write.h:1014:7: note: Assuming that condition '(out)==0' is not redundant
      stbiw__sbpush(out, STBIW_UCHAR(s1 >> 8));
      ^
src/external/stb_image_write.h:1013:7: note: Null pointer dereference
      stbiw__sbpush(out, STBIW_UCHAR(s2));
      ^
src/external/stb_image_write.h:1014:7: warning: Either the condition '(out)==0' is redundant or there is possible null pointer dereference: out. [nullPointerRedundantCheck]
      stbiw__sbpush(out, STBIW_UCHAR(s1 >> 8));
      ^
src/external/stb_image_write.h:1015:7: note: Assuming that condition '(out)==0' is not redundant
      stbiw__sbpush(out, STBIW_UCHAR(s1));
      ^
src/external/stb_image_write.h:1014:7: note: Null pointer dereference
      stbiw__sbpush(out, STBIW_UCHAR(s1 >> 8));
      ^
src/external/stb_image_write.h:913:4: warning: Either the condition '(out)==0' is redundant or there is overflow in pointer subtraction. [nullPointerArithmeticRedundantCheck]
   stbiw__sbpush(out, 0x78);   // DEFLATE 32K window
   ^
src/external/stb_image_write.h:914:4: note: Assuming that condition '(out)==0' is not redundant
   stbiw__sbpush(out, 0x5e);   // FLEVEL = 1
   ^
src/external/stb_image_write.h:913:4: note: Null pointer subtraction
   stbiw__sbpush(out, 0x78);   // DEFLATE 32K window
   ^
src/external/stb_image_write.h:990:10: warning: Either the condition '(out)==0' is redundant or there is overflow in pointer subtraction. [nullPointerArithmeticRedundantCheck]
         stbiw__sbpush(out, data_len - j == blocklen); // BFINAL = ?, BTYPE = 0 -- no compression
         ^
src/external/stb_image_write.h:991:10: note: Assuming that condition '(out)==0' is not redundant
         stbiw__sbpush(out, STBIW_UCHAR(blocklen)); // LEN
         ^
src/external/stb_image_write.h:990:10: note: Null pointer subtraction
         stbiw__sbpush(out, data_len - j == blocklen); // BFINAL = ?, BTYPE = 0 -- no compression
         ^
src/external/stb_image_write.h:991:10: warning: Either the condition '(out)==0' is redundant or there is overflow in pointer subtraction. [nullPointerArithmeticRedundantCheck]
         stbiw__sbpush(out, STBIW_UCHAR(blocklen)); // LEN
         ^
src/external/stb_image_write.h:992:10: note: Assuming that condition '(out)==0' is not redundant
         stbiw__sbpush(out, STBIW_UCHAR(blocklen >> 8));
         ^
src/external/stb_image_write.h:991:10: note: Null pointer subtraction
         stbiw__sbpush(out, STBIW_UCHAR(blocklen)); // LEN
         ^
src/external/stb_image_write.h:992:10: warning: Either the condition '(out)==0' is redundant or there is overflow in pointer subtraction. [nullPointerArithmeticRedundantCheck]
         stbiw__sbpush(out, STBIW_UCHAR(blocklen >> 8));
         ^
src/external/stb_image_write.h:993:10: note: Assuming that condition '(out)==0' is not redundant
         stbiw__sbpush(out, STBIW_UCHAR(~blocklen)); // NLEN
         ^
src/external/stb_image_write.h:992:10: note: Null pointer subtraction
         stbiw__sbpush(out, STBIW_UCHAR(blocklen >> 8));
         ^
src/external/stb_image_write.h:993:10: warning: Either the condition '(out)==0' is redundant or there is overflow in pointer subtraction. [nullPointerArithmeticRedundantCheck]
         stbiw__sbpush(out, STBIW_UCHAR(~blocklen)); // NLEN
         ^
src/external/stb_image_write.h:994:10: note: Assuming that condition '(out)==0' is not redundant
         stbiw__sbpush(out, STBIW_UCHAR(~blocklen >> 8));
         ^
src/external/stb_image_write.h:993:10: note: Null pointer subtraction
         stbiw__sbpush(out, STBIW_UCHAR(~blocklen)); // NLEN
         ^
src/external/stb_image_write.h:1012:7: warning: Either the condition '(out)==0' is redundant or there is overflow in pointer subtraction. [nullPointerArithmeticRedundantCheck]
      stbiw__sbpush(out, STBIW_UCHAR(s2 >> 8));
      ^
src/external/stb_image_write.h:1013:7: note: Assuming that condition '(out)==0' is not redundant
      stbiw__sbpush(out, STBIW_UCHAR(s2));
      ^
src/external/stb_image_write.h:1012:7: note: Null pointer subtraction
      stbiw__sbpush(out, STBIW_UCHAR(s2 >> 8));
      ^
src/external/stb_image_write.h:1013:7: warning: Either the condition '(out)==0' is redundant or there is overflow in pointer subtraction. [nullPointerArithmeticRedundantCheck]
      stbiw__sbpush(out, STBIW_UCHAR(s2));
      ^
src/external/stb_image_write.h:1014:7: note: Assuming that condition '(out)==0' is not redundant
      stbiw__sbpush(out, STBIW_UCHAR(s1 >> 8));
      ^
src/external/stb_image_write.h:1013:7: note: Null pointer subtraction
      stbiw__sbpush(out, STBIW_UCHAR(s2));
      ^
src/external/stb_image_write.h:1014:7: warning: Either the condition '(out)==0' is redundant or there is overflow in pointer subtraction. [nullPointerArithmeticRedundantCheck]
      stbiw__sbpush(out, STBIW_UCHAR(s1 >> 8));
      ^
src/external/stb_image_write.h:1015:7: note: Assuming that condition '(out)==0' is not redundant
      stbiw__sbpush(out, STBIW_UCHAR(s1));
      ^
src/external/stb_image_write.h:1014:7: note: Null pointer subtraction
      stbiw__sbpush(out, STBIW_UCHAR(s1 >> 8));
      ^
src/external/stb_image_resize.h:2379:35: portability:inconclusive: Casting from float * to unsigned char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    info->vertical_contributors = STBIR__NEXT_MEMPTR(info->horizontal_coefficients, stbir__contributors);
                                  ^
src/external/stb_image_resize.h:2381:27: portability:inconclusive: Casting from float * to unsigned char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    info->decode_buffer = STBIR__NEXT_MEMPTR(info->vertical_coefficients, float);
                          ^
src/external/stb_image_resize.h:2386:29: portability:inconclusive: Casting from float * to unsigned char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
        info->ring_buffer = STBIR__NEXT_MEMPTR(info->decode_buffer, float);
                            ^
src/external/stb_image_resize.h:2387:31: portability:inconclusive: Casting from float * to unsigned char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
        info->encode_buffer = STBIR__NEXT_MEMPTR(info->ring_buffer, float);
                              ^
src/external/stb_image_resize.h:2389:9: portability:inconclusive: Casting from float * to unsigned char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
        STBIR_ASSERT((size_t)STBIR__NEXT_MEMPTR(info->encode_buffer, unsigned char) == (size_t)tempmem + tempmem_size_in_bytes);
        ^
src/external/stb_image_resize.h:2393:35: portability:inconclusive: Casting from float * to unsigned char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
        info->horizontal_buffer = STBIR__NEXT_MEMPTR(info->decode_buffer, float);
                                  ^
src/external/stb_image_resize.h:2394:29: portability:inconclusive: Casting from float * to unsigned char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
        info->ring_buffer = STBIR__NEXT_MEMPTR(info->horizontal_buffer, float);
                            ^
src/external/stb_image_resize.h:2397:9: portability:inconclusive: Casting from float * to unsigned char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
        STBIR_ASSERT((size_t)STBIR__NEXT_MEMPTR(info->ring_buffer, unsigned char) == (size_t)tempmem + tempmem_size_in_bytes);
        ^
src/external/stb_image.h:7113:6: style: Redundant initialization for 'c'. The initialized value is overwritten before it is read. [redundantInitialization]
   c = (char) stbi__get8(z);
     ^
src/external/stb_image.h:7111:11: note: c is initialized
   char c = '\0';
          ^
src/external/stb_image.h:7113:6: note: c is overwritten
   c = (char) stbi__get8(z);
     ^
src/external/stb_image.h:1185:11: style: Same value in both branches of ternary operator. [duplicateValueTernary]
   return stbi__errpuc("unknown image type", "Image not of any known type, or corrupt");
          ^
src/external/stb_image.h:1195:32: style: Same value in both branches of ternary operator. [duplicateValueTernary]
   if (reduced == NULL) return stbi__errpuc("outofmem", "Out of memory");
                               ^
src/external/stb_image.h:1211:50: style: Same value in both branches of ternary operator. [duplicateValueTernary]
   if (enlarged == NULL) return (stbi__uint16 *) stbi__errpuc("outofmem", "Out of memory");
                                                 ^
src/external/stb_image.h:1368:19: style: Same value in both branches of ternary operator. [duplicateValueTernary]
   if (!f) return stbi__errpuc("can't fopen", "Unable to open file");
                  ^
src/external/stb_image.h:1404:31: style: Same value in both branches of ternary operator. [duplicateValueTernary]
   if (!f) return (stbi_us *) stbi__errpuc("can't fopen", "Unable to open file");
                              ^
src/external/stb_image.h:1473:11: style: Same value in both branches of ternary operator. [duplicateValueTernary]
   return stbi__errpf("unknown image type", "Image not of any known type, or corrupt");
          ^
src/external/stb_image.h:1495:19: style: Same value in both branches of ternary operator. [duplicateValueTernary]
   if (!f) return stbi__errpf("can't fopen", "Unable to open file");
                  ^
src/external/stb_image.h:1764:14: style: Same value in both branches of ternary operator. [duplicateValueTernary]
      return stbi__errpuc("outofmem", "Out of memory");
             ^
src/external/stb_image.h:1788:76: style: Same value in both branches of ternary operator. [duplicateValueTernary]
         default: STBI_ASSERT(0); STBI_FREE(data); STBI_FREE(good); return stbi__errpuc("unsupported", "Unsupported format conversion");
                                                                           ^
src/external/stb_image.h:1821:31: style: Same value in both branches of ternary operator. [duplicateValueTernary]
      return (stbi__uint16 *) stbi__errpuc("outofmem", "Out of memory");
                              ^
src/external/stb_image.h:1845:92: style: Same value in both branches of ternary operator. [duplicateValueTernary]
         default: STBI_ASSERT(0); STBI_FREE(data); STBI_FREE(good); return (stbi__uint16*) stbi__errpuc("unsupported", "Unsupported format conversion");
                                                                                           ^
src/external/stb_image.h:1862:50: style: Same value in both branches of ternary operator. [duplicateValueTernary]
   if (output == NULL) { STBI_FREE(data); return stbi__errpf("outofmem", "Out of memory"); }
                                                 ^
src/external/stb_image.h:1888:50: style: Same value in both branches of ternary operator. [duplicateValueTernary]
   if (output == NULL) { STBI_FREE(data); return stbi__errpuc("outofmem", "Out of memory"); }
                                                 ^
src/external/stb_image.h:5265:45: style: Same value in both branches of ternary operator. [duplicateValueTernary]
   if (req_comp < 0 || req_comp > 4) return stbi__errpuc("bad req_comp", "Internal error");
                                            ^
src/external/stb_image.h:5272:17: style: Same value in both branches of ternary operator. [duplicateValueTernary]
         return stbi__errpuc("bad bits_per_channel", "PNG not supported: unsupported color depth");
                ^
src/external/stb_image.h:6745:23: style: Same value in both branches of ternary operator. [duplicateValueTernary]
               return stbi__errpuc("no clear code", "Corrupt GIF");
                      ^
src/external/stb_image.h:6751:26: style: Same value in both branches of ternary operator. [duplicateValueTernary]
                  return stbi__errpuc("too many codes", "Corrupt GIF");
                         ^
src/external/stb_image.h:6758:23: style: Same value in both branches of ternary operator. [duplicateValueTernary]
               return stbi__errpuc("illegal code in raster", "Corrupt GIF");
                      ^
src/external/stb_image.h:6769:20: style: Same value in both branches of ternary operator. [duplicateValueTernary]
            return stbi__errpuc("illegal code in raster", "Corrupt GIF");
                   ^
src/external/stb_image.h:6790:17: style: Same value in both branches of ternary operator. [duplicateValueTernary]
         return stbi__errpuc("too large", "GIF image is too large");
                ^
src/external/stb_image.h:6796:17: style: Same value in both branches of ternary operator. [duplicateValueTernary]
         return stbi__errpuc("outofmem", "Out of memory");
                ^
src/external/stb_image.h:6854:23: style: Same value in both branches of ternary operator. [duplicateValueTernary]
               return stbi__errpuc("bad Image Descriptor", "Corrupt GIF");
                      ^
src/external/stb_image.h:6887:23: style: Same value in both branches of ternary operator. [duplicateValueTernary]
               return stbi__errpuc("missing color table", "Corrupt GIF");
                      ^
src/external/stb_image.h:6946:20: style: Same value in both branches of ternary operator. [duplicateValueTernary]
            return stbi__errpuc("unknown code", "Corrupt GIF");
                   ^
src/external/stb_image.h:6959:11: style: Same value in both branches of ternary operator. [duplicateValueTernary]
   return stbi__errpuc("outofmem", "Out of memory");
          ^
src/external/stb_image.h:7043:14: style: Same value in both branches of ternary operator. [duplicateValueTernary]
      return stbi__errpuc("not GIF", "Image was not as a gif type.");
             ^
src/external/stb_image.h:7174:14: style: Same value in both branches of ternary operator. [duplicateValueTernary]
      return stbi__errpf("not HDR", "Corrupt HDR image");
             ^
src/external/stb_image.h:7183:26: style: Same value in both branches of ternary operator. [duplicateValueTernary]
   if (!valid)    return stbi__errpf("unsupported format", "Unsupported HDR format");
                         ^
src/external/stb_image.h:7188:42: style: Same value in both branches of ternary operator. [duplicateValueTernary]
   if (strncmp(token, "-Y ", 3))  return stbi__errpf("unsupported data layout", "Unsupported HDR format");
                                         ^
src/external/stb_image.h:7192:42: style: Same value in both branches of ternary operator. [duplicateValueTernary]
   if (strncmp(token, "+X ", 3))  return stbi__errpf("unsupported data layout", "Unsupported HDR format");
                                         ^
src/external/stb_image.h:7196:45: style: Same value in both branches of ternary operator. [duplicateValueTernary]
   if (height > STBI_MAX_DIMENSIONS) return stbi__errpf("too large","Very large image (corrupt?)");
                                            ^
src/external/stb_image.h:7197:44: style: Same value in both branches of ternary operator. [duplicateValueTernary]
   if (width > STBI_MAX_DIMENSIONS) return stbi__errpf("too large","Very large image (corrupt?)");
                                           ^
src/external/stb_image.h:7206:14: style: Same value in both branches of ternary operator. [duplicateValueTernary]
      return stbi__errpf("too large", "HDR image is too large");
             ^
src/external/stb_image.h:7211:14: style: Same value in both branches of ternary operator. [duplicateValueTernary]
      return stbi__errpf("outofmem", "Out of memory");
             ^
src/external/stb_image.h:7249:79: style: Same value in both branches of ternary operator. [duplicateValueTernary]
         if (len != width) { STBI_FREE(hdr_data); STBI_FREE(scanline); return stbi__errpf("invalid decoded scanline length", "corrupt HDR"); }
                                                                              ^
src/external/stb_image.h:7254:23: style: Same value in both branches of ternary operator. [duplicateValueTernary]
               return stbi__errpf("outofmem", "Out of memory");
                      ^
src/external/stb_image.h:7267:107: style: Same value in both branches of ternary operator. [duplicateValueTernary]
                  if ((count == 0) || (count > nleft)) { STBI_FREE(hdr_data); STBI_FREE(scanline); return stbi__errpf("corrupt", "bad RLE data in HDR"); }
                                                                                                          ^
src/external/stb_image.h:7272:107: style: Same value in both branches of ternary operator. [duplicateValueTernary]
                  if ((count == 0) || (count > nleft)) { STBI_FREE(hdr_data); STBI_FREE(scanline); return stbi__errpf("corrupt", "bad RLE data in HDR"); }
                                                                                                          ^
src/external/stb_image.h:4242:10: style: The scope of the variable 's' can be reduced. [variableScope]
   int b,s;
         ^
src/external/stb_image.h:4462:15: style: The scope of the variable 'type' can be reduced. [variableScope]
   int final, type;
              ^
src/external/stb_image.h:4879:11: style: The scope of the variable 'i' can be reduced. [variableScope]
      int i,j,x,y;
          ^
src/external/stb_image.h:4879:13: style: The scope of the variable 'j' can be reduced. [variableScope]
      int i,j,x,y;
            ^
src/external/stb_image.h:6779:8: style: The scope of the variable 'dispose' can be reduced. [variableScope]
   int dispose;
       ^
src/external/rl_gputex.h:109:9: style: The scope of the variable 'image_pixel_size' can be reduced. [variableScope]
    int image_pixel_size = 0;       // Image pixel size
        ^
src/external/rl_gputex.h:199:39: style: The scope of the variable 'alpha' can be reduced. [variableScope]
                        unsigned char alpha = 0;
                                      ^
src/external/rl_gputex.h:218:39: style: The scope of the variable 'alpha' can be reduced. [variableScope]
                        unsigned char alpha = 0;
                                      ^
src/external/rl_gputex.h:248:31: style: The scope of the variable 'blue' can be reduced. [variableScope]
                unsigned char blue = 0;
                              ^
src/external/stb_image_write.h:420:42: style: The scope of the variable 'px' can be reduced. [variableScope]
   unsigned char bg[3] = { 255, 0, 255}, px[3];
                                         ^
src/external/stb_image_write.h:421:8: style: The scope of the variable 'k' can be reduced. [variableScope]
   int k;
       ^
src/external/stb_image_write.h:1152:61: style: The scope of the variable 'est' can be reduced. [variableScope]
         int best_filter = 0, best_filter_val = 0x7fffffff, est, i;
                                                            ^
src/external/stb_image_resize.h:1131:9: style: The scope of the variable 'skip' can be reduced. [variableScope]
    int skip;
        ^
src/rtextures.c:1107:35: style: The scope of the variable 'r' can be reduced. [variableScope]
                    unsigned char r = 0;
                                  ^
src/rtextures.c:1108:35: style: The scope of the variable 'g' can be reduced. [variableScope]
                    unsigned char g = 0;
                                  ^
src/rtextures.c:1109:35: style: The scope of the variable 'b' can be reduced. [variableScope]
                    unsigned char b = 0;
                                  ^
src/rtextures.c:1136:35: style: The scope of the variable 'r' can be reduced. [variableScope]
                    unsigned char r = 0;
                                  ^
src/rtextures.c:1137:35: style: The scope of the variable 'g' can be reduced. [variableScope]
                    unsigned char g = 0;
                                  ^
src/rtextures.c:1138:35: style: The scope of the variable 'b' can be reduced. [variableScope]
                    unsigned char b = 0;
                                  ^
src/rtextures.c:1139:35: style: The scope of the variable 'a' can be reduced. [variableScope]
                    unsigned char a = 0;
                                  ^
src/rtextures.c:1156:35: style: The scope of the variable 'r' can be reduced. [variableScope]
                    unsigned char r = 0;
                                  ^
src/rtextures.c:1157:35: style: The scope of the variable 'g' can be reduced. [variableScope]
                    unsigned char g = 0;
                                  ^
src/rtextures.c:1158:35: style: The scope of the variable 'b' can be reduced. [variableScope]
                    unsigned char b = 0;
                                  ^
src/rtextures.c:1159:35: style: The scope of the variable 'a' can be reduced. [variableScope]
                    unsigned char a = 0;
                                  ^
src/external/stb_image.h:1364:71: style:inconclusive: Function 'stbi_load' argument 4 names different: declaration 'channels_in_file' definition 'comp'. [funcArgNamesDifferent]
STBIDEF stbi_uc *stbi_load(char const *filename, int *x, int *y, int *comp, int req_comp)
                                                                      ^
src/external/stb_image.h:425:83: note: Function 'stbi_load' argument 4 names different: declaration 'channels_in_file' definition 'comp'.
STBIDEF stbi_uc *stbi_load            (char const *filename, int *x, int *y, int *channels_in_file, int desired_channels);
                                                                                  ^
src/external/stb_image.h:1364:71: note: Function 'stbi_load' argument 4 names different: declaration 'channels_in_file' definition 'comp'.
STBIDEF stbi_uc *stbi_load(char const *filename, int *x, int *y, int *comp, int req_comp)
                                                                      ^
src/external/stb_image.h:1364:81: style:inconclusive: Function 'stbi_load' argument 5 names different: declaration 'desired_channels' definition 'req_comp'. [funcArgNamesDifferent]
STBIDEF stbi_uc *stbi_load(char const *filename, int *x, int *y, int *comp, int req_comp)
                                                                                ^
src/external/stb_image.h:425:105: note: Function 'stbi_load' argument 5 names different: declaration 'desired_channels' definition 'req_comp'.
STBIDEF stbi_uc *stbi_load            (char const *filename, int *x, int *y, int *channels_in_file, int desired_channels);
                                                                                                        ^
src/external/stb_image.h:1364:81: note: Function 'stbi_load' argument 5 names different: declaration 'desired_channels' definition 'req_comp'.
STBIDEF stbi_uc *stbi_load(char const *filename, int *x, int *y, int *comp, int req_comp)
                                                                                ^
src/external/stb_image.h:1374:68: style:inconclusive: Function 'stbi_load_from_file' argument 4 names different: declaration 'channels_in_file' definition 'comp'. [funcArgNamesDifferent]
STBIDEF stbi_uc *stbi_load_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)
                                                                   ^
src/external/stb_image.h:426:70: note: Function 'stbi_load_from_file' argument 4 names different: declaration 'channels_in_file' definition 'comp'.
STBIDEF stbi_uc *stbi_load_from_file  (FILE *f, int *x, int *y, int *channels_in_file, int desired_channels);
                                                                     ^
src/external/stb_image.h:1374:68: note: Function 'stbi_load_from_file' argument 4 names different: declaration 'channels_in_file' definition 'comp'.
STBIDEF stbi_uc *stbi_load_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)
                                                                   ^
src/external/stb_image.h:1374:78: style:inconclusive: Function 'stbi_load_from_file' argument 5 names different: declaration 'desired_channels' definition 'req_comp'. [funcArgNamesDifferent]
STBIDEF stbi_uc *stbi_load_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)
                                                                             ^
src/external/stb_image.h:426:92: note: Function 'stbi_load_from_file' argument 5 names different: declaration 'desired_channels' definition 'req_comp'.
STBIDEF stbi_uc *stbi_load_from_file  (FILE *f, int *x, int *y, int *channels_in_file, int desired_channels);
                                                                                           ^
src/external/stb_image.h:1374:78: note: Function 'stbi_load_from_file' argument 5 names different: declaration 'desired_channels' definition 'req_comp'.
STBIDEF stbi_uc *stbi_load_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)
                                                                             ^
src/external/stb_image.h:1387:76: style:inconclusive: Function 'stbi_load_from_file_16' argument 4 names different: declaration 'channels_in_file' definition 'comp'. [funcArgNamesDifferent]
STBIDEF stbi__uint16 *stbi_load_from_file_16(FILE *f, int *x, int *y, int *comp, int req_comp)
                                                                           ^
src/external/stb_image.h:448:71: note: Function 'stbi_load_from_file_16' argument 4 names different: declaration 'channels_in_file' definition 'comp'.
STBIDEF stbi_us *stbi_load_from_file_16(FILE *f, int *x, int *y, int *channels_in_file, int desired_channels);
                                                                      ^
src/external/stb_image.h:1387:76: note: Function 'stbi_load_from_file_16' argument 4 names different: declaration 'channels_in_file' definition 'comp'.
STBIDEF stbi__uint16 *stbi_load_from_file_16(FILE *f, int *x, int *y, int *comp, int req_comp)
                                                                           ^
src/external/stb_image.h:1387:86: style:inconclusive: Function 'stbi_load_from_file_16' argument 5 names different: declaration 'desired_channels' definition 'req_comp'. [funcArgNamesDifferent]
STBIDEF stbi__uint16 *stbi_load_from_file_16(FILE *f, int *x, int *y, int *comp, int req_comp)
                                                                                     ^
src/external/stb_image.h:448:93: note: Function 'stbi_load_from_file_16' argument 5 names different: declaration 'desired_channels' definition 'req_comp'.
STBIDEF stbi_us *stbi_load_from_file_16(FILE *f, int *x, int *y, int *channels_in_file, int desired_channels);
                                                                                            ^
src/external/stb_image.h:1387:86: note: Function 'stbi_load_from_file_16' argument 5 names different: declaration 'desired_channels' definition 'req_comp'.
STBIDEF stbi__uint16 *stbi_load_from_file_16(FILE *f, int *x, int *y, int *comp, int req_comp)
                                                                                     ^
src/external/stb_image.h:1400:74: style:inconclusive: Function 'stbi_load_16' argument 4 names different: declaration 'channels_in_file' definition 'comp'. [funcArgNamesDifferent]
STBIDEF stbi_us *stbi_load_16(char const *filename, int *x, int *y, int *comp, int req_comp)
                                                                         ^
src/external/stb_image.h:447:84: note: Function 'stbi_load_16' argument 4 names different: declaration 'channels_in_file' definition 'comp'.
STBIDEF stbi_us *stbi_load_16          (char const *filename, int *x, int *y, int *channels_in_file, int desired_channels);
                                                                                   ^
src/external/stb_image.h:1400:74: note: Function 'stbi_load_16' argument 4 names different: declaration 'channels_in_file' definition 'comp'.
STBIDEF stbi_us *stbi_load_16(char const *filename, int *x, int *y, int *comp, int req_comp)
                                                                         ^
src/external/stb_image.h:1400:84: style:inconclusive: Function 'stbi_load_16' argument 5 names different: declaration 'desired_channels' definition 'req_comp'. [funcArgNamesDifferent]
STBIDEF stbi_us *stbi_load_16(char const *filename, int *x, int *y, int *comp, int req_comp)
                                                                                   ^
src/external/stb_image.h:447:106: note: Function 'stbi_load_16' argument 5 names different: declaration 'desired_channels' definition 'req_comp'.
STBIDEF stbi_us *stbi_load_16          (char const *filename, int *x, int *y, int *channels_in_file, int desired_channels);
                                                                                                         ^
src/external/stb_image.h:1400:84: note: Function 'stbi_load_16' argument 5 names different: declaration 'desired_channels' definition 'req_comp'.
STBIDEF stbi_us *stbi_load_16(char const *filename, int *x, int *y, int *comp, int req_comp)
                                                                                   ^
src/external/stb_image.h:1427:93: style:inconclusive: Function 'stbi_load_from_memory' argument 5 names different: declaration 'channels_in_file' definition 'comp'. [funcArgNamesDifferent]
STBIDEF stbi_uc *stbi_load_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)
                                                                                            ^
src/external/stb_image.h:421:109: note: Function 'stbi_load_from_memory' argument 5 names different: declaration 'channels_in_file' definition 'comp'.
STBIDEF stbi_uc *stbi_load_from_memory   (stbi_uc           const *buffer, int len   , int *x, int *y, int *channels_in_file, int desired_channels);
                                                                                                            ^
src/external/stb_image.h:1427:93: note: Function 'stbi_load_from_memory' argument 5 names different: declaration 'channels_in_file' definition 'comp'.
STBIDEF stbi_uc *stbi_load_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)
                                                                                            ^
src/external/stb_image.h:1427:103: style:inconclusive: Function 'stbi_load_from_memory' argument 6 names different: declaration 'desired_channels' definition 'req_comp'. [funcArgNamesDifferent]
STBIDEF stbi_uc *stbi_load_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)
                                                                                                      ^
src/external/stb_image.h:421:131: note: Function 'stbi_load_from_memory' argument 6 names different: declaration 'desired_channels' definition 'req_comp'.
STBIDEF stbi_uc *stbi_load_from_memory   (stbi_uc           const *buffer, int len   , int *x, int *y, int *channels_in_file, int desired_channels);
                                                                                                                                  ^
src/external/stb_image.h:1427:103: note: Function 'stbi_load_from_memory' argument 6 names different: declaration 'desired_channels' definition 'req_comp'.
STBIDEF stbi_uc *stbi_load_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)
                                                                                                      ^
src/external/stb_image.h:1434:107: style:inconclusive: Function 'stbi_load_from_callbacks' argument 5 names different: declaration 'channels_in_file' definition 'comp'. [funcArgNamesDifferent]
STBIDEF stbi_uc *stbi_load_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp, int req_comp)
                                                                                                          ^
src/external/stb_image.h:422:109: note: Function 'stbi_load_from_callbacks' argument 5 names different: declaration 'channels_in_file' definition 'comp'.
STBIDEF stbi_uc *stbi_load_from_callbacks(stbi_io_callbacks const *clbk  , void *user, int *x, int *y, int *channels_in_file, int desired_channels);
                                                                                                            ^
src/external/stb_image.h:1434:107: note: Function 'stbi_load_from_callbacks' argument 5 names different: declaration 'channels_in_file' definition 'comp'.
STBIDEF stbi_uc *stbi_load_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp, int req_comp)
                                                                                                          ^
src/external/stb_image.h:1434:117: style:inconclusive: Function 'stbi_load_from_callbacks' argument 6 names different: declaration 'desired_channels' definition 'req_comp'. [funcArgNamesDifferent]
STBIDEF stbi_uc *stbi_load_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp, int req_comp)
                                                                                                                    ^
src/external/stb_image.h:422:131: note: Function 'stbi_load_from_callbacks' argument 6 names different: declaration 'desired_channels' definition 'req_comp'.
STBIDEF stbi_uc *stbi_load_from_callbacks(stbi_io_callbacks const *clbk  , void *user, int *x, int *y, int *channels_in_file, int desired_channels);
                                                                                                                                  ^
src/external/stb_image.h:1434:117: note: Function 'stbi_load_from_callbacks' argument 6 names different: declaration 'desired_channels' definition 'req_comp'.
STBIDEF stbi_uc *stbi_load_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp, int req_comp)
                                                                                                                    ^
src/external/stb_image.h:1476:92: style:inconclusive: Function 'stbi_loadf_from_memory' argument 5 names different: declaration 'channels_in_file' definition 'comp'. [funcArgNamesDifferent]
STBIDEF float *stbi_loadf_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)
                                                                                           ^
src/external/stb_image.h:456:100: note: Function 'stbi_loadf_from_memory' argument 5 names different: declaration 'channels_in_file' definition 'comp'.
   STBIDEF float *stbi_loadf_from_memory     (stbi_uc const *buffer, int len, int *x, int *y, int *channels_in_file, int desired_channels);
                                                                                                   ^
src/external/stb_image.h:1476:92: note: Function 'stbi_loadf_from_memory' argument 5 names different: declaration 'channels_in_file' definition 'comp'.
STBIDEF float *stbi_loadf_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)
                                                                                           ^
src/external/stb_image.h:1476:102: style:inconclusive: Function 'stbi_loadf_from_memory' argument 6 names different: declaration 'desired_channels' definition 'req_comp'. [funcArgNamesDifferent]
STBIDEF float *stbi_loadf_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)
                                                                                                     ^
src/external/stb_image.h:456:122: note: Function 'stbi_loadf_from_memory' argument 6 names different: declaration 'desired_channels' definition 'req_comp'.
   STBIDEF float *stbi_loadf_from_memory     (stbi_uc const *buffer, int len, int *x, int *y, int *channels_in_file, int desired_channels);
                                                                                                                         ^
src/external/stb_image.h:1476:102: note: Function 'stbi_loadf_from_memory' argument 6 names different: declaration 'desired_channels' definition 'req_comp'.
STBIDEF float *stbi_loadf_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)
                                                                                                     ^
src/external/stb_image.h:1483:106: style:inconclusive: Function 'stbi_loadf_from_callbacks' argument 5 names different: declaration 'channels_in_file' definition 'comp'. [funcArgNamesDifferent]
STBIDEF float *stbi_loadf_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp, int req_comp)
                                                                                                         ^
src/external/stb_image.h:457:112: note: Function 'stbi_loadf_from_callbacks' argument 5 names different: declaration 'channels_in_file' definition 'comp'.
   STBIDEF float *stbi_loadf_from_callbacks  (stbi_io_callbacks const *clbk, void *user, int *x, int *y,  int *channels_in_file, int desired_channels);
                                                                                                               ^
src/external/stb_image.h:1483:106: note: Function 'stbi_loadf_from_callbacks' argument 5 names different: declaration 'channels_in_file' definition 'comp'.
STBIDEF float *stbi_loadf_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp, int req_comp)
                                                                                                         ^
src/external/stb_image.h:1483:116: style:inconclusive: Function 'stbi_loadf_from_callbacks' argument 6 names different: declaration 'desired_channels' definition 'req_comp'. [funcArgNamesDifferent]
STBIDEF float *stbi_loadf_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp, int req_comp)
                                                                                                                   ^
src/external/stb_image.h:457:134: note: Function 'stbi_loadf_from_callbacks' argument 6 names different: declaration 'desired_channels' definition 'req_comp'.
   STBIDEF float *stbi_loadf_from_callbacks  (stbi_io_callbacks const *clbk, void *user, int *x, int *y,  int *channels_in_file, int desired_channels);
                                                                                                                                     ^
src/external/stb_image.h:1483:116: note: Function 'stbi_loadf_from_callbacks' argument 6 names different: declaration 'desired_channels' definition 'req_comp'.
STBIDEF float *stbi_loadf_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp, int req_comp)
                                                                                                                   ^
src/external/stb_image.h:1491:70: style:inconclusive: Function 'stbi_loadf' argument 4 names different: declaration 'channels_in_file' definition 'comp'. [funcArgNamesDifferent]
STBIDEF float *stbi_loadf(char const *filename, int *x, int *y, int *comp, int req_comp)
                                                                     ^
src/external/stb_image.h:460:85: note: Function 'stbi_loadf' argument 4 names different: declaration 'channels_in_file' definition 'comp'.
   STBIDEF float *stbi_loadf            (char const *filename, int *x, int *y, int *channels_in_file, int desired_channels);
                                                                                    ^
src/external/stb_image.h:1491:70: note: Function 'stbi_loadf' argument 4 names different: declaration 'channels_in_file' definition 'comp'.
STBIDEF float *stbi_loadf(char const *filename, int *x, int *y, int *comp, int req_comp)
                                                                     ^
src/external/stb_image.h:1491:80: style:inconclusive: Function 'stbi_loadf' argument 5 names different: declaration 'desired_channels' definition 'req_comp'. [funcArgNamesDifferent]
STBIDEF float *stbi_loadf(char const *filename, int *x, int *y, int *comp, int req_comp)
                                                                               ^
src/external/stb_image.h:460:107: note: Function 'stbi_loadf' argument 5 names different: declaration 'desired_channels' definition 'req_comp'.
   STBIDEF float *stbi_loadf            (char const *filename, int *x, int *y, int *channels_in_file, int desired_channels);
                                                                                                          ^
src/external/stb_image.h:1491:80: note: Function 'stbi_loadf' argument 5 names different: declaration 'desired_channels' definition 'req_comp'.
STBIDEF float *stbi_loadf(char const *filename, int *x, int *y, int *comp, int req_comp)
                                                                               ^
src/external/stb_image.h:1501:67: style:inconclusive: Function 'stbi_loadf_from_file' argument 4 names different: declaration 'channels_in_file' definition 'comp'. [funcArgNamesDifferent]
STBIDEF float *stbi_loadf_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)
                                                                  ^
src/external/stb_image.h:461:72: note: Function 'stbi_loadf_from_file' argument 4 names different: declaration 'channels_in_file' definition 'comp'.
   STBIDEF float *stbi_loadf_from_file  (FILE *f, int *x, int *y, int *channels_in_file, int desired_channels);
                                                                       ^
src/external/stb_image.h:1501:67: note: Function 'stbi_loadf_from_file' argument 4 names different: declaration 'channels_in_file' definition 'comp'.
STBIDEF float *stbi_loadf_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)
                                                                  ^
src/external/stb_image.h:1501:77: style:inconclusive: Function 'stbi_loadf_from_file' argument 5 names different: declaration 'desired_channels' definition 'req_comp'. [funcArgNamesDifferent]
STBIDEF float *stbi_loadf_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)
                                                                            ^
src/external/stb_image.h:461:94: note: Function 'stbi_loadf_from_file' argument 5 names different: declaration 'desired_channels' definition 'req_comp'.
   STBIDEF float *stbi_loadf_from_file  (FILE *f, int *x, int *y, int *channels_in_file, int desired_channels);
                                                                                             ^
src/external/stb_image.h:1501:77: note: Function 'stbi_loadf_from_file' argument 5 names different: declaration 'desired_channels' definition 'req_comp'.
STBIDEF float *stbi_loadf_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)
                                                                            ^
src/external/stb_image.h:7740:63: style:inconclusive: Function 'stbi_info_from_callbacks' argument 1 names different: declaration 'clbk' definition 'c'. [funcArgNamesDifferent]
STBIDEF int stbi_info_from_callbacks(stbi_io_callbacks const *c, void *user, int *x, int *y, int *comp)
                                                              ^
src/external/stb_image.h:493:68: note: Function 'stbi_info_from_callbacks' argument 1 names different: declaration 'clbk' definition 'c'.
STBIDEF int      stbi_info_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp);
                                                                   ^
src/external/stb_image.h:7740:63: note: Function 'stbi_info_from_callbacks' argument 1 names different: declaration 'clbk' definition 'c'.
STBIDEF int stbi_info_from_callbacks(stbi_io_callbacks const *c, void *user, int *x, int *y, int *comp)
                                                              ^
src/external/stb_image.h:7754:68: style:inconclusive: Function 'stbi_is_16_bit_from_callbacks' argument 1 names different: declaration 'clbk' definition 'c'. [funcArgNamesDifferent]
STBIDEF int stbi_is_16_bit_from_callbacks(stbi_io_callbacks const *c, void *user)
                                                                   ^
src/external/stb_image.h:495:73: note: Function 'stbi_is_16_bit_from_callbacks' argument 1 names different: declaration 'clbk' definition 'c'.
STBIDEF int      stbi_is_16_bit_from_callbacks(stbi_io_callbacks const *clbk, void *user);
                                                                        ^
src/external/stb_image.h:7754:68: note: Function 'stbi_is_16_bit_from_callbacks' argument 1 names different: declaration 'clbk' definition 'c'.
STBIDEF int stbi_is_16_bit_from_callbacks(stbi_io_callbacks const *c, void *user)
                                                                   ^
src/external/stb_image_write.h:262:49: style:inconclusive: Function 'stbi_flip_vertically_on_write' argument 1 names different: declaration 'flip_boolean' definition 'flag'. [funcArgNamesDifferent]
STBIWDEF void stbi_flip_vertically_on_write(int flag)
                                                ^
src/external/stb_image_write.h:195:49: note: Function 'stbi_flip_vertically_on_write' argument 1 names different: declaration 'flip_boolean' definition 'flag'.
STBIWDEF void stbi_flip_vertically_on_write(int flip_boolean);
                                                ^
src/external/stb_image_write.h:262:49: note: Function 'stbi_flip_vertically_on_write' argument 1 names different: declaration 'flip_boolean' definition 'flag'.
STBIWDEF void stbi_flip_vertically_on_write(int flag)
                                                ^
src/external/stb_image_write.h:512:79: style:inconclusive: Function 'stbi_write_bmp_to_func' argument 3 names different: declaration 'w' definition 'x'. [funcArgNamesDifferent]
STBIWDEF int stbi_write_bmp_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const void *data)
                                                                              ^
src/external/stb_image_write.h:190:79: note: Function 'stbi_write_bmp_to_func' argument 3 names different: declaration 'w' definition 'x'.
STBIWDEF int stbi_write_bmp_to_func(stbi_write_func *func, void *context, int w, int h, int comp, const void  *data);
                                                                              ^
src/external/stb_image_write.h:512:79: note: Function 'stbi_write_bmp_to_func' argument 3 names different: declaration 'w' definition 'x'.
STBIWDEF int stbi_write_bmp_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const void *data)
                                                                              ^
src/external/stb_image_write.h:512:86: style:inconclusive: Function 'stbi_write_bmp_to_func' argument 4 names different: declaration 'h' definition 'y'. [funcArgNamesDifferent]
STBIWDEF int stbi_write_bmp_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const void *data)
                                                                                     ^
src/external/stb_image_write.h:190:86: note: Function 'stbi_write_bmp_to_func' argument 4 names different: declaration 'h' definition 'y'.
STBIWDEF int stbi_write_bmp_to_func(stbi_write_func *func, void *context, int w, int h, int comp, const void  *data);
                                                                                     ^
src/external/stb_image_write.h:512:86: note: Function 'stbi_write_bmp_to_func' argument 4 names different: declaration 'h' definition 'y'.
STBIWDEF int stbi_write_bmp_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const void *data)
                                                                                     ^
src/external/stb_image_write.h:520:55: style:inconclusive: Function 'stbi_write_bmp' argument 2 names different: declaration 'w' definition 'x'. [funcArgNamesDifferent]
STBIWDEF int stbi_write_bmp(char const *filename, int x, int y, int comp, const void *data)
                                                      ^
src/external/stb_image_write.h:177:55: note: Function 'stbi_write_bmp' argument 2 names different: declaration 'w' definition 'x'.
STBIWDEF int stbi_write_bmp(char const *filename, int w, int h, int comp, const void  *data);
                                                      ^
src/external/stb_image_write.h:520:55: note: Function 'stbi_write_bmp' argument 2 names different: declaration 'w' definition 'x'.
STBIWDEF int stbi_write_bmp(char const *filename, int x, int y, int comp, const void *data)
                                                      ^
src/external/stb_image_write.h:520:62: style:inconclusive: Function 'stbi_write_bmp' argument 3 names different: declaration 'h' definition 'y'. [funcArgNamesDifferent]
STBIWDEF int stbi_write_bmp(char const *filename, int x, int y, int comp, const void *data)
                                                             ^
src/external/stb_image_write.h:177:62: note: Function 'stbi_write_bmp' argument 3 names different: declaration 'h' definition 'y'.
STBIWDEF int stbi_write_bmp(char const *filename, int w, int h, int comp, const void  *data);
                                                             ^
src/external/stb_image_write.h:520:62: note: Function 'stbi_write_bmp' argument 3 names different: declaration 'h' definition 'y'.
STBIWDEF int stbi_write_bmp(char const *filename, int x, int y, int comp, const void *data)
                                                             ^
src/external/stb_image_write.h:611:79: style:inconclusive: Function 'stbi_write_tga_to_func' argument 3 names different: declaration 'w' definition 'x'. [funcArgNamesDifferent]
STBIWDEF int stbi_write_tga_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const void *data)
                                                                              ^
src/external/stb_image_write.h:191:79: note: Function 'stbi_write_tga_to_func' argument 3 names different: declaration 'w' definition 'x'.
STBIWDEF int stbi_write_tga_to_func(stbi_write_func *func, void *context, int w, int h, int comp, const void  *data);
                                                                              ^
src/external/stb_image_write.h:611:79: note: Function 'stbi_write_tga_to_func' argument 3 names different: declaration 'w' definition 'x'.
STBIWDEF int stbi_write_tga_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const void *data)
                                                                              ^
src/external/stb_image_write.h:611:86: style:inconclusive: Function 'stbi_write_tga_to_func' argument 4 names different: declaration 'h' definition 'y'. [funcArgNamesDifferent]
STBIWDEF int stbi_write_tga_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const void *data)
                                                                                     ^
src/external/stb_image_write.h:191:86: note: Function 'stbi_write_tga_to_func' argument 4 names different: declaration 'h' definition 'y'.
STBIWDEF int stbi_write_tga_to_func(stbi_write_func *func, void *context, int w, int h, int comp, const void  *data);
                                                                                     ^
src/external/stb_image_write.h:611:86: note: Function 'stbi_write_tga_to_func' argument 4 names different: declaration 'h' definition 'y'.
STBIWDEF int stbi_write_tga_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const void *data)
                                                                                     ^
src/external/stb_image_write.h:619:55: style:inconclusive: Function 'stbi_write_tga' argument 2 names different: declaration 'w' definition 'x'. [funcArgNamesDifferent]
STBIWDEF int stbi_write_tga(char const *filename, int x, int y, int comp, const void *data)
                                                      ^
src/external/stb_image_write.h:178:55: note: Function 'stbi_write_tga' argument 2 names different: declaration 'w' definition 'x'.
STBIWDEF int stbi_write_tga(char const *filename, int w, int h, int comp, const void  *data);
                                                      ^
src/external/stb_image_write.h:619:55: note: Function 'stbi_write_tga' argument 2 names different: declaration 'w' definition 'x'.
STBIWDEF int stbi_write_tga(char const *filename, int x, int y, int comp, const void *data)
                                                      ^
src/external/stb_image_write.h:619:62: style:inconclusive: Function 'stbi_write_tga' argument 3 names different: declaration 'h' definition 'y'. [funcArgNamesDifferent]
STBIWDEF int stbi_write_tga(char const *filename, int x, int y, int comp, const void *data)
                                                             ^
src/external/stb_image_write.h:178:62: note: Function 'stbi_write_tga' argument 3 names different: declaration 'h' definition 'y'.
STBIWDEF int stbi_write_tga(char const *filename, int w, int h, int comp, const void  *data);
                                                             ^
src/external/stb_image_write.h:619:62: note: Function 'stbi_write_tga' argument 3 names different: declaration 'h' definition 'y'.
STBIWDEF int stbi_write_tga(char const *filename, int x, int y, int comp, const void *data)
                                                             ^
src/external/stb_image_write.h:787:79: style:inconclusive: Function 'stbi_write_hdr_to_func' argument 3 names different: declaration 'w' definition 'x'. [funcArgNamesDifferent]
STBIWDEF int stbi_write_hdr_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const float *data)
                                                                              ^
src/external/stb_image_write.h:192:79: note: Function 'stbi_write_hdr_to_func' argument 3 names different: declaration 'w' definition 'x'.
STBIWDEF int stbi_write_hdr_to_func(stbi_write_func *func, void *context, int w, int h, int comp, const float *data);
                                                                              ^
src/external/stb_image_write.h:787:79: note: Function 'stbi_write_hdr_to_func' argument 3 names different: declaration 'w' definition 'x'.
STBIWDEF int stbi_write_hdr_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const float *data)
                                                                              ^
src/external/stb_image_write.h:787:86: style:inconclusive: Function 'stbi_write_hdr_to_func' argument 4 names different: declaration 'h' definition 'y'. [funcArgNamesDifferent]
STBIWDEF int stbi_write_hdr_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const float *data)
                                                                                     ^
src/external/stb_image_write.h:192:86: note: Function 'stbi_write_hdr_to_func' argument 4 names different: declaration 'h' definition 'y'.
STBIWDEF int stbi_write_hdr_to_func(stbi_write_func *func, void *context, int w, int h, int comp, const float *data);
                                                                                     ^
src/external/stb_image_write.h:787:86: note: Function 'stbi_write_hdr_to_func' argument 4 names different: declaration 'h' definition 'y'.
STBIWDEF int stbi_write_hdr_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const float *data)
                                                                                     ^
src/external/stb_image_write.h:794:55: style:inconclusive: Function 'stbi_write_hdr' argument 2 names different: declaration 'w' definition 'x'. [funcArgNamesDifferent]
STBIWDEF int stbi_write_hdr(char const *filename, int x, int y, int comp, const float *data)
                                                      ^
src/external/stb_image_write.h:179:55: note: Function 'stbi_write_hdr' argument 2 names different: declaration 'w' definition 'x'.
STBIWDEF int stbi_write_hdr(char const *filename, int w, int h, int comp, const float *data);
                                                      ^
src/external/stb_image_write.h:794:55: note: Function 'stbi_write_hdr' argument 2 names different: declaration 'w' definition 'x'.
STBIWDEF int stbi_write_hdr(char const *filename, int x, int y, int comp, const float *data)
                                                      ^
src/external/stb_image_write.h:794:62: style:inconclusive: Function 'stbi_write_hdr' argument 3 names different: declaration 'h' definition 'y'. [funcArgNamesDifferent]
STBIWDEF int stbi_write_hdr(char const *filename, int x, int y, int comp, const float *data)
                                                             ^
src/external/stb_image_write.h:179:62: note: Function 'stbi_write_hdr' argument 3 names different: declaration 'h' definition 'y'.
STBIWDEF int stbi_write_hdr(char const *filename, int w, int h, int comp, const float *data);
                                                             ^
src/external/stb_image_write.h:794:62: note: Function 'stbi_write_hdr' argument 3 names different: declaration 'h' definition 'y'.
STBIWDEF int stbi_write_hdr(char const *filename, int x, int y, int comp, const float *data)
                                                             ^
src/external/stb_image_write.h:1215:55: style:inconclusive: Function 'stbi_write_png' argument 2 names different: declaration 'w' definition 'x'. [funcArgNamesDifferent]
STBIWDEF int stbi_write_png(char const *filename, int x, int y, int comp, const void *data, int stride_bytes)
                                                      ^
src/external/stb_image_write.h:176:55: note: Function 'stbi_write_png' argument 2 names different: declaration 'w' definition 'x'.
STBIWDEF int stbi_write_png(char const *filename, int w, int h, int comp, const void  *data, int stride_in_bytes);
                                                      ^
src/external/stb_image_write.h:1215:55: note: Function 'stbi_write_png' argument 2 names different: declaration 'w' definition 'x'.
STBIWDEF int stbi_write_png(char const *filename, int x, int y, int comp, const void *data, int stride_bytes)
                                                      ^
src/external/stb_image_write.h:1215:62: style:inconclusive: Function 'stbi_write_png' argument 3 names different: declaration 'h' definition 'y'. [funcArgNamesDifferent]
STBIWDEF int stbi_write_png(char const *filename, int x, int y, int comp, const void *data, int stride_bytes)
                                                             ^
src/external/stb_image_write.h:176:62: note: Function 'stbi_write_png' argument 3 names different: declaration 'h' definition 'y'.
STBIWDEF int stbi_write_png(char const *filename, int w, int h, int comp, const void  *data, int stride_in_bytes);
                                                             ^
src/external/stb_image_write.h:1215:62: note: Function 'stbi_write_png' argument 3 names different: declaration 'h' definition 'y'.
STBIWDEF int stbi_write_png(char const *filename, int x, int y, int comp, const void *data, int stride_bytes)
                                                             ^
src/external/stb_image_write.h:1215:97: style:inconclusive: Function 'stbi_write_png' argument 6 names different: declaration 'stride_in_bytes' definition 'stride_bytes'. [funcArgNamesDifferent]
STBIWDEF int stbi_write_png(char const *filename, int x, int y, int comp, const void *data, int stride_bytes)
                                                                                                ^
src/external/stb_image_write.h:176:98: note: Function 'stbi_write_png' argument 6 names different: declaration 'stride_in_bytes' definition 'stride_bytes'.
STBIWDEF int stbi_write_png(char const *filename, int w, int h, int comp, const void  *data, int stride_in_bytes);
                                                                                                 ^
src/external/stb_image_write.h:1215:97: note: Function 'stbi_write_png' argument 6 names different: declaration 'stride_in_bytes' definition 'stride_bytes'.
STBIWDEF int stbi_write_png(char const *filename, int x, int y, int comp, const void *data, int stride_bytes)
                                                                                                ^
src/external/stb_image_write.h:1231:79: style:inconclusive: Function 'stbi_write_png_to_func' argument 3 names different: declaration 'w' definition 'x'. [funcArgNamesDifferent]
STBIWDEF int stbi_write_png_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const void *data, int stride_bytes)
                                                                              ^
src/external/stb_image_write.h:189:79: note: Function 'stbi_write_png_to_func' argument 3 names different: declaration 'w' definition 'x'.
STBIWDEF int stbi_write_png_to_func(stbi_write_func *func, void *context, int w, int h, int comp, const void  *data, int stride_in_bytes);
                                                                              ^
src/external/stb_image_write.h:1231:79: note: Function 'stbi_write_png_to_func' argument 3 names different: declaration 'w' definition 'x'.
STBIWDEF int stbi_write_png_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const void *data, int stride_bytes)
                                                                              ^
src/external/stb_image_write.h:1231:86: style:inconclusive: Function 'stbi_write_png_to_func' argument 4 names different: declaration 'h' definition 'y'. [funcArgNamesDifferent]
STBIWDEF int stbi_write_png_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const void *data, int stride_bytes)
                                                                                     ^
src/external/stb_image_write.h:189:86: note: Function 'stbi_write_png_to_func' argument 4 names different: declaration 'h' definition 'y'.
STBIWDEF int stbi_write_png_to_func(stbi_write_func *func, void *context, int w, int h, int comp, const void  *data, int stride_in_bytes);
                                                                                     ^
src/external/stb_image_write.h:1231:86: note: Function 'stbi_write_png_to_func' argument 4 names different: declaration 'h' definition 'y'.
STBIWDEF int stbi_write_png_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const void *data, int stride_bytes)
                                                                                     ^
src/external/stb_image_write.h:1231:121: style:inconclusive: Function 'stbi_write_png_to_func' argument 7 names different: declaration 'stride_in_bytes' definition 'stride_bytes'. [funcArgNamesDifferent]
STBIWDEF int stbi_write_png_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const void *data, int stride_bytes)
                                                                                                                        ^
src/external/stb_image_write.h:189:122: note: Function 'stbi_write_png_to_func' argument 7 names different: declaration 'stride_in_bytes' definition 'stride_bytes'.
STBIWDEF int stbi_write_png_to_func(stbi_write_func *func, void *context, int w, int h, int comp, const void  *data, int stride_in_bytes);
                                                                                                                         ^
src/external/stb_image_write.h:1231:121: note: Function 'stbi_write_png_to_func' argument 7 names different: declaration 'stride_in_bytes' definition 'stride_bytes'.
STBIWDEF int stbi_write_png_to_func(stbi_write_func *func, void *context, int x, int y, int comp, const void *data, int stride_bytes)
                                                                                                                        ^
src/rtextures.c:2705:37: style:inconclusive: Function 'ImageDrawPixel' argument 2 names different: declaration 'posX' definition 'x'. [funcArgNamesDifferent]
void ImageDrawPixel(Image *dst, int x, int y, Color color)
                                    ^
src/raylib.h:1288:43: note: Function 'ImageDrawPixel' argument 2 names different: declaration 'posX' definition 'x'.
RLAPI void ImageDrawPixel(Image *dst, int posX, int posY, Color color);                                  // Draw pixel within an image
                                          ^
src/rtextures.c:2705:37: note: Function 'ImageDrawPixel' argument 2 names different: declaration 'posX' definition 'x'.
void ImageDrawPixel(Image *dst, int x, int y, Color color)
                                    ^
src/rtextures.c:2705:44: style:inconclusive: Function 'ImageDrawPixel' argument 3 names different: declaration 'posY' definition 'y'. [funcArgNamesDifferent]
void ImageDrawPixel(Image *dst, int x, int y, Color color)
                                           ^
src/raylib.h:1288:53: note: Function 'ImageDrawPixel' argument 3 names different: declaration 'posY' definition 'y'.
RLAPI void ImageDrawPixel(Image *dst, int posX, int posY, Color color);                                  // Draw pixel within an image
                                                    ^
src/rtextures.c:2705:44: note: Function 'ImageDrawPixel' argument 3 names different: declaration 'posY' definition 'y'.
void ImageDrawPixel(Image *dst, int x, int y, Color color)
                                           ^
src/external/rl_gputex.h:109:26: style: Variable 'image_pixel_size' is assigned a value that is never used. [unreadVariable]
    int image_pixel_size = 0;       // Image pixel size
                         ^
src/external/rl_gputex.h:199:45: style: Variable 'alpha' is assigned a value that is never used. [unreadVariable]
                        unsigned char alpha = 0;
                                            ^
src/external/rl_gputex.h:218:45: style: Variable 'alpha' is assigned a value that is never used. [unreadVariable]
                        unsigned char alpha = 0;
                                            ^
src/external/rl_gputex.h:248:36: style: Variable 'blue' is assigned a value that is never used. [unreadVariable]
                unsigned char blue = 0;
                                   ^
src/rtextures.c:651:15: style: Variable 'byteCount' is assigned a value that is never used. [unreadVariable]
    byteCount += sprintf(txtData + byteCount, "0x%x };\n", ((unsigned char *)image.data)[dataSize - 1]);
              ^
src/rtextures.c:1107:37: style: Variable 'r' is assigned a value that is never used. [unreadVariable]
                    unsigned char r = 0;
                                    ^
src/rtextures.c:1108:37: style: Variable 'g' is assigned a value that is never used. [unreadVariable]
                    unsigned char g = 0;
                                    ^
src/rtextures.c:1109:37: style: Variable 'b' is assigned a value that is never used. [unreadVariable]
                    unsigned char b = 0;
                                    ^
src/rtextures.c:1136:37: style: Variable 'r' is assigned a value that is never used. [unreadVariable]
                    unsigned char r = 0;
                                    ^
src/rtextures.c:1137:37: style: Variable 'g' is assigned a value that is never used. [unreadVariable]
                    unsigned char g = 0;
                                    ^
src/rtextures.c:1138:37: style: Variable 'b' is assigned a value that is never used. [unreadVariable]
                    unsigned char b = 0;
                                    ^
src/rtextures.c:1139:37: style: Variable 'a' is assigned a value that is never used. [unreadVariable]
                    unsigned char a = 0;
                                    ^
src/rtextures.c:1156:37: style: Variable 'r' is assigned a value that is never used. [unreadVariable]
                    unsigned char r = 0;
                                    ^
src/rtextures.c:1157:37: style: Variable 'g' is assigned a value that is never used. [unreadVariable]
                    unsigned char g = 0;
                                    ^
src/rtextures.c:1158:37: style: Variable 'b' is assigned a value that is never used. [unreadVariable]
                    unsigned char b = 0;
                                    ^
src/rtextures.c:1159:37: style: Variable 'a' is assigned a value that is never used. [unreadVariable]
                    unsigned char a = 0;
                                    ^
src/rtextures.c:1646:17: style: Variable 'alpha' is assigned a value that is never used. [unreadVariable]
    float alpha = 0.0f;
                ^
src/rtextures.c:1939:24: style: Variable 'oldPixel' is assigned a value that is never used. [unreadVariable]
        Color oldPixel = WHITE;
                       ^
src/rtextures.c:2860:23: style: Variable 'changeInX' is assigned a value that is never used. [unreadVariable]
            changeInX = -changeInX;
                      ^
src/rtextures.c:2890:23: style: Variable 'changeInY' is assigned a value that is never used. [unreadVariable]
            changeInY = -changeInY;
                      ^
src/rtextures.c:4127:25: style: Variable 'out' is reassigned a value before the old one has been used. [redundantAssignment]
    if (src.a == 0) out = dst;
                        ^
src/rtextures.c:4111:25: note: out is assigned
    if (src.a == 0) out = dst;
                        ^
src/rtextures.c:4127:25: note: out is overwritten
    if (src.a == 0) out = dst;
                        ^
src/rtextures.c:4127:25: style: Variable 'out' is reassigned a value before the old one has been used. [redundantAssignment]
    if (src.a == 0) out = dst;
                        ^
src/rtextures.c:4112:32: note: out is assigned
    else if (src.a == 255) out = src;
                               ^
src/rtextures.c:4127:25: note: out is overwritten
    if (src.a == 0) out = dst;
                        ^
src/rtextures.c:4133:23: style: Variable 'ftint' is assigned a value that is never used. [unreadVariable]
        Vector4 ftint = ColorNormalize(tint);
                      ^
src/utils.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/utils.c:303:18: warning: %i in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
    byteCount += sprintf(txtData + byteCount, "static unsigned char %s_DATA[%i] = { ", varFileName, size);
                 ^
src/utils.c:350:35: error: Common realloc mistake: 'text' nulled but not freed upon failure [memleakOnRealloc]
                if (count < size) text = RL_REALLOC(text, count + 1);
                                  ^
src/utils.c:104:27: style:inconclusive: Function 'SetTraceLogLevel' argument 1 names different: declaration 'logLevel' definition 'logType'. [funcArgNamesDifferent]
void SetTraceLogLevel(int logType) { logTypeLevel = logType; }
                          ^
src/raylib.h:1047:33: note: Function 'SetTraceLogLevel' argument 1 names different: declaration 'logLevel' definition 'logType'.
RLAPI void SetTraceLogLevel(int logLevel);                        // Set the current threshold (minimum) log level
                                ^
src/utils.c:104:27: note: Function 'SetTraceLogLevel' argument 1 names different: declaration 'logLevel' definition 'logType'.
void SetTraceLogLevel(int logType) { logTypeLevel = logType; }
                          ^
src/utils.c:107:19: style:inconclusive: Function 'TraceLog' argument 1 names different: declaration 'logLevel' definition 'logType'. [funcArgNamesDifferent]
void TraceLog(int logType, const char *text, ...)
                  ^
src/raylib.h:1046:25: note: Function 'TraceLog' argument 1 names different: declaration 'logLevel' definition 'logType'.
RLAPI void TraceLog(int logLevel, const char *text, ...);         // Show trace log messages (LOG_DEBUG, LOG_INFO, LOG_WARNING, LOG_ERROR...)
                        ^
src/utils.c:107:19: note: Function 'TraceLog' argument 1 names different: declaration 'logLevel' definition 'logType'.
void TraceLog(int logType, const char *text, ...)
                  ^
src/utils.c:305:15: style: Variable 'byteCount' is assigned a value that is never used. [unreadVariable]
    byteCount += sprintf(txtData + byteCount, "0x%x };\n", data[size - 1]);
              ^
projects/VS2019-Android/raylib_android/raylib_android.NativeActivity/android_native_app_glue.c:419:0: style: The function 'ANativeActivity_onCreate' is never used. [unusedFunction]

^
src/rcore.c:3332:0: style: The function 'ChangeDirectory' is never used. [unusedFunction]

^
src/rmodels.c:3640:0: style: The function 'CheckCollisionBoxSphere' is never used. [unusedFunction]

^
src/rmodels.c:3625:0: style: The function 'CheckCollisionBoxes' is never used. [unusedFunction]

^
src/rshapes.c:1711:0: style: The function 'CheckCollisionLines' is never used. [unusedFunction]

^
src/rshapes.c:1740:0: style: The function 'CheckCollisionPointLine' is never used. [unusedFunction]

^
src/rshapes.c:1639:0: style: The function 'CheckCollisionPointPoly' is never used. [unusedFunction]

^
src/rshapes.c:1620:0: style: The function 'CheckCollisionPointTriangle' is never used. [unusedFunction]

^
src/rmodels.c:3601:0: style: The function 'CheckCollisionSpheres' is never used. [unusedFunction]

^
src/rtextures.c:4013:0: style: The function 'ColorBrightness' is never used. [unusedFunction]

^
src/rtextures.c:4047:0: style: The function 'ColorContrast' is never used. [unusedFunction]

^
src/rtextures.c:3889:0: style: The function 'ColorFromNormalized' is never used. [unusedFunction]

^
src/rtextures.c:3990:0: style: The function 'ColorTint' is never used. [unusedFunction]

^
src/rtextures.c:3903:0: style: The function 'ColorToHSV' is never used. [unusedFunction]

^
src/rtextures.c:3870:0: style: The function 'ColorToInt' is never used. [unusedFunction]

^
src/rcore.c:3481:0: style: The function 'DecodeDataBase64' is never used. [unusedFunction]

^
src/rcore.c:3022:0: style: The function 'DirectoryExists' is never used. [unusedFunction]

^
src/rcore.c:2038:0: style: The function 'DisableEventWaiting' is never used. [unusedFunction]

^
src/external/glfw/src/win32_init.c:63:0: style: The function 'DllMain' is never used. [unusedFunction]

^
src/rmodels.c:690:0: style: The function 'DrawCapsule' is never used. [unusedFunction]

^
src/rmodels.c:833:0: style: The function 'DrawCapsuleWires' is never used. [unusedFunction]

^
src/rmodels.c:201:0: style: The function 'DrawCircle3D' is never used. [unusedFunction]

^
src/rmodels.c:409:0: style: The function 'DrawCubeWiresV' is never used. [unusedFunction]

^
src/rmodels.c:503:0: style: The function 'DrawCylinder' is never used. [unusedFunction]

^
src/rmodels.c:559:0: style: The function 'DrawCylinderEx' is never used. [unusedFunction]

^
src/rmodels.c:615:0: style: The function 'DrawCylinderWires' is never used. [unusedFunction]

^
src/rmodels.c:646:0: style: The function 'DrawCylinderWiresEx' is never used. [unusedFunction]

^
src/rshapes.c:530:0: style: The function 'DrawEllipse' is never used. [unusedFunction]

^
src/rshapes.c:544:0: style: The function 'DrawEllipseLines' is never used. [unusedFunction]

^
src/rshapes.c:234:0: style: The function 'DrawLineBezierQuad' is never used. [unusedFunction]

^
src/rshapes.c:175:0: style: The function 'DrawLineEx' is never used. [unusedFunction]

^
src/rshapes.c:324:0: style: The function 'DrawLineStrip' is never used. [unusedFunction]

^
src/rmodels.c:3461:0: style: The function 'DrawModelWires' is never used. [unusedFunction]

^
src/rmodels.c:3471:0: style: The function 'DrawModelWiresEx' is never used. [unusedFunction]

^
src/rshapes.c:106:0: style: The function 'DrawPixel' is never used. [unusedFunction]

^
src/rmodels.c:968:0: style: The function 'DrawPlane' is never used. [unusedFunction]

^
src/rmodels.c:188:0: style: The function 'DrawPoint3D' is never used. [unusedFunction]

^
src/rshapes.c:1482:0: style: The function 'DrawPoly' is never used. [unusedFunction]

^
src/rshapes.c:1527:0: style: The function 'DrawPolyLines' is never used. [unusedFunction]

^
src/rshapes.c:1544:0: style: The function 'DrawPolyLinesEx' is never used. [unusedFunction]

^
src/rtext.c:1135:0: style: The function 'DrawTextCodepoints' is never used. [unusedFunction]

^
src/rtext.c:1097:0: style: The function 'DrawTextPro' is never used. [unusedFunction]

^
src/rmodels.c:220:0: style: The function 'DrawTriangle3D' is never used. [unusedFunction]

^
src/rshapes.c:1408:0: style: The function 'DrawTriangleLines' is never used. [unusedFunction]

^
src/rmodels.c:231:0: style: The function 'DrawTriangleStrip3D' is never used. [unusedFunction]

^
src/rcore.c:2032:0: style: The function 'EnableEventWaiting' is never used. [unusedFunction]

^
src/rcore.c:3445:0: style: The function 'EncodeDataBase64' is never used. [unusedFunction]

^
src/utils.c:274:0: style: The function 'ExportDataAsCode' is never used. [unusedFunction]

^
src/rtext.c:869:0: style: The function 'ExportFontAsCode' is never used. [unusedFunction]

^
src/rtextures.c:610:0: style: The function 'ExportImageAsCode' is never used. [unusedFunction]

^
src/rmodels.c:1780:0: style: The function 'ExportMesh' is never used. [unusedFunction]

^
src/raudio.c:957:0: style: The function 'ExportWave' is never used. [unusedFunction]

^
src/raudio.c:1015:0: style: The function 'ExportWaveAsCode' is never used. [unusedFunction]

^
src/rcore.c:2969:0: style: The function 'FileExists' is never used. [unusedFunction]

^
src/rtextures.c:829:0: style: The function 'GenImagePerlinNoise' is never used. [unusedFunction]

^
src/rtextures.c:930:0: style: The function 'GenImageText' is never used. [unusedFunction]

^
src/rmodels.c:2657:0: style: The function 'GenMeshCone' is never used. [unusedFunction]

^
src/rmodels.c:3316:0: style: The function 'GenMeshTangents' is never used. [unusedFunction]

^
src/rcore.c:3189:0: style: The function 'GetApplicationDirectory' is never used. [unusedFunction]

^
src/rcore.c:2728:0: style: The function 'GetCameraMatrix' is never used. [unusedFunction]

^
src/rcore.c:2005:0: style: The function 'GetClipboardText' is never used. [unusedFunction]

^
src/rcore.c:1745:0: style: The function 'GetCurrentMonitor' is never used. [unusedFunction]

^
src/rcore.c:3038:0: style: The function 'GetFileLength' is never used. [unusedFunction]

^
src/rtext.c:1281:0: style: The function 'GetGlyphAtlasRec' is never used. [unusedFunction]

^
src/rtext.c:1270:0: style: The function 'GetGlyphInfo' is never used. [unusedFunction]

^
src/rtextures.c:2579:0: style: The function 'GetImageColor' is never used. [unusedFunction]

^
src/rcore.c:1733:0: style: The function 'GetMonitorCount' is never used. [unusedFunction]

^
src/rcore.c:1846:0: style: The function 'GetMonitorHeight' is never used. [unusedFunction]

^
src/rcore.c:1975:0: style: The function 'GetMonitorName' is never used. [unusedFunction]

^
src/rcore.c:1889:0: style: The function 'GetMonitorPhysicalHeight' is never used. [unusedFunction]

^
src/rcore.c:1871:0: style: The function 'GetMonitorPhysicalWidth' is never used. [unusedFunction]

^
src/rcore.c:1802:0: style: The function 'GetMonitorPosition' is never used. [unusedFunction]

^
src/rcore.c:1907:0: style: The function 'GetMonitorRefreshRate' is never used. [unusedFunction]

^
src/rcore.c:1821:0: style: The function 'GetMonitorWidth' is never used. [unusedFunction]

^
src/rcore.c:3928:0: style: The function 'GetMouseWheelMoveV' is never used. [unusedFunction]

^
src/rcore.c:3155:0: style: The function 'GetPrevDirectoryPath' is never used. [unusedFunction]

^
src/rcore.c:1704:0: style: The function 'GetRenderHeight' is never used. [unusedFunction]

^
src/rcore.c:1698:0: style: The function 'GetRenderWidth' is never used. [unusedFunction]

^
src/rcore.c:3993:0: style: The function 'GetTouchPointId' is never used. [unusedFunction]

^
src/rcore.c:3953:0: style: The function 'GetTouchX' is never used. [unusedFunction]

^
src/rcore.c:3963:0: style: The function 'GetTouchY' is never used. [unusedFunction]

^
src/rcore.c:1710:0: style: The function 'GetWindowHandle' is never used. [unusedFunction]

^
src/rcore.c:1930:0: style: The function 'GetWindowPosition' is never used. [unusedFunction]

^
src/rcore.c:2762:0: style: The function 'GetWorldToScreen' is never used. [unusedFunction]

^
src/rcore.c:2814:0: style: The function 'GetWorldToScreen2D' is never used. [unusedFunction]

^
src/rtextures.c:1500:0: style: The function 'ImageAlphaClear' is never used. [unusedFunction]

^
src/rtextures.c:1487:0: style: The function 'ImageAlphaCrop' is never used. [unusedFunction]

^
src/rtextures.c:1592:0: style: The function 'ImageAlphaMask' is never used. [unusedFunction]

^
src/rtextures.c:2685:0: style: The function 'ImageClearBackground' is never used. [unusedFunction]

^
src/rtextures.c:2317:0: style: The function 'ImageColorReplace' is never used. [unusedFunction]

^
src/rtextures.c:1900:0: style: The function 'ImageDither' is never used. [unusedFunction]

^
src/rtextures.c:2978:0: style: The function 'ImageDrawCircleLinesV' is never used. [unusedFunction]

^
src/rtextures.c:2944:0: style: The function 'ImageDrawCircleV' is never used. [unusedFunction]

^
src/rtextures.c:2914:0: style: The function 'ImageDrawLineV' is never used. [unusedFunction]

^
src/rtextures.c:2817:0: style: The function 'ImageDrawPixelV' is never used. [unusedFunction]

^
src/rtextures.c:3025:0: style: The function 'ImageDrawRectangleLines' is never used. [unusedFunction]

^
src/rtextures.c:2990:0: style: The function 'ImageDrawRectangleV' is never used. [unusedFunction]

^
src/rtextures.c:3150:0: style: The function 'ImageDrawText' is never used. [unusedFunction]

^
src/rtextures.c:2111:0: style: The function 'ImageRotateCCW' is never used. [unusedFunction]

^
src/rtextures.c:2079:0: style: The function 'ImageRotateCW' is never used. [unusedFunction]

^
src/rtextures.c:1239:0: style: The function 'ImageText' is never used. [unusedFunction]

^
src/rtextures.c:1471:0: style: The function 'ImageToPOT' is never used. [unusedFunction]

^
src/utils.c:413:0: style: The function 'InitAssetManager' is never used. [unusedFunction]

^
src/rcore.c:4016:0: style: The function 'InitGraphicsDevice' is never used. [unusedFunction]

^
src/rcore.c:4886:0: style: The function 'InitTimer' is never used. [unusedFunction]

^
examples/text/text_input_box.c:124:0: style: The function 'IsAnyKeyPressed' is never used. [unusedFunction]

^
src/raudio.c:526:0: style: The function 'IsAudioDeviceReady' is never used. [unusedFunction]

^
src/raudio.c:2089:0: style: The function 'IsAudioStreamProcessed' is never used. [unusedFunction]

^
src/raudio.c:2020:0: style: The function 'IsAudioStreamReady' is never used. [unusedFunction]

^
src/rcore.c:2100:0: style: The function 'IsCursorOnScreen' is never used. [unusedFunction]

^
src/rtext.c:539:0: style: The function 'IsFontReady' is never used. [unusedFunction]

^
src/rcore.c:3736:0: style: The function 'IsGamepadButtonPressed' is never used. [unusedFunction]

^
src/rcore.c:3758:0: style: The function 'IsGamepadButtonReleased' is never used. [unusedFunction]

^
src/rcore.c:3769:0: style: The function 'IsGamepadButtonUp' is never used. [unusedFunction]

^
src/rtextures.c:509:0: style: The function 'IsImageReady' is never used. [unusedFunction]

^
src/rcore.c:3614:0: style: The function 'IsKeyReleased' is never used. [unusedFunction]

^
src/rcore.c:3624:0: style: The function 'IsKeyUp' is never used. [unusedFunction]

^
src/rmodels.c:1945:0: style: The function 'IsMaterialReady' is never used. [unusedFunction]

^
src/rmodels.c:2122:0: style: The function 'IsModelAnimationValid' is never used. [unusedFunction]

^
src/rmodels.c:1113:0: style: The function 'IsModelReady' is never used. [unusedFunction]

^
src/rcore.c:3837:0: style: The function 'IsMouseButtonUp' is never used. [unusedFunction]

^
src/raudio.c:1630:0: style: The function 'IsMusicReady' is never used. [unusedFunction]

^
src/rtextures.c:3364:0: style: The function 'IsRenderTextureReady' is never used. [unusedFunction]

^
src/rcore.c:2578:0: style: The function 'IsShaderReady' is never used. [unusedFunction]

^
src/raudio.c:1105:0: style: The function 'IsSoundPlaying' is never used. [unusedFunction]

^
src/raudio.c:921:0: style: The function 'IsSoundReady' is never used. [unusedFunction]

^
src/raudio.c:855:0: style: The function 'IsWaveReady' is never used. [unusedFunction]

^
src/rcore.c:1158:0: style: The function 'IsWindowFocused' is never used. [unusedFunction]

^
src/rcore.c:1125:0: style: The function 'IsWindowFullscreen' is never used. [unusedFunction]

^
src/rcore.c:1131:0: style: The function 'IsWindowHidden' is never used. [unusedFunction]

^
src/rcore.c:1149:0: style: The function 'IsWindowMaximized' is never used. [unusedFunction]

^
src/rcore.c:1140:0: style: The function 'IsWindowMinimized' is never used. [unusedFunction]

^
src/rcore.c:1119:0: style: The function 'IsWindowReady' is never used. [unusedFunction]

^
src/rcore.c:3269:0: style: The function 'LoadDirectoryFiles' is never used. [unusedFunction]

^
src/rcore.c:3307:0: style: The function 'LoadDirectoryFilesEx' is never used. [unusedFunction]

^
src/rtextures.c:495:0: style: The function 'LoadImageFromScreen' is never used. [unusedFunction]

^
src/rtextures.c:2471:0: style: The function 'LoadImagePalette' is never used. [unusedFunction]

^
src/rmodels.c:1895:0: style: The function 'LoadMaterials' is never used. [unusedFunction]

^
src/raudio.c:1422:0: style: The function 'LoadMusicStreamFromMemory' is never used. [unusedFunction]

^
src/rtext.c:1659:0: style: The function 'LoadUTF8' is never used. [unusedFunction]

^
src/raudio.c:1203:0: style: The function 'LoadWaveSamples' is never used. [unusedFunction]

^
src/utils.c:171:0: style: The function 'MemRealloc' is never used. [unusedFunction]

^
src/rcore.c:3543:0: style: The function 'OpenURL' is never used. [unusedFunction]

^
src/raudio.c:1087:0: style: The function 'PauseSound' is never used. [unusedFunction]

^
src/raudio.c:1093:0: style: The function 'ResumeSound' is never used. [unusedFunction]

^
src/raudio.c:1731:0: style: The function 'SeekMusicStream' is never used. [unusedFunction]

^
src/raudio.c:2133:0: style: The function 'SetAudioStreamPitch' is never used. [unusedFunction]

^
src/rcore.c:3786:0: style: The function 'SetGamepadMappings' is never used. [unusedFunction]

^
src/utils.c:75:0: style: The function 'SetLoadFileDataCallback' is never used. [unusedFunction]

^
src/utils.c:77:0: style: The function 'SetLoadFileTextCallback' is never used. [unusedFunction]

^
src/raudio.c:532:0: style: The function 'SetMasterVolume' is never used. [unusedFunction]

^
src/rmodels.c:1977:0: style: The function 'SetModelMeshMaterial' is never used. [unusedFunction]

^
src/rcore.c:3902:0: style: The function 'SetMouseOffset' is never used. [unusedFunction]

^
src/rcore.c:3909:0: style: The function 'SetMouseScale' is never used. [unusedFunction]

^
src/raudio.c:1940:0: style: The function 'SetMusicPan' is never used. [unusedFunction]

^
src/raudio.c:1928:0: style: The function 'SetMusicVolume' is never used. [unusedFunction]

^
src/rcore.c:2963:0: style: The function 'SetRandomSeed' is never used. [unusedFunction]

^
src/utils.c:76:0: style: The function 'SetSaveFileDataCallback' is never used. [unusedFunction]

^
src/utils.c:78:0: style: The function 'SetSaveFileTextCallback' is never used. [unusedFunction]

^
src/rcore.c:2651:0: style: The function 'SetShaderValueMatrix' is never used. [unusedFunction]

^
src/raudio.c:1123:0: style: The function 'SetSoundPan' is never used. [unusedFunction]

^
src/raudio.c:1117:0: style: The function 'SetSoundPitch' is never used. [unusedFunction]

^
src/raudio.c:1111:0: style: The function 'SetSoundVolume' is never used. [unusedFunction]

^
src/rtextures.c:3477:0: style: The function 'SetTextureWrap' is never used. [unusedFunction]

^
src/utils.c:104:0: style: The function 'SetTraceLogLevel' is never used. [unusedFunction]

^
src/rcore.c:1559:0: style: The function 'SetWindowIcon' is never used. [unusedFunction]

^
src/rcore.c:1590:0: style: The function 'SetWindowIcons' is never used. [unusedFunction]

^
src/rcore.c:1641:0: style: The function 'SetWindowMonitor' is never used. [unusedFunction]

^
src/rcore.c:1676:0: style: The function 'SetWindowOpacity' is never used. [unusedFunction]

^
src/rcore.c:1633:0: style: The function 'SetWindowPosition' is never used. [unusedFunction]

^
src/rcore.c:1668:0: style: The function 'SetWindowSize' is never used. [unusedFunction]

^
src/rcore.c:1624:0: style: The function 'SetWindowTitle' is never used. [unusedFunction]

^
src/rcore.c:4809:0: style: The function 'SetupFramebuffer' is never used. [unusedFunction]

^
src/rcore.c:2044:0: style: The function 'ShowCursor' is never used. [unusedFunction]

^
src/raudio.c:1099:0: style: The function 'StopSound' is never used. [unusedFunction]

^
src/rcore.c:2913:0: style: The function 'TakeScreenshot' is never used. [unusedFunction]

^
src/rtext.c:1559:0: style: The function 'TextAppend' is never used. [unusedFunction]

^
src/rtext.c:1466:0: style: The function 'TextInsert' is never used. [unusedFunction]

^
src/rtext.c:1484:0: style: The function 'TextJoin' is never used. [unusedFunction]

^
src/rtext.c:1417:0: style: The function 'TextReplace' is never used. [unusedFunction]

^
src/rcore.c:3324:0: style: The function 'UnloadDirectoryFiles' is never used. [unusedFunction]

^
src/rtextures.c:2532:0: style: The function 'UnloadImagePalette' is never used. [unusedFunction]

^
src/rmodels.c:1952:0: style: The function 'UnloadMaterial' is never used. [unusedFunction]

^
src/rtext.c:1683:0: style: The function 'UnloadUTF8' is never used. [unusedFunction]

^
src/raudio.c:1220:0: style: The function 'UnloadWaveSamples' is never used. [unusedFunction]

^
src/rmodels.c:1298:0: style: The function 'UpdateMeshBuffer' is never used. [unusedFunction]

^
src/raudio.c:945:0: style: The function 'UpdateSound' is never used. [unusedFunction]

^
src/rtextures.c:3394:0: style: The function 'UpdateTextureRec' is never used. [unusedFunction]

^
src/raudio.c:1162:0: style: The function 'WaveCopy' is never used. [unusedFunction]

^
src/raudio.c:1184:0: style: The function 'WaveCrop' is never used. [unusedFunction]

^
src/raudio.c:1129:0: style: The function 'WaveFormat' is never used. [unusedFunction]

^
src/external/glfw/src/null_init.c:39:0: style: The function '_glfwConnectNull' is never used. [unusedFunction]

^
src/external/glfw/src/wl_init.c:375:0: style: The function '_glfwConnectWayland' is never used. [unusedFunction]

^
src/external/glfw/src/x11_init.c:1165:0: style: The function '_glfwConnectX11' is never used. [unusedFunction]

^
src/external/glfw/deps/getopt.c:158:0: style: The function 'getopt_long' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:831:0: style: The function 'glfwCreateCursor' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:859:0: style: The function 'glfwCreateStandardCursor' is never used. [unusedFunction]

^
src/external/glfw/src/vulkan.c:297:0: style: The function 'glfwCreateWindowSurface' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:838:0: style: The function 'glfwFocusWindow' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:1462:0: style: The function 'glfwGetClipboardString' is never used. [unusedFunction]

^
src/external/glfw/src/context.c:642:0: style: The function 'glfwGetCurrentContext' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:776:0: style: The function 'glfwGetCursorPos' is never used. [unusedFunction]

^
src/external/glfw/src/egl_context.c:857:0: style: The function 'glfwGetEGLContext' is never used. [unusedFunction]

^
src/external/glfw/src/egl_context.c:851:0: style: The function 'glfwGetEGLDisplay' is never used. [unusedFunction]

^
src/external/glfw/src/egl_context.c:871:0: style: The function 'glfwGetEGLSurface' is never used. [unusedFunction]

^
src/external/glfw/src/init.c:516:0: style: The function 'glfwGetError' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:691:0: style: The function 'glfwGetFramebufferSize' is never used. [unusedFunction]

^
src/external/glfw/src/glx_context.c:677:0: style: The function 'glfwGetGLXContext' is never used. [unusedFunction]

^
src/external/glfw/src/glx_context.c:697:0: style: The function 'glfwGetGLXWindow' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:1337:0: style: The function 'glfwGetGamepadName' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:1368:0: style: The function 'glfwGetGamepadState' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:561:0: style: The function 'glfwGetInputMode' is never used. [unusedFunction]

^
src/external/glfw/src/vulkan.c:248:0: style: The function 'glfwGetInstanceProcAddress' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:1050:0: style: The function 'glfwGetJoystickAxes' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:1082:0: style: The function 'glfwGetJoystickButtons' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:1178:0: style: The function 'glfwGetJoystickGUID' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:1118:0: style: The function 'glfwGetJoystickHats' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:1150:0: style: The function 'glfwGetJoystickName' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:1222:0: style: The function 'glfwGetJoystickUserPointer' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:730:0: style: The function 'glfwGetKey' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:698:0: style: The function 'glfwGetKeyName' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:717:0: style: The function 'glfwGetKeyScancode' is never used. [unusedFunction]

^
src/external/glfw/src/monitor.c:382:0: style: The function 'glfwGetMonitorContentScale' is never used. [unusedFunction]

^
src/external/glfw/src/monitor.c:397:0: style: The function 'glfwGetMonitorName' is never used. [unusedFunction]

^
src/external/glfw/src/monitor.c:364:0: style: The function 'glfwGetMonitorPhysicalSize' is never used. [unusedFunction]

^
src/external/glfw/src/monitor.c:328:0: style: The function 'glfwGetMonitorPos' is never used. [unusedFunction]

^
src/external/glfw/src/monitor.c:415:0: style: The function 'glfwGetMonitorUserPointer' is never used. [unusedFunction]

^
src/external/glfw/src/monitor.c:343:0: style: The function 'glfwGetMonitorWorkarea' is never used. [unusedFunction]

^
src/external/glfw/src/monitor.c:306:0: style: The function 'glfwGetMonitors' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:753:0: style: The function 'glfwGetMouseButton' is never used. [unusedFunction]

^
src/external/glfw/src/osmesa_context.c:297:0: style: The function 'glfwGetOSMesaColorBuffer' is never used. [unusedFunction]

^
src/external/glfw/src/osmesa_context.c:373:0: style: The function 'glfwGetOSMesaContext' is never used. [unusedFunction]

^
src/external/glfw/src/osmesa_context.c:334:0: style: The function 'glfwGetOSMesaDepthBuffer' is never used. [unusedFunction]

^
src/external/glfw/src/vulkan.c:273:0: style: The function 'glfwGetPhysicalDevicePresentationSupport' is never used. [unusedFunction]

^
src/external/glfw/src/platform.c:114:0: style: The function 'glfwGetPlatform' is never used. [unusedFunction]

^
src/external/glfw/src/monitor.c:318:0: style: The function 'glfwGetPrimaryMonitor' is never used. [unusedFunction]

^
src/external/glfw/src/vulkan.c:230:0: style: The function 'glfwGetRequiredInstanceExtensions' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:1468:0: style: The function 'glfwGetTime' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:1495:0: style: The function 'glfwGetTimerFrequency' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:1489:0: style: The function 'glfwGetTimerValue' is never used. [unusedFunction]

^
src/external/glfw/src/init.c:506:0: style: The function 'glfwGetVersion' is never used. [unusedFunction]

^
src/external/glfw/src/platform.c:147:0: style: The function 'glfwGetVersionString' is never used. [unusedFunction]

^
src/external/glfw/src/monitor.c:448:0: style: The function 'glfwGetVideoMode' is never used. [unusedFunction]

^
src/external/glfw/src/monitor.c:431:0: style: The function 'glfwGetVideoModes' is never used. [unusedFunction]

^
src/external/glfw/src/wgl_context.c:758:0: style: The function 'glfwGetWGLContext' is never used. [unusedFunction]

^
src/external/glfw/src/wl_window.c:2861:0: style: The function 'glfwGetWaylandDisplay' is never used. [unusedFunction]

^
src/external/glfw/src/wl_monitor.c:266:0: style: The function 'glfwGetWaylandMonitor' is never used. [unusedFunction]

^
src/external/glfw/src/wl_window.c:2875:0: style: The function 'glfwGetWaylandWindow' is never used. [unusedFunction]

^
src/external/glfw/src/win32_monitor.c:534:0: style: The function 'glfwGetWin32Adapter' is never used. [unusedFunction]

^
src/external/glfw/src/win32_monitor.c:541:0: style: The function 'glfwGetWin32Monitor' is never used. [unusedFunction]

^
src/external/glfw/src/win32_window.c:2498:0: style: The function 'glfwGetWin32Window' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:848:0: style: The function 'glfwGetWindowAttrib' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:705:0: style: The function 'glfwGetWindowFrameSize' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:957:0: style: The function 'glfwGetWindowMonitor' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:740:0: style: The function 'glfwGetWindowOpacity' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:561:0: style: The function 'glfwGetWindowPos' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:588:0: style: The function 'glfwGetWindowSize' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:1014:0: style: The function 'glfwGetWindowUserPointer' is never used. [unusedFunction]

^
src/external/glfw/src/x11_monitor.c:603:0: style: The function 'glfwGetX11Adapter' is never used. [unusedFunction]

^
src/external/glfw/src/x11_window.c:3286:0: style: The function 'glfwGetX11Display' is never used. [unusedFunction]

^
src/external/glfw/src/x11_monitor.c:610:0: style: The function 'glfwGetX11Monitor' is never used. [unusedFunction]

^
src/external/glfw/src/x11_window.c:3339:0: style: The function 'glfwGetX11SelectionString' is never used. [unusedFunction]

^
src/external/glfw/src/x11_window.c:3299:0: style: The function 'glfwGetX11Window' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:825:0: style: The function 'glfwHideWindow' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:768:0: style: The function 'glfwIconifyWindow' is never used. [unusedFunction]

^
src/external/glfw/src/init.c:488:0: style: The function 'glfwInitAllocator' is never used. [unusedFunction]

^
src/external/glfw/src/init.c:460:0: style: The function 'glfwInitHint' is never used. [unusedFunction]

^
src/external/glfw/src/init.c:501:0: style: The function 'glfwInitVulkanLoader' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:1309:0: style: The function 'glfwJoystickIsGamepad' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:1025:0: style: The function 'glfwJoystickPresent' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:786:0: style: The function 'glfwMaximizeWindow' is never used. [unusedFunction]

^
src/external/glfw/src/platform.c:120:0: style: The function 'glfwPlatformSupported' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:1150:0: style: The function 'glfwPostEmptyEvent' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:692:0: style: The function 'glfwRawMouseMotionSupported' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:815:0: style: The function 'glfwRequestWindowAttention' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:777:0: style: The function 'glfwRestoreWindow' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:951:0: style: The function 'glfwSetCharCallback' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:961:0: style: The function 'glfwSetCharModsCallback' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:1454:0: style: The function 'glfwSetClipboardString' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:993:0: style: The function 'glfwSetCursorEnterCallback' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:799:0: style: The function 'glfwSetCursorPos' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:982:0: style: The function 'glfwSetCursorPosCallback' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:1015:0: style: The function 'glfwSetDropCallback' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:1100:0: style: The function 'glfwSetFramebufferSizeCallback' is never used. [unusedFunction]

^
src/external/glfw/src/monitor.c:459:0: style: The function 'glfwSetGamma' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:586:0: style: The function 'glfwSetInputMode' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:1238:0: style: The function 'glfwSetJoystickCallback' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:1206:0: style: The function 'glfwSetJoystickUserPointer' is never used. [unusedFunction]

^
src/external/glfw/src/monitor.c:424:0: style: The function 'glfwSetMonitorCallback' is never used. [unusedFunction]

^
src/external/glfw/src/monitor.c:406:0: style: The function 'glfwSetMonitorUserPointer' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:971:0: style: The function 'glfwSetMouseButtonCallback' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:1004:0: style: The function 'glfwSetScrollCallback' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:1475:0: style: The function 'glfwSetTime' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:662:0: style: The function 'glfwSetWindowAspectRatio' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:911:0: style: The function 'glfwSetWindowAttrib' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:1045:0: style: The function 'glfwSetWindowCloseCallback' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:1111:0: style: The function 'glfwSetWindowContentScaleCallback' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:1067:0: style: The function 'glfwSetWindowFocusCallback' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:528:0: style: The function 'glfwSetWindowIcon' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:1078:0: style: The function 'glfwSetWindowIconifyCallback' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:1089:0: style: The function 'glfwSetWindowMaximizeCallback' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:966:0: style: The function 'glfwSetWindowMonitor' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:749:0: style: The function 'glfwSetWindowOpacity' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:1023:0: style: The function 'glfwSetWindowPosCallback' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:1056:0: style: The function 'glfwSetWindowRefreshCallback' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:602:0: style: The function 'glfwSetWindowSize' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:1034:0: style: The function 'glfwSetWindowSizeCallback' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:617:0: style: The function 'glfwSetWindowSizeLimits' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:518:0: style: The function 'glfwSetWindowTitle' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:1005:0: style: The function 'glfwSetWindowUserPointer' is never used. [unusedFunction]

^
src/external/glfw/src/x11_window.c:3313:0: style: The function 'glfwSetX11SelectionString' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:799:0: style: The function 'glfwShowWindow' is never used. [unusedFunction]

^
src/external/glfw/src/input.c:1249:0: style: The function 'glfwUpdateGamepadMappings' is never used. [unusedFunction]

^
src/external/glfw/src/vulkan.c:224:0: style: The function 'glfwVulkanSupported' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:1128:0: style: The function 'glfwWaitEvents' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:1134:0: style: The function 'glfwWaitEventsTimeout' is never used. [unusedFunction]

^
src/external/glfw/src/window.c:438:0: style: The function 'glfwWindowHintString' is never used. [unusedFunction]

^
src/external/qoaplay.c:246:0: style: The function 'qoaplay_get_duration' is never used. [unusedFunction]

^
src/external/qoaplay.c:258:0: style: The function 'qoaplay_get_frame' is never used. [unusedFunction]

^
src/external/qoaplay.c:252:0: style: The function 'qoaplay_get_time' is never used. [unusedFunction]

^
src/external/stb_vorbis.c:5346:0: style: The function 'stb_vorbis_decode_filename' is never used. [unusedFunction]

^
src/external/stb_vorbis.c:4444:0: style: The function 'stb_vorbis_decode_frame_pushdata' is never used. [unusedFunction]

^
src/external/stb_vorbis.c:5386:0: style: The function 'stb_vorbis_decode_memory' is never used. [unusedFunction]

^
src/external/stb_vorbis.c:4317:0: style: The function 'stb_vorbis_get_comment' is never used. [unusedFunction]

^
src/external/stb_vorbis.c:4326:0: style: The function 'stb_vorbis_get_error' is never used. [unusedFunction]

^
src/external/stb_vorbis.c:4297:0: style: The function 'stb_vorbis_get_sample_offset' is never used. [unusedFunction]

^
src/external/stb_vorbis.c:5453:0: style: The function 'stb_vorbis_get_samples_float' is never used. [unusedFunction]

^
src/external/stb_vorbis.c:5426:0: style: The function 'stb_vorbis_get_samples_float_interleaved' is never used. [unusedFunction]

^
src/external/stb_vorbis.c:5328:0: style: The function 'stb_vorbis_get_samples_short' is never used. [unusedFunction]

^
src/external/stb_vorbis.c:4514:0: style: The function 'stb_vorbis_open_pushdata' is never used. [unusedFunction]

^
src/external/stb_vorbis.c:4919:0: style: The function 'stb_vorbis_seek' is never used. [unusedFunction]

^
src/external/stb_vorbis.c:5021:0: style: The function 'stb_vorbis_stream_length_in_seconds' is never used. [unusedFunction]

^
nofile:0:0: information: Cppcheck cannot find all the include files (use --check-config for details) [missingInclude]

